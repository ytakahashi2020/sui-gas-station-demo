{
  "version": 3,
  "sources": ["../../../../../../../src/grpc/proto/sui/rpc/v2/ledger_service.client.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\n// @generated by protobuf-ts 2.9.6 with parameter force_server_none,optimize_code_size,ts_nocheck\n// @generated from protobuf file \"sui/rpc/v2/ledger_service.proto\" (package \"sui.rpc.v2\", syntax proto3)\n// tslint:disable\n// @ts-nocheck\n//\n// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n//\nimport type { RpcTransport } from '@protobuf-ts/runtime-rpc';\nimport type { ServiceInfo } from '@protobuf-ts/runtime-rpc';\nimport { LedgerService } from './ledger_service.js';\nimport type { GetEpochResponse } from './ledger_service.js';\nimport type { GetEpochRequest } from './ledger_service.js';\nimport type { GetCheckpointResponse } from './ledger_service.js';\nimport type { GetCheckpointRequest } from './ledger_service.js';\nimport type { BatchGetTransactionsResponse } from './ledger_service.js';\nimport type { BatchGetTransactionsRequest } from './ledger_service.js';\nimport type { GetTransactionResponse } from './ledger_service.js';\nimport type { GetTransactionRequest } from './ledger_service.js';\nimport type { BatchGetObjectsResponse } from './ledger_service.js';\nimport type { BatchGetObjectsRequest } from './ledger_service.js';\nimport type { GetObjectResponse } from './ledger_service.js';\nimport type { GetObjectRequest } from './ledger_service.js';\nimport { stackIntercept } from '@protobuf-ts/runtime-rpc';\nimport type { GetServiceInfoResponse } from './ledger_service.js';\nimport type { GetServiceInfoRequest } from './ledger_service.js';\nimport type { UnaryCall } from '@protobuf-ts/runtime-rpc';\nimport type { RpcOptions } from '@protobuf-ts/runtime-rpc';\n/**\n * @generated from protobuf service sui.rpc.v2.LedgerService\n */\nexport interface ILedgerServiceClient {\n\t/**\n\t * Query the service for general information about its current state.\n\t *\n\t * @generated from protobuf rpc: GetServiceInfo(sui.rpc.v2.GetServiceInfoRequest) returns (sui.rpc.v2.GetServiceInfoResponse);\n\t */\n\tgetServiceInfo(\n\t\tinput: GetServiceInfoRequest,\n\t\toptions?: RpcOptions,\n\t): UnaryCall<GetServiceInfoRequest, GetServiceInfoResponse>;\n\t/**\n\t * @generated from protobuf rpc: GetObject(sui.rpc.v2.GetObjectRequest) returns (sui.rpc.v2.GetObjectResponse);\n\t */\n\tgetObject(\n\t\tinput: GetObjectRequest,\n\t\toptions?: RpcOptions,\n\t): UnaryCall<GetObjectRequest, GetObjectResponse>;\n\t/**\n\t * @generated from protobuf rpc: BatchGetObjects(sui.rpc.v2.BatchGetObjectsRequest) returns (sui.rpc.v2.BatchGetObjectsResponse);\n\t */\n\tbatchGetObjects(\n\t\tinput: BatchGetObjectsRequest,\n\t\toptions?: RpcOptions,\n\t): UnaryCall<BatchGetObjectsRequest, BatchGetObjectsResponse>;\n\t/**\n\t * @generated from protobuf rpc: GetTransaction(sui.rpc.v2.GetTransactionRequest) returns (sui.rpc.v2.GetTransactionResponse);\n\t */\n\tgetTransaction(\n\t\tinput: GetTransactionRequest,\n\t\toptions?: RpcOptions,\n\t): UnaryCall<GetTransactionRequest, GetTransactionResponse>;\n\t/**\n\t * @generated from protobuf rpc: BatchGetTransactions(sui.rpc.v2.BatchGetTransactionsRequest) returns (sui.rpc.v2.BatchGetTransactionsResponse);\n\t */\n\tbatchGetTransactions(\n\t\tinput: BatchGetTransactionsRequest,\n\t\toptions?: RpcOptions,\n\t): UnaryCall<BatchGetTransactionsRequest, BatchGetTransactionsResponse>;\n\t/**\n\t * @generated from protobuf rpc: GetCheckpoint(sui.rpc.v2.GetCheckpointRequest) returns (sui.rpc.v2.GetCheckpointResponse);\n\t */\n\tgetCheckpoint(\n\t\tinput: GetCheckpointRequest,\n\t\toptions?: RpcOptions,\n\t): UnaryCall<GetCheckpointRequest, GetCheckpointResponse>;\n\t/**\n\t * @generated from protobuf rpc: GetEpoch(sui.rpc.v2.GetEpochRequest) returns (sui.rpc.v2.GetEpochResponse);\n\t */\n\tgetEpoch(\n\t\tinput: GetEpochRequest,\n\t\toptions?: RpcOptions,\n\t): UnaryCall<GetEpochRequest, GetEpochResponse>;\n}\n/**\n * @generated from protobuf service sui.rpc.v2.LedgerService\n */\nexport class LedgerServiceClient implements ILedgerServiceClient, ServiceInfo {\n\ttypeName = LedgerService.typeName;\n\tmethods = LedgerService.methods;\n\toptions = LedgerService.options;\n\tconstructor(private readonly _transport: RpcTransport) {}\n\t/**\n\t * Query the service for general information about its current state.\n\t *\n\t * @generated from protobuf rpc: GetServiceInfo(sui.rpc.v2.GetServiceInfoRequest) returns (sui.rpc.v2.GetServiceInfoResponse);\n\t */\n\tgetServiceInfo(\n\t\tinput: GetServiceInfoRequest,\n\t\toptions?: RpcOptions,\n\t): UnaryCall<GetServiceInfoRequest, GetServiceInfoResponse> {\n\t\tconst method = this.methods[0],\n\t\t\topt = this._transport.mergeOptions(options);\n\t\treturn stackIntercept<GetServiceInfoRequest, GetServiceInfoResponse>(\n\t\t\t'unary',\n\t\t\tthis._transport,\n\t\t\tmethod,\n\t\t\topt,\n\t\t\tinput,\n\t\t);\n\t}\n\t/**\n\t * @generated from protobuf rpc: GetObject(sui.rpc.v2.GetObjectRequest) returns (sui.rpc.v2.GetObjectResponse);\n\t */\n\tgetObject(\n\t\tinput: GetObjectRequest,\n\t\toptions?: RpcOptions,\n\t): UnaryCall<GetObjectRequest, GetObjectResponse> {\n\t\tconst method = this.methods[1],\n\t\t\topt = this._transport.mergeOptions(options);\n\t\treturn stackIntercept<GetObjectRequest, GetObjectResponse>(\n\t\t\t'unary',\n\t\t\tthis._transport,\n\t\t\tmethod,\n\t\t\topt,\n\t\t\tinput,\n\t\t);\n\t}\n\t/**\n\t * @generated from protobuf rpc: BatchGetObjects(sui.rpc.v2.BatchGetObjectsRequest) returns (sui.rpc.v2.BatchGetObjectsResponse);\n\t */\n\tbatchGetObjects(\n\t\tinput: BatchGetObjectsRequest,\n\t\toptions?: RpcOptions,\n\t): UnaryCall<BatchGetObjectsRequest, BatchGetObjectsResponse> {\n\t\tconst method = this.methods[2],\n\t\t\topt = this._transport.mergeOptions(options);\n\t\treturn stackIntercept<BatchGetObjectsRequest, BatchGetObjectsResponse>(\n\t\t\t'unary',\n\t\t\tthis._transport,\n\t\t\tmethod,\n\t\t\topt,\n\t\t\tinput,\n\t\t);\n\t}\n\t/**\n\t * @generated from protobuf rpc: GetTransaction(sui.rpc.v2.GetTransactionRequest) returns (sui.rpc.v2.GetTransactionResponse);\n\t */\n\tgetTransaction(\n\t\tinput: GetTransactionRequest,\n\t\toptions?: RpcOptions,\n\t): UnaryCall<GetTransactionRequest, GetTransactionResponse> {\n\t\tconst method = this.methods[3],\n\t\t\topt = this._transport.mergeOptions(options);\n\t\treturn stackIntercept<GetTransactionRequest, GetTransactionResponse>(\n\t\t\t'unary',\n\t\t\tthis._transport,\n\t\t\tmethod,\n\t\t\topt,\n\t\t\tinput,\n\t\t);\n\t}\n\t/**\n\t * @generated from protobuf rpc: BatchGetTransactions(sui.rpc.v2.BatchGetTransactionsRequest) returns (sui.rpc.v2.BatchGetTransactionsResponse);\n\t */\n\tbatchGetTransactions(\n\t\tinput: BatchGetTransactionsRequest,\n\t\toptions?: RpcOptions,\n\t): UnaryCall<BatchGetTransactionsRequest, BatchGetTransactionsResponse> {\n\t\tconst method = this.methods[4],\n\t\t\topt = this._transport.mergeOptions(options);\n\t\treturn stackIntercept<BatchGetTransactionsRequest, BatchGetTransactionsResponse>(\n\t\t\t'unary',\n\t\t\tthis._transport,\n\t\t\tmethod,\n\t\t\topt,\n\t\t\tinput,\n\t\t);\n\t}\n\t/**\n\t * @generated from protobuf rpc: GetCheckpoint(sui.rpc.v2.GetCheckpointRequest) returns (sui.rpc.v2.GetCheckpointResponse);\n\t */\n\tgetCheckpoint(\n\t\tinput: GetCheckpointRequest,\n\t\toptions?: RpcOptions,\n\t): UnaryCall<GetCheckpointRequest, GetCheckpointResponse> {\n\t\tconst method = this.methods[5],\n\t\t\topt = this._transport.mergeOptions(options);\n\t\treturn stackIntercept<GetCheckpointRequest, GetCheckpointResponse>(\n\t\t\t'unary',\n\t\t\tthis._transport,\n\t\t\tmethod,\n\t\t\topt,\n\t\t\tinput,\n\t\t);\n\t}\n\t/**\n\t * @generated from protobuf rpc: GetEpoch(sui.rpc.v2.GetEpochRequest) returns (sui.rpc.v2.GetEpochResponse);\n\t */\n\tgetEpoch(\n\t\tinput: GetEpochRequest,\n\t\toptions?: RpcOptions,\n\t): UnaryCall<GetEpochRequest, GetEpochResponse> {\n\t\tconst method = this.methods[6],\n\t\t\topt = this._transport.mergeOptions(options);\n\t\treturn stackIntercept<GetEpochRequest, GetEpochResponse>(\n\t\t\t'unary',\n\t\t\tthis._transport,\n\t\t\tmethod,\n\t\t\topt,\n\t\t\tinput,\n\t\t);\n\t}\n}\n"],
  "mappings": "AAaA,SAAS,qBAAqB;AAa9B,SAAS,sBAAsB;AAgExB,MAAM,oBAAiE;AAAA,EAI7E,YAA6B,YAA0B;AAA1B;AAH7B,oBAAW,cAAc;AACzB,mBAAU,cAAc;AACxB,mBAAU,cAAc;AAAA,EACgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMxD,eACC,OACA,SAC2D;AAC3D,UAAM,SAAS,KAAK,QAAQ,CAAC,GAC5B,MAAM,KAAK,WAAW,aAAa,OAAO;AAC3C,WAAO;AAAA,MACN;AAAA,MACA,KAAK;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAAA,EACD;AAAA;AAAA;AAAA;AAAA,EAIA,UACC,OACA,SACiD;AACjD,UAAM,SAAS,KAAK,QAAQ,CAAC,GAC5B,MAAM,KAAK,WAAW,aAAa,OAAO;AAC3C,WAAO;AAAA,MACN;AAAA,MACA,KAAK;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAAA,EACD;AAAA;AAAA;AAAA;AAAA,EAIA,gBACC,OACA,SAC6D;AAC7D,UAAM,SAAS,KAAK,QAAQ,CAAC,GAC5B,MAAM,KAAK,WAAW,aAAa,OAAO;AAC3C,WAAO;AAAA,MACN;AAAA,MACA,KAAK;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAAA,EACD;AAAA;AAAA;AAAA;AAAA,EAIA,eACC,OACA,SAC2D;AAC3D,UAAM,SAAS,KAAK,QAAQ,CAAC,GAC5B,MAAM,KAAK,WAAW,aAAa,OAAO;AAC3C,WAAO;AAAA,MACN;AAAA,MACA,KAAK;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAAA,EACD;AAAA;AAAA;AAAA;AAAA,EAIA,qBACC,OACA,SACuE;AACvE,UAAM,SAAS,KAAK,QAAQ,CAAC,GAC5B,MAAM,KAAK,WAAW,aAAa,OAAO;AAC3C,WAAO;AAAA,MACN;AAAA,MACA,KAAK;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAAA,EACD;AAAA;AAAA;AAAA;AAAA,EAIA,cACC,OACA,SACyD;AACzD,UAAM,SAAS,KAAK,QAAQ,CAAC,GAC5B,MAAM,KAAK,WAAW,aAAa,OAAO;AAC3C,WAAO;AAAA,MACN;AAAA,MACA,KAAK;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAAA,EACD;AAAA;AAAA;AAAA;AAAA,EAIA,SACC,OACA,SAC+C;AAC/C,UAAM,SAAS,KAAK,QAAQ,CAAC,GAC5B,MAAM,KAAK,WAAW,aAAa,OAAO;AAC3C,WAAO;AAAA,MACN;AAAA,MACA,KAAK;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAAA,EACD;AACD;",
  "names": []
}
