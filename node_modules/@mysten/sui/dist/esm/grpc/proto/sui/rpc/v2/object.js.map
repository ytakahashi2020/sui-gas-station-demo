{
  "version": 3,
  "sources": ["../../../../../../../src/grpc/proto/sui/rpc/v2/object.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\n// @generated by protobuf-ts 2.9.6 with parameter force_server_none,optimize_code_size,ts_nocheck\n// @generated from protobuf file \"sui/rpc/v2/object.proto\" (package \"sui.rpc.v2\", syntax proto3)\n// tslint:disable\n// @ts-nocheck\n//\n// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n//\nimport { MessageType } from '@protobuf-ts/runtime';\nimport { Value } from '../../../google/protobuf/struct.js';\nimport { Package } from './move_package.js';\nimport { Owner } from './owner.js';\nimport { Bcs } from './bcs.js';\n/**\n * An object on the Sui blockchain.\n *\n * @generated from protobuf message sui.rpc.v2.Object\n */\nexport interface Object {\n\t/**\n\t * This Object serialized as BCS.\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2.Bcs bcs = 1;\n\t */\n\tbcs?: Bcs;\n\t/**\n\t * `ObjectId` for this object.\n\t *\n\t * @generated from protobuf field: optional string object_id = 2;\n\t */\n\tobjectId?: string;\n\t/**\n\t * Version of the object.\n\t *\n\t * @generated from protobuf field: optional uint64 version = 3;\n\t */\n\tversion?: bigint;\n\t/**\n\t * The digest of this Object.\n\t *\n\t * @generated from protobuf field: optional string digest = 4;\n\t */\n\tdigest?: string;\n\t/**\n\t * Owner of the object.\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2.Owner owner = 5;\n\t */\n\towner?: Owner;\n\t/**\n\t * The type of this object.\n\t *\n\t * This will be 'package' for packages and a StructTag for move structs.\n\t *\n\t * @generated from protobuf field: optional string object_type = 6;\n\t */\n\tobjectType?: string;\n\t/**\n\t * DEPRECATED this field is no longer used to determine whether a tx can transfer this\n\t * object. Instead, it is always calculated from the objects type when loaded in execution.\n\t *\n\t * Only set for Move structs\n\t *\n\t * @generated from protobuf field: optional bool has_public_transfer = 7;\n\t */\n\thasPublicTransfer?: boolean;\n\t/**\n\t * BCS bytes of a Move struct value.\n\t *\n\t * Only set for Move structs\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2.Bcs contents = 8;\n\t */\n\tcontents?: Bcs;\n\t/**\n\t * Package information for Move Packages\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2.Package package = 9;\n\t */\n\tpackage?: Package;\n\t/**\n\t * The digest of the transaction that created or last mutated this object\n\t *\n\t * @generated from protobuf field: optional string previous_transaction = 10;\n\t */\n\tpreviousTransaction?: string;\n\t/**\n\t * The amount of SUI to rebate if this object gets deleted.\n\t * This number is re-calculated each time the object is mutated based on\n\t * the present storage gas price.\n\t *\n\t * @generated from protobuf field: optional uint64 storage_rebate = 11;\n\t */\n\tstorageRebate?: bigint;\n\t/**\n\t * JSON rendering of the object.\n\t *\n\t * @generated from protobuf field: optional google.protobuf.Value json = 100;\n\t */\n\tjson?: Value;\n\t/**\n\t * Current balance if this object is a `0x2::coin::Coin<T>`\n\t *\n\t * @generated from protobuf field: optional uint64 balance = 101;\n\t */\n\tbalance?: bigint;\n}\n/**\n * Set of Objects\n *\n * @generated from protobuf message sui.rpc.v2.ObjectSet\n */\nexport interface ObjectSet {\n\t/**\n\t * Objects are sorted by the key `(object_id, version)`.\n\t *\n\t * @generated from protobuf field: repeated sui.rpc.v2.Object objects = 1;\n\t */\n\tobjects: Object[];\n}\n// @generated message type with reflection information, may provide speed optimized methods\nclass Object$Type extends MessageType<Object> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.Object', [\n\t\t\t{ no: 1, name: 'bcs', kind: 'message', T: () => Bcs },\n\t\t\t{ no: 2, name: 'object_id', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{\n\t\t\t\tno: 3,\n\t\t\t\tname: 'version',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{ no: 4, name: 'digest', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 5, name: 'owner', kind: 'message', T: () => Owner },\n\t\t\t{ no: 6, name: 'object_type', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 7, name: 'has_public_transfer', kind: 'scalar', opt: true, T: 8 /*ScalarType.BOOL*/ },\n\t\t\t{ no: 8, name: 'contents', kind: 'message', T: () => Bcs },\n\t\t\t{ no: 9, name: 'package', kind: 'message', T: () => Package },\n\t\t\t{\n\t\t\t\tno: 10,\n\t\t\t\tname: 'previous_transaction',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 9 /*ScalarType.STRING*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 11,\n\t\t\t\tname: 'storage_rebate',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{ no: 100, name: 'json', kind: 'message', T: () => Value },\n\t\t\t{\n\t\t\t\tno: 101,\n\t\t\t\tname: 'balance',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.Object\n */\nexport const Object = new Object$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ObjectSet$Type extends MessageType<ObjectSet> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.ObjectSet', [\n\t\t\t{ no: 1, name: 'objects', kind: 'message', repeat: 1 /*RepeatType.PACKED*/, T: () => Object },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.ObjectSet\n */\nexport const ObjectSet = new ObjectSet$Type();\n"],
  "mappings": "AAWA,SAAS,mBAAmB;AAC5B,SAAS,aAAa;AACtB,SAAS,eAAe;AACxB,SAAS,aAAa;AACtB,SAAS,WAAW;AA6GpB,MAAM,oBAAoB,YAAoB;AAAA,EAC7C,cAAc;AACb,UAAM,qBAAqB;AAAA,MAC1B,EAAE,IAAI,GAAG,MAAM,OAAO,MAAM,WAAW,GAAG,MAAM,IAAI;AAAA,MACpD;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAa,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,MAClF;AAAA,QACC,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA,QACN,KAAK;AAAA,QACL,GAAG;AAAA,QACH,GAAG;AAAA,MACJ;AAAA,MACA;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAU,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,MAC/E,EAAE,IAAI,GAAG,MAAM,SAAS,MAAM,WAAW,GAAG,MAAM,MAAM;AAAA,MACxD;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAe,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,MACpF;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAuB,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAsB;AAAA,MAC1F,EAAE,IAAI,GAAG,MAAM,YAAY,MAAM,WAAW,GAAG,MAAM,IAAI;AAAA,MACzD,EAAE,IAAI,GAAG,MAAM,WAAW,MAAM,WAAW,GAAG,MAAM,QAAQ;AAAA,MAC5D;AAAA,QACC,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA,QACN,KAAK;AAAA,QACL,GAAG;AAAA,MACJ;AAAA,MACA;AAAA,QACC,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA,QACN,KAAK;AAAA,QACL,GAAG;AAAA,QACH,GAAG;AAAA,MACJ;AAAA,MACA,EAAE,IAAI,KAAK,MAAM,QAAQ,MAAM,WAAW,GAAG,MAAM,MAAM;AAAA,MACzD;AAAA,QACC,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA,QACN,KAAK;AAAA,QACL,GAAG;AAAA,QACH,GAAG;AAAA,MACJ;AAAA,IACD,CAAC;AAAA,EACF;AACD;AAIO,MAAM,SAAS,IAAI,YAAY;AAEtC,MAAM,uBAAuB,YAAuB;AAAA,EACnD,cAAc;AACb,UAAM,wBAAwB;AAAA,MAC7B,EAAE,IAAI,GAAG,MAAM,WAAW,MAAM,WAAW,QAAQ,GAAyB,GAAG,MAAM,OAAO;AAAA,IAC7F,CAAC;AAAA,EACF;AACD;AAIO,MAAM,YAAY,IAAI,eAAe;",
  "names": []
}
