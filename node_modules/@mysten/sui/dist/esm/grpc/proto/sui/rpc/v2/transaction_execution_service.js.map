{
  "version": 3,
  "sources": ["../../../../../../../src/grpc/proto/sui/rpc/v2/transaction_execution_service.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\n// @generated by protobuf-ts 2.9.6 with parameter force_server_none,optimize_code_size,ts_nocheck\n// @generated from protobuf file \"sui/rpc/v2/transaction_execution_service.proto\" (package \"sui.rpc.v2\", syntax proto3)\n// tslint:disable\n// @ts-nocheck\n//\n// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n//\nimport { ServiceType } from '@protobuf-ts/runtime-rpc';\nimport { MessageType } from '@protobuf-ts/runtime';\nimport { Value } from '../../../google/protobuf/struct.js';\nimport { Bcs } from './bcs.js';\nimport { Argument } from './argument.js';\nimport { ExecutedTransaction } from './executed_transaction.js';\nimport { FieldMask } from '../../../google/protobuf/field_mask.js';\nimport { UserSignature } from './signature.js';\nimport { Transaction } from './transaction.js';\n/**\n * @generated from protobuf message sui.rpc.v2.ExecuteTransactionRequest\n */\nexport interface ExecuteTransactionRequest {\n\t/**\n\t * The transaction to execute.\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2.Transaction transaction = 1;\n\t */\n\ttransaction?: Transaction;\n\t/**\n\t * Set of `UserSignature`s authorizing the execution of the provided\n\t * transaction.\n\t *\n\t * @generated from protobuf field: repeated sui.rpc.v2.UserSignature signatures = 2;\n\t */\n\tsignatures: UserSignature[];\n\t/**\n\t * Mask specifying which fields to read.\n\t * If no mask is specified, defaults to `effects.status,checkpoint`.\n\t *\n\t * @generated from protobuf field: optional google.protobuf.FieldMask read_mask = 3;\n\t */\n\treadMask?: FieldMask;\n}\n/**\n * Response message for `NodeService.ExecuteTransaction`.\n *\n * @generated from protobuf message sui.rpc.v2.ExecuteTransactionResponse\n */\nexport interface ExecuteTransactionResponse {\n\t/**\n\t * @generated from protobuf field: optional sui.rpc.v2.ExecutedTransaction transaction = 1;\n\t */\n\ttransaction?: ExecutedTransaction;\n}\n/**\n * @generated from protobuf message sui.rpc.v2.SimulateTransactionRequest\n */\nexport interface SimulateTransactionRequest {\n\t/**\n\t * @generated from protobuf field: optional sui.rpc.v2.Transaction transaction = 1;\n\t */\n\ttransaction?: Transaction;\n\t/**\n\t * Mask specifying which fields to read.\n\t *\n\t * @generated from protobuf field: optional google.protobuf.FieldMask read_mask = 2;\n\t */\n\treadMask?: FieldMask;\n\t/**\n\t * Specify whether checks should be ENABLED (default) or DISABLED while executing the transaction\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2.SimulateTransactionRequest.TransactionChecks checks = 3;\n\t */\n\tchecks?: SimulateTransactionRequest_TransactionChecks;\n\t/**\n\t * Perform gas selection based on a budget estimation and include the\n\t * selected gas payment and budget in the response.\n\t *\n\t * This option will be ignored if `checks` is `DISABLED`.\n\t *\n\t * @generated from protobuf field: optional bool do_gas_selection = 4;\n\t */\n\tdoGasSelection?: boolean;\n}\n/**\n * buf:lint:ignore ENUM_ZERO_VALUE_SUFFIX\n *\n * @generated from protobuf enum sui.rpc.v2.SimulateTransactionRequest.TransactionChecks\n */\nexport enum SimulateTransactionRequest_TransactionChecks {\n\t/**\n\t * @generated from protobuf enum value: ENABLED = 0;\n\t */\n\tENABLED = 0,\n\t/**\n\t * @generated from protobuf enum value: DISABLED = 1;\n\t */\n\tDISABLED = 1,\n}\n/**\n * @generated from protobuf message sui.rpc.v2.SimulateTransactionResponse\n */\nexport interface SimulateTransactionResponse {\n\t/**\n\t * @generated from protobuf field: optional sui.rpc.v2.ExecutedTransaction transaction = 1;\n\t */\n\ttransaction?: ExecutedTransaction;\n\t/**\n\t * @generated from protobuf field: repeated sui.rpc.v2.CommandResult command_outputs = 2;\n\t */\n\tcommandOutputs: CommandResult[];\n}\n/**\n * An intermediate result/output from the execution of a single command\n *\n * @generated from protobuf message sui.rpc.v2.CommandResult\n */\nexport interface CommandResult {\n\t/**\n\t * @generated from protobuf field: repeated sui.rpc.v2.CommandOutput return_values = 1;\n\t */\n\treturnValues: CommandOutput[];\n\t/**\n\t * @generated from protobuf field: repeated sui.rpc.v2.CommandOutput mutated_by_ref = 2;\n\t */\n\tmutatedByRef: CommandOutput[];\n}\n/**\n * @generated from protobuf message sui.rpc.v2.CommandOutput\n */\nexport interface CommandOutput {\n\t/**\n\t * @generated from protobuf field: optional sui.rpc.v2.Argument argument = 1;\n\t */\n\targument?: Argument;\n\t/**\n\t * @generated from protobuf field: optional sui.rpc.v2.Bcs value = 2;\n\t */\n\tvalue?: Bcs;\n\t/**\n\t * JSON rendering of the output.\n\t *\n\t * @generated from protobuf field: optional google.protobuf.Value json = 3;\n\t */\n\tjson?: Value;\n}\n// @generated message type with reflection information, may provide speed optimized methods\nclass ExecuteTransactionRequest$Type extends MessageType<ExecuteTransactionRequest> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.ExecuteTransactionRequest', [\n\t\t\t{ no: 1, name: 'transaction', kind: 'message', T: () => Transaction },\n\t\t\t{\n\t\t\t\tno: 2,\n\t\t\t\tname: 'signatures',\n\t\t\t\tkind: 'message',\n\t\t\t\trepeat: 1 /*RepeatType.PACKED*/,\n\t\t\t\tT: () => UserSignature,\n\t\t\t},\n\t\t\t{ no: 3, name: 'read_mask', kind: 'message', T: () => FieldMask },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.ExecuteTransactionRequest\n */\nexport const ExecuteTransactionRequest = new ExecuteTransactionRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ExecuteTransactionResponse$Type extends MessageType<ExecuteTransactionResponse> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.ExecuteTransactionResponse', [\n\t\t\t{ no: 1, name: 'transaction', kind: 'message', T: () => ExecutedTransaction },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.ExecuteTransactionResponse\n */\nexport const ExecuteTransactionResponse = new ExecuteTransactionResponse$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass SimulateTransactionRequest$Type extends MessageType<SimulateTransactionRequest> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.SimulateTransactionRequest', [\n\t\t\t{ no: 1, name: 'transaction', kind: 'message', T: () => Transaction },\n\t\t\t{ no: 2, name: 'read_mask', kind: 'message', T: () => FieldMask },\n\t\t\t{\n\t\t\t\tno: 3,\n\t\t\t\tname: 'checks',\n\t\t\t\tkind: 'enum',\n\t\t\t\topt: true,\n\t\t\t\tT: () => [\n\t\t\t\t\t'sui.rpc.v2.SimulateTransactionRequest.TransactionChecks',\n\t\t\t\t\tSimulateTransactionRequest_TransactionChecks,\n\t\t\t\t],\n\t\t\t},\n\t\t\t{ no: 4, name: 'do_gas_selection', kind: 'scalar', opt: true, T: 8 /*ScalarType.BOOL*/ },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.SimulateTransactionRequest\n */\nexport const SimulateTransactionRequest = new SimulateTransactionRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass SimulateTransactionResponse$Type extends MessageType<SimulateTransactionResponse> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.SimulateTransactionResponse', [\n\t\t\t{ no: 1, name: 'transaction', kind: 'message', T: () => ExecutedTransaction },\n\t\t\t{\n\t\t\t\tno: 2,\n\t\t\t\tname: 'command_outputs',\n\t\t\t\tkind: 'message',\n\t\t\t\trepeat: 1 /*RepeatType.PACKED*/,\n\t\t\t\tT: () => CommandResult,\n\t\t\t},\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.SimulateTransactionResponse\n */\nexport const SimulateTransactionResponse = new SimulateTransactionResponse$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass CommandResult$Type extends MessageType<CommandResult> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.CommandResult', [\n\t\t\t{\n\t\t\t\tno: 1,\n\t\t\t\tname: 'return_values',\n\t\t\t\tkind: 'message',\n\t\t\t\trepeat: 1 /*RepeatType.PACKED*/,\n\t\t\t\tT: () => CommandOutput,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 2,\n\t\t\t\tname: 'mutated_by_ref',\n\t\t\t\tkind: 'message',\n\t\t\t\trepeat: 1 /*RepeatType.PACKED*/,\n\t\t\t\tT: () => CommandOutput,\n\t\t\t},\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.CommandResult\n */\nexport const CommandResult = new CommandResult$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass CommandOutput$Type extends MessageType<CommandOutput> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.CommandOutput', [\n\t\t\t{ no: 1, name: 'argument', kind: 'message', T: () => Argument },\n\t\t\t{ no: 2, name: 'value', kind: 'message', T: () => Bcs },\n\t\t\t{ no: 3, name: 'json', kind: 'message', T: () => Value },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.CommandOutput\n */\nexport const CommandOutput = new CommandOutput$Type();\n/**\n * @generated ServiceType for protobuf service sui.rpc.v2.TransactionExecutionService\n */\nexport const TransactionExecutionService = new ServiceType(\n\t'sui.rpc.v2.TransactionExecutionService',\n\t[\n\t\t{\n\t\t\tname: 'ExecuteTransaction',\n\t\t\toptions: {},\n\t\t\tI: ExecuteTransactionRequest,\n\t\t\tO: ExecuteTransactionResponse,\n\t\t},\n\t\t{\n\t\t\tname: 'SimulateTransaction',\n\t\t\toptions: {},\n\t\t\tI: SimulateTransactionRequest,\n\t\t\tO: SimulateTransactionResponse,\n\t\t},\n\t],\n);\n"],
  "mappings": "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",
  "names": ["SimulateTransactionRequest_TransactionChecks"]
}
