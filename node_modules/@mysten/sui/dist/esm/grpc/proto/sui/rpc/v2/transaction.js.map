{
  "version": 3,
  "sources": ["../../../../../../../src/grpc/proto/sui/rpc/v2/transaction.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\n// @generated by protobuf-ts 2.9.6 with parameter force_server_none,optimize_code_size,ts_nocheck\n// @generated from protobuf file \"sui/rpc/v2/transaction.proto\" (package \"sui.rpc.v2\", syntax proto3)\n// tslint:disable\n// @ts-nocheck\n//\n// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n//\nimport { MessageType } from '@protobuf-ts/runtime';\nimport { Duration } from '../../../google/protobuf/duration.js';\nimport { Jwk } from './jwk.js';\nimport { JwkId } from './jwk.js';\nimport { Object } from './object.js';\nimport { Timestamp } from '../../../google/protobuf/timestamp.js';\nimport { Argument } from './argument.js';\nimport { Input } from './input.js';\nimport { ObjectReference } from './object_reference.js';\nimport { Bcs } from './bcs.js';\n/**\n * A transaction.\n *\n * @generated from protobuf message sui.rpc.v2.Transaction\n */\nexport interface Transaction {\n\t/**\n\t * This Transaction serialized as BCS.\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2.Bcs bcs = 1;\n\t */\n\tbcs?: Bcs;\n\t/**\n\t * The digest of this Transaction.\n\t *\n\t * @generated from protobuf field: optional string digest = 2;\n\t */\n\tdigest?: string;\n\t/**\n\t * Version of this Transaction.\n\t *\n\t * @generated from protobuf field: optional int32 version = 3;\n\t */\n\tversion?: number;\n\t/**\n\t * @generated from protobuf field: optional sui.rpc.v2.TransactionKind kind = 4;\n\t */\n\tkind?: TransactionKind;\n\t/**\n\t * @generated from protobuf field: optional string sender = 5;\n\t */\n\tsender?: string;\n\t/**\n\t * @generated from protobuf field: optional sui.rpc.v2.GasPayment gas_payment = 6;\n\t */\n\tgasPayment?: GasPayment;\n\t/**\n\t * @generated from protobuf field: optional sui.rpc.v2.TransactionExpiration expiration = 7;\n\t */\n\texpiration?: TransactionExpiration;\n}\n/**\n * Payment information for executing a transaction.\n *\n * @generated from protobuf message sui.rpc.v2.GasPayment\n */\nexport interface GasPayment {\n\t/**\n\t * Set of gas objects to use for payment.\n\t *\n\t * @generated from protobuf field: repeated sui.rpc.v2.ObjectReference objects = 1;\n\t */\n\tobjects: ObjectReference[];\n\t/**\n\t * Owner of the gas objects, either the transaction sender or a sponsor.\n\t *\n\t * @generated from protobuf field: optional string owner = 2;\n\t */\n\towner?: string;\n\t/**\n\t * Gas unit price to use when charging for computation.\n\t *\n\t * Must be greater than or equal to the network's current RGP (reference gas price).\n\t *\n\t * @generated from protobuf field: optional uint64 price = 3;\n\t */\n\tprice?: bigint;\n\t/**\n\t * Total budget willing to spend for the execution of a transaction.\n\t *\n\t * @generated from protobuf field: optional uint64 budget = 4;\n\t */\n\tbudget?: bigint;\n}\n/**\n * A TTL for a transaction.\n *\n * @generated from protobuf message sui.rpc.v2.TransactionExpiration\n */\nexport interface TransactionExpiration {\n\t/**\n\t * @generated from protobuf field: optional sui.rpc.v2.TransactionExpiration.TransactionExpirationKind kind = 1;\n\t */\n\tkind?: TransactionExpiration_TransactionExpirationKind;\n\t/**\n\t * @generated from protobuf field: optional uint64 epoch = 2;\n\t */\n\tepoch?: bigint;\n}\n/**\n * @generated from protobuf enum sui.rpc.v2.TransactionExpiration.TransactionExpirationKind\n */\nexport enum TransactionExpiration_TransactionExpirationKind {\n\t/**\n\t * @generated from protobuf enum value: TRANSACTION_EXPIRATION_KIND_UNKNOWN = 0;\n\t */\n\tTRANSACTION_EXPIRATION_KIND_UNKNOWN = 0,\n\t/**\n\t * The transaction has no expiration.\n\t *\n\t * @generated from protobuf enum value: NONE = 1;\n\t */\n\tNONE = 1,\n\t/**\n\t * Validators won't sign and execute transaction unless the expiration epoch\n\t * is greater than or equal to the current epoch.\n\t *\n\t * @generated from protobuf enum value: EPOCH = 2;\n\t */\n\tEPOCH = 2,\n}\n/**\n * Transaction type.\n *\n * @generated from protobuf message sui.rpc.v2.TransactionKind\n */\nexport interface TransactionKind {\n\t/**\n\t * @generated from protobuf field: optional sui.rpc.v2.TransactionKind.Kind kind = 1;\n\t */\n\tkind?: TransactionKind_Kind;\n\t/**\n\t * @generated from protobuf oneof: data\n\t */\n\tdata:\n\t\t| {\n\t\t\t\toneofKind: 'programmableTransaction';\n\t\t\t\t/**\n\t\t\t\t * A transaction comprised of a list of native commands and Move calls.\n\t\t\t\t *\n\t\t\t\t * @generated from protobuf field: sui.rpc.v2.ProgrammableTransaction programmable_transaction = 2;\n\t\t\t\t */\n\t\t\t\tprogrammableTransaction: ProgrammableTransaction;\n\t\t  }\n\t\t| {\n\t\t\t\toneofKind: 'changeEpoch';\n\t\t\t\t/**\n\t\t\t\t * System transaction used to end an epoch.\n\t\t\t\t *\n\t\t\t\t * The `ChangeEpoch` variant is now deprecated (but the `ChangeEpoch` struct is still used by\n\t\t\t\t * `EndOfEpochTransaction`).\n\t\t\t\t *\n\t\t\t\t * @generated from protobuf field: sui.rpc.v2.ChangeEpoch change_epoch = 3;\n\t\t\t\t */\n\t\t\t\tchangeEpoch: ChangeEpoch;\n\t\t  }\n\t\t| {\n\t\t\t\toneofKind: 'genesis';\n\t\t\t\t/**\n\t\t\t\t * Transaction used to initialize the chain state.\n\t\t\t\t *\n\t\t\t\t * Only valid if in the genesis checkpoint (0) and if this is the very first transaction ever\n\t\t\t\t * executed on the chain.\n\t\t\t\t *\n\t\t\t\t * @generated from protobuf field: sui.rpc.v2.GenesisTransaction genesis = 4;\n\t\t\t\t */\n\t\t\t\tgenesis: GenesisTransaction;\n\t\t  }\n\t\t| {\n\t\t\t\toneofKind: 'consensusCommitPrologue';\n\t\t\t\t/**\n\t\t\t\t * consensus commit update info\n\t\t\t\t *\n\t\t\t\t * @generated from protobuf field: sui.rpc.v2.ConsensusCommitPrologue consensus_commit_prologue = 5;\n\t\t\t\t */\n\t\t\t\tconsensusCommitPrologue: ConsensusCommitPrologue;\n\t\t  }\n\t\t| {\n\t\t\t\toneofKind: 'authenticatorStateUpdate';\n\t\t\t\t/**\n\t\t\t\t * Update set of valid JWKs used for zklogin.\n\t\t\t\t *\n\t\t\t\t * @generated from protobuf field: sui.rpc.v2.AuthenticatorStateUpdate authenticator_state_update = 6;\n\t\t\t\t */\n\t\t\t\tauthenticatorStateUpdate: AuthenticatorStateUpdate;\n\t\t  }\n\t\t| {\n\t\t\t\toneofKind: 'endOfEpoch';\n\t\t\t\t/**\n\t\t\t\t * Set of operations to run at the end of the epoch to close out the current epoch and start\n\t\t\t\t * the next one.\n\t\t\t\t *\n\t\t\t\t * @generated from protobuf field: sui.rpc.v2.EndOfEpochTransaction end_of_epoch = 7;\n\t\t\t\t */\n\t\t\t\tendOfEpoch: EndOfEpochTransaction;\n\t\t  }\n\t\t| {\n\t\t\t\toneofKind: 'randomnessStateUpdate';\n\t\t\t\t/**\n\t\t\t\t * Randomness update.\n\t\t\t\t *\n\t\t\t\t * @generated from protobuf field: sui.rpc.v2.RandomnessStateUpdate randomness_state_update = 8;\n\t\t\t\t */\n\t\t\t\trandomnessStateUpdate: RandomnessStateUpdate;\n\t\t  }\n\t\t| {\n\t\t\t\toneofKind: undefined;\n\t\t  };\n}\n/**\n * @generated from protobuf enum sui.rpc.v2.TransactionKind.Kind\n */\nexport enum TransactionKind_Kind {\n\t/**\n\t * @generated from protobuf enum value: KIND_UNKNOWN = 0;\n\t */\n\tKIND_UNKNOWN = 0,\n\t/**\n\t * A user transaction comprised of a list of native commands and Move calls.\n\t *\n\t * @generated from protobuf enum value: PROGRAMMABLE_TRANSACTION = 1;\n\t */\n\tPROGRAMMABLE_TRANSACTION = 1,\n\t/**\n\t * System transaction used to end an epoch.\n\t *\n\t * The `ChangeEpoch` variant is now deprecated (but the `ChangeEpoch` struct is still used by\n\t * `EndOfEpochTransaction`).\n\t *\n\t * @generated from protobuf enum value: CHANGE_EPOCH = 2;\n\t */\n\tCHANGE_EPOCH = 2,\n\t/**\n\t * Transaction used to initialize the chain state.\n\t *\n\t * Only valid if in the genesis checkpoint (0) and if this is the very first transaction ever\n\t * executed on the chain.\n\t *\n\t * @generated from protobuf enum value: GENESIS = 3;\n\t */\n\tGENESIS = 3,\n\t/**\n\t * V1 consensus commit update.\n\t *\n\t * @generated from protobuf enum value: CONSENSUS_COMMIT_PROLOGUE_V1 = 4;\n\t */\n\tCONSENSUS_COMMIT_PROLOGUE_V1 = 4,\n\t/**\n\t * Update set of valid JWKs used for zklogin.\n\t *\n\t * @generated from protobuf enum value: AUTHENTICATOR_STATE_UPDATE = 5;\n\t */\n\tAUTHENTICATOR_STATE_UPDATE = 5,\n\t/**\n\t * Set of operations to run at the end of the epoch to close out the current epoch and start\n\t * the next one.\n\t *\n\t * @generated from protobuf enum value: END_OF_EPOCH = 6;\n\t */\n\tEND_OF_EPOCH = 6,\n\t/**\n\t * Randomness update.\n\t *\n\t * @generated from protobuf enum value: RANDOMNESS_STATE_UPDATE = 7;\n\t */\n\tRANDOMNESS_STATE_UPDATE = 7,\n\t/**\n\t * V2 consensus commit update.\n\t *\n\t * @generated from protobuf enum value: CONSENSUS_COMMIT_PROLOGUE_V2 = 8;\n\t */\n\tCONSENSUS_COMMIT_PROLOGUE_V2 = 8,\n\t/**\n\t * V3 consensus commit update.\n\t *\n\t * @generated from protobuf enum value: CONSENSUS_COMMIT_PROLOGUE_V3 = 9;\n\t */\n\tCONSENSUS_COMMIT_PROLOGUE_V3 = 9,\n\t/**\n\t * V4 consensus commit update.\n\t *\n\t * @generated from protobuf enum value: CONSENSUS_COMMIT_PROLOGUE_V4 = 10;\n\t */\n\tCONSENSUS_COMMIT_PROLOGUE_V4 = 10,\n}\n/**\n * A user transaction.\n *\n * Contains a series of native commands and Move calls where the results of one command can be\n * used in future commands.\n *\n * @generated from protobuf message sui.rpc.v2.ProgrammableTransaction\n */\nexport interface ProgrammableTransaction {\n\t/**\n\t * Input objects or primitive values.\n\t *\n\t * @generated from protobuf field: repeated sui.rpc.v2.Input inputs = 1;\n\t */\n\tinputs: Input[];\n\t/**\n\t * The commands to be executed sequentially. A failure in any command\n\t * results in the failure of the entire transaction.\n\t *\n\t * @generated from protobuf field: repeated sui.rpc.v2.Command commands = 2;\n\t */\n\tcommands: Command[];\n}\n/**\n * A single command in a programmable transaction.\n *\n * @generated from protobuf message sui.rpc.v2.Command\n */\nexport interface Command {\n\t/**\n\t * @generated from protobuf oneof: command\n\t */\n\tcommand:\n\t\t| {\n\t\t\t\toneofKind: 'moveCall';\n\t\t\t\t/**\n\t\t\t\t * A call to either an entry or a public Move function.\n\t\t\t\t *\n\t\t\t\t * @generated from protobuf field: sui.rpc.v2.MoveCall move_call = 1;\n\t\t\t\t */\n\t\t\t\tmoveCall: MoveCall;\n\t\t  }\n\t\t| {\n\t\t\t\toneofKind: 'transferObjects';\n\t\t\t\t/**\n\t\t\t\t * `(Vec<forall T:key+store. T>, address)`\n\t\t\t\t * It sends n-objects to the specified address. These objects must have store\n\t\t\t\t * (public transfer) and either the previous owner must be an address or the object must\n\t\t\t\t * be newly created.\n\t\t\t\t *\n\t\t\t\t * @generated from protobuf field: sui.rpc.v2.TransferObjects transfer_objects = 2;\n\t\t\t\t */\n\t\t\t\ttransferObjects: TransferObjects;\n\t\t  }\n\t\t| {\n\t\t\t\toneofKind: 'splitCoins';\n\t\t\t\t/**\n\t\t\t\t * `(&mut Coin<T>, Vec<u64>)` -> `Vec<Coin<T>>`\n\t\t\t\t * It splits off some amounts into new coins with those amounts.\n\t\t\t\t *\n\t\t\t\t * @generated from protobuf field: sui.rpc.v2.SplitCoins split_coins = 3;\n\t\t\t\t */\n\t\t\t\tsplitCoins: SplitCoins;\n\t\t  }\n\t\t| {\n\t\t\t\toneofKind: 'mergeCoins';\n\t\t\t\t/**\n\t\t\t\t * `(&mut Coin<T>, Vec<Coin<T>>)`\n\t\t\t\t * It merges n-coins into the first coin.\n\t\t\t\t *\n\t\t\t\t * @generated from protobuf field: sui.rpc.v2.MergeCoins merge_coins = 4;\n\t\t\t\t */\n\t\t\t\tmergeCoins: MergeCoins;\n\t\t  }\n\t\t| {\n\t\t\t\toneofKind: 'publish';\n\t\t\t\t/**\n\t\t\t\t * Publishes a Move package. It takes the package bytes and a list of the package's transitive\n\t\t\t\t * dependencies to link against on chain.\n\t\t\t\t *\n\t\t\t\t * @generated from protobuf field: sui.rpc.v2.Publish publish = 5;\n\t\t\t\t */\n\t\t\t\tpublish: Publish;\n\t\t  }\n\t\t| {\n\t\t\t\toneofKind: 'makeMoveVector';\n\t\t\t\t/**\n\t\t\t\t * `forall T: Vec<T> -> vector<T>`\n\t\t\t\t * Given n-values of the same type, it constructs a vector. For non-objects or an empty vector,\n\t\t\t\t * the type tag must be specified.\n\t\t\t\t *\n\t\t\t\t * @generated from protobuf field: sui.rpc.v2.MakeMoveVector make_move_vector = 6;\n\t\t\t\t */\n\t\t\t\tmakeMoveVector: MakeMoveVector;\n\t\t  }\n\t\t| {\n\t\t\t\toneofKind: 'upgrade';\n\t\t\t\t/**\n\t\t\t\t * Upgrades a Move package.\n\t\t\t\t * Takes (in order):\n\t\t\t\t * 1. A vector of serialized modules for the package.\n\t\t\t\t * 2. A vector of object ids for the transitive dependencies of the new package.\n\t\t\t\t * 3. The object ID of the package being upgraded.\n\t\t\t\t * 4. An argument holding the `UpgradeTicket` that must have been produced from an earlier command in the same\n\t\t\t\t *    programmable transaction.\n\t\t\t\t *\n\t\t\t\t * @generated from protobuf field: sui.rpc.v2.Upgrade upgrade = 7;\n\t\t\t\t */\n\t\t\t\tupgrade: Upgrade;\n\t\t  }\n\t\t| {\n\t\t\t\toneofKind: undefined;\n\t\t  };\n}\n/**\n * Command to call a Move function.\n *\n * Functions that can be called by a `MoveCall` command are those that have a function signature\n * that is either `entry` or `public` (which don't have a reference return type).\n *\n * @generated from protobuf message sui.rpc.v2.MoveCall\n */\nexport interface MoveCall {\n\t/**\n\t * The package containing the module and function.\n\t *\n\t * @generated from protobuf field: optional string package = 1;\n\t */\n\tpackage?: string;\n\t/**\n\t * The specific module in the package containing the function.\n\t *\n\t * @generated from protobuf field: optional string module = 2;\n\t */\n\tmodule?: string;\n\t/**\n\t * The function to be called.\n\t *\n\t * @generated from protobuf field: optional string function = 3;\n\t */\n\tfunction?: string;\n\t/**\n\t * The type arguments to the function.\n\t *\n\t * @generated from protobuf field: repeated string type_arguments = 4;\n\t */\n\ttypeArguments: string[];\n\t/**\n\t * The arguments to the function.\n\t *\n\t * @generated from protobuf field: repeated sui.rpc.v2.Argument arguments = 5;\n\t */\n\targuments: Argument[];\n}\n/**\n * Command to transfer ownership of a set of objects to an address.\n *\n * @generated from protobuf message sui.rpc.v2.TransferObjects\n */\nexport interface TransferObjects {\n\t/**\n\t * Set of objects to transfer.\n\t *\n\t * @generated from protobuf field: repeated sui.rpc.v2.Argument objects = 1;\n\t */\n\tobjects: Argument[];\n\t/**\n\t * The address to transfer ownership to.\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2.Argument address = 2;\n\t */\n\taddress?: Argument;\n}\n/**\n * Command to split a single coin object into multiple coins.\n *\n * @generated from protobuf message sui.rpc.v2.SplitCoins\n */\nexport interface SplitCoins {\n\t/**\n\t * The coin to split.\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2.Argument coin = 1;\n\t */\n\tcoin?: Argument;\n\t/**\n\t * The amounts to split off.\n\t *\n\t * @generated from protobuf field: repeated sui.rpc.v2.Argument amounts = 2;\n\t */\n\tamounts: Argument[];\n}\n/**\n * Command to merge multiple coins of the same type into a single coin.\n *\n * @generated from protobuf message sui.rpc.v2.MergeCoins\n */\nexport interface MergeCoins {\n\t/**\n\t * Coin to merge coins into.\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2.Argument coin = 1;\n\t */\n\tcoin?: Argument;\n\t/**\n\t * Set of coins to merge into `coin`.\n\t *\n\t * All listed coins must be of the same type and be the same type as `coin`\n\t *\n\t * @generated from protobuf field: repeated sui.rpc.v2.Argument coins_to_merge = 2;\n\t */\n\tcoinsToMerge: Argument[];\n}\n/**\n * Command to publish a new Move package.\n *\n * @generated from protobuf message sui.rpc.v2.Publish\n */\nexport interface Publish {\n\t/**\n\t * The serialized Move modules.\n\t *\n\t * @generated from protobuf field: repeated bytes modules = 1;\n\t */\n\tmodules: Uint8Array[];\n\t/**\n\t * Set of packages that the to-be published package depends on.\n\t *\n\t * @generated from protobuf field: repeated string dependencies = 2;\n\t */\n\tdependencies: string[];\n}\n/**\n * Command to build a Move vector out of a set of individual elements.\n *\n * @generated from protobuf message sui.rpc.v2.MakeMoveVector\n */\nexport interface MakeMoveVector {\n\t/**\n\t * Type of the individual elements.\n\t *\n\t * This is required to be set when the type can't be inferred, for example when the set of\n\t * provided arguments are all pure input values.\n\t *\n\t * @generated from protobuf field: optional string element_type = 1;\n\t */\n\telementType?: string;\n\t/**\n\t * The set individual elements to build the vector with.\n\t *\n\t * @generated from protobuf field: repeated sui.rpc.v2.Argument elements = 2;\n\t */\n\telements: Argument[];\n}\n/**\n * Command to upgrade an already published package.\n *\n * @generated from protobuf message sui.rpc.v2.Upgrade\n */\nexport interface Upgrade {\n\t/**\n\t * The serialized Move modules.\n\t *\n\t * @generated from protobuf field: repeated bytes modules = 1;\n\t */\n\tmodules: Uint8Array[];\n\t/**\n\t * Set of packages that the to-be published package depends on.\n\t *\n\t * @generated from protobuf field: repeated string dependencies = 2;\n\t */\n\tdependencies: string[];\n\t/**\n\t * Package ID of the package to upgrade.\n\t *\n\t * @generated from protobuf field: optional string package = 3;\n\t */\n\tpackage?: string;\n\t/**\n\t * Ticket authorizing the upgrade.\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2.Argument ticket = 4;\n\t */\n\tticket?: Argument;\n}\n/**\n * Randomness update.\n *\n * @generated from protobuf message sui.rpc.v2.RandomnessStateUpdate\n */\nexport interface RandomnessStateUpdate {\n\t/**\n\t * Epoch of the randomness state update transaction.\n\t *\n\t * @generated from protobuf field: optional uint64 epoch = 1;\n\t */\n\tepoch?: bigint;\n\t/**\n\t * Randomness round of the update.\n\t *\n\t * @generated from protobuf field: optional uint64 randomness_round = 2;\n\t */\n\trandomnessRound?: bigint;\n\t/**\n\t * Updated random bytes.\n\t *\n\t * @generated from protobuf field: optional bytes random_bytes = 3;\n\t */\n\trandomBytes?: Uint8Array;\n\t/**\n\t * The initial version of the randomness object that it was shared at.\n\t *\n\t * @generated from protobuf field: optional uint64 randomness_object_initial_shared_version = 4;\n\t */\n\trandomnessObjectInitialSharedVersion?: bigint;\n}\n/**\n * System transaction used to change the epoch.\n *\n * @generated from protobuf message sui.rpc.v2.ChangeEpoch\n */\nexport interface ChangeEpoch {\n\t/**\n\t * The next (to become) epoch ID.\n\t *\n\t * @generated from protobuf field: optional uint64 epoch = 1;\n\t */\n\tepoch?: bigint;\n\t/**\n\t * The protocol version in effect in the new epoch.\n\t *\n\t * @generated from protobuf field: optional uint64 protocol_version = 2;\n\t */\n\tprotocolVersion?: bigint;\n\t/**\n\t * The total amount of gas charged for storage during the epoch.\n\t *\n\t * @generated from protobuf field: optional uint64 storage_charge = 3;\n\t */\n\tstorageCharge?: bigint;\n\t/**\n\t * The total amount of gas charged for computation during the epoch.\n\t *\n\t * @generated from protobuf field: optional uint64 computation_charge = 4;\n\t */\n\tcomputationCharge?: bigint;\n\t/**\n\t * The amount of storage rebate refunded to the txn senders.\n\t *\n\t * @generated from protobuf field: optional uint64 storage_rebate = 5;\n\t */\n\tstorageRebate?: bigint;\n\t/**\n\t * The non-refundable storage fee.\n\t *\n\t * @generated from protobuf field: optional uint64 non_refundable_storage_fee = 6;\n\t */\n\tnonRefundableStorageFee?: bigint;\n\t/**\n\t * Unix timestamp when epoch started.\n\t *\n\t * @generated from protobuf field: optional google.protobuf.Timestamp epoch_start_timestamp = 7;\n\t */\n\tepochStartTimestamp?: Timestamp;\n\t/**\n\t * System packages (specifically framework and Move stdlib) that are written before the new\n\t * epoch starts. This tracks framework upgrades on chain. When executing the `ChangeEpoch` txn,\n\t * the validator must write out the following modules.  Modules are provided with the version they\n\t * will be upgraded to, their modules in serialized form (which include their package ID), and\n\t * a list of their transitive dependencies.\n\t *\n\t * @generated from protobuf field: repeated sui.rpc.v2.SystemPackage system_packages = 8;\n\t */\n\tsystemPackages: SystemPackage[];\n}\n/**\n * System package.\n *\n * @generated from protobuf message sui.rpc.v2.SystemPackage\n */\nexport interface SystemPackage {\n\t/**\n\t * Version of the package.\n\t *\n\t * @generated from protobuf field: optional uint64 version = 1;\n\t */\n\tversion?: bigint;\n\t/**\n\t * Move modules.\n\t *\n\t * @generated from protobuf field: repeated bytes modules = 2;\n\t */\n\tmodules: Uint8Array[];\n\t/**\n\t * Package dependencies.\n\t *\n\t * @generated from protobuf field: repeated string dependencies = 3;\n\t */\n\tdependencies: string[];\n}\n/**\n * The genesis transaction.\n *\n * @generated from protobuf message sui.rpc.v2.GenesisTransaction\n */\nexport interface GenesisTransaction {\n\t/**\n\t * Set of genesis objects.\n\t *\n\t * @generated from protobuf field: repeated sui.rpc.v2.Object objects = 1;\n\t */\n\tobjects: Object[];\n}\n/**\n * Consensus commit prologue system transaction.\n *\n * This message can represent V1, V2, and V3 prologue types.\n *\n * @generated from protobuf message sui.rpc.v2.ConsensusCommitPrologue\n */\nexport interface ConsensusCommitPrologue {\n\t/**\n\t * Epoch of the commit prologue transaction.\n\t *\n\t * Present in V1, V2, V3, V4.\n\t *\n\t * @generated from protobuf field: optional uint64 epoch = 1;\n\t */\n\tepoch?: bigint;\n\t/**\n\t * Consensus round of the commit.\n\t *\n\t * Present in V1, V2, V3, V4.\n\t *\n\t * @generated from protobuf field: optional uint64 round = 2;\n\t */\n\tround?: bigint;\n\t/**\n\t * Unix timestamp from consensus.\n\t *\n\t * Present in V1, V2, V3, V4.\n\t *\n\t * @generated from protobuf field: optional google.protobuf.Timestamp commit_timestamp = 3;\n\t */\n\tcommitTimestamp?: Timestamp;\n\t/**\n\t * Digest of consensus output.\n\t *\n\t * Present in V2, V3, V4.\n\t *\n\t * @generated from protobuf field: optional string consensus_commit_digest = 4;\n\t */\n\tconsensusCommitDigest?: string;\n\t/**\n\t * The sub DAG index of the consensus commit. This field is populated if there\n\t * are multiple consensus commits per round.\n\t *\n\t * Present in V3, V4.\n\t *\n\t * @generated from protobuf field: optional uint64 sub_dag_index = 5;\n\t */\n\tsubDagIndex?: bigint;\n\t/**\n\t * Stores consensus handler determined consensus object version assignments.\n\t *\n\t * Present in V3, V4.\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2.ConsensusDeterminedVersionAssignments consensus_determined_version_assignments = 6;\n\t */\n\tconsensusDeterminedVersionAssignments?: ConsensusDeterminedVersionAssignments;\n\t/**\n\t * Digest of any additional state computed by the consensus handler.\n\t * Used to detect forking bugs as early as possible.\n\t *\n\t * Present in V4.\n\t *\n\t * @generated from protobuf field: optional string additional_state_digest = 7;\n\t */\n\tadditionalStateDigest?: string;\n}\n/**\n * Object version assignment from consensus.\n *\n * @generated from protobuf message sui.rpc.v2.VersionAssignment\n */\nexport interface VersionAssignment {\n\t/**\n\t * `ObjectId` of the object.\n\t *\n\t * @generated from protobuf field: optional string object_id = 1;\n\t */\n\tobjectId?: string;\n\t/**\n\t * start version of the consensus stream for this object\n\t *\n\t * @generated from protobuf field: optional uint64 start_version = 2;\n\t */\n\tstartVersion?: bigint;\n\t/**\n\t * Assigned version.\n\t *\n\t * @generated from protobuf field: optional uint64 version = 3;\n\t */\n\tversion?: bigint;\n}\n/**\n * A transaction that was canceled.\n *\n * @generated from protobuf message sui.rpc.v2.CanceledTransaction\n */\nexport interface CanceledTransaction {\n\t/**\n\t * Digest of the canceled transaction.\n\t *\n\t * @generated from protobuf field: optional string digest = 1;\n\t */\n\tdigest?: string;\n\t/**\n\t * List of object version assignments.\n\t *\n\t * @generated from protobuf field: repeated sui.rpc.v2.VersionAssignment version_assignments = 2;\n\t */\n\tversionAssignments: VersionAssignment[];\n}\n/**\n * Version assignments performed by consensus.\n *\n * @generated from protobuf message sui.rpc.v2.ConsensusDeterminedVersionAssignments\n */\nexport interface ConsensusDeterminedVersionAssignments {\n\t/**\n\t * Version of this message\n\t *\n\t * @generated from protobuf field: optional int32 version = 1;\n\t */\n\tversion?: number;\n\t/**\n\t * Canceled transaction version assignment.\n\t *\n\t * @generated from protobuf field: repeated sui.rpc.v2.CanceledTransaction canceled_transactions = 3;\n\t */\n\tcanceledTransactions: CanceledTransaction[];\n}\n/**\n * Update the set of valid JWKs.\n *\n * @generated from protobuf message sui.rpc.v2.AuthenticatorStateUpdate\n */\nexport interface AuthenticatorStateUpdate {\n\t/**\n\t * Epoch of the authenticator state update transaction.\n\t *\n\t * @generated from protobuf field: optional uint64 epoch = 1;\n\t */\n\tepoch?: bigint;\n\t/**\n\t * Consensus round of the authenticator state update.\n\t *\n\t * @generated from protobuf field: optional uint64 round = 2;\n\t */\n\tround?: bigint;\n\t/**\n\t * Newly active JWKs.\n\t *\n\t * @generated from protobuf field: repeated sui.rpc.v2.ActiveJwk new_active_jwks = 3;\n\t */\n\tnewActiveJwks: ActiveJwk[];\n\t/**\n\t * The initial version of the authenticator object that it was shared at.\n\t *\n\t * @generated from protobuf field: optional uint64 authenticator_object_initial_shared_version = 4;\n\t */\n\tauthenticatorObjectInitialSharedVersion?: bigint;\n}\n/**\n * A new JWK.\n *\n * @generated from protobuf message sui.rpc.v2.ActiveJwk\n */\nexport interface ActiveJwk {\n\t/**\n\t * Identifier used to uniquely identify a JWK.\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2.JwkId id = 1;\n\t */\n\tid?: JwkId;\n\t/**\n\t * The JWK.\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2.Jwk jwk = 2;\n\t */\n\tjwk?: Jwk;\n\t/**\n\t * Most recent epoch in which the JWK was validated.\n\t *\n\t * @generated from protobuf field: optional uint64 epoch = 3;\n\t */\n\tepoch?: bigint;\n}\n/**\n * Set of operations run at the end of the epoch to close out the current epoch\n * and start the next one.\n *\n * @generated from protobuf message sui.rpc.v2.EndOfEpochTransaction\n */\nexport interface EndOfEpochTransaction {\n\t/**\n\t * @generated from protobuf field: repeated sui.rpc.v2.EndOfEpochTransactionKind transactions = 1;\n\t */\n\ttransactions: EndOfEpochTransactionKind[];\n}\n/**\n * Operation run at the end of an epoch.\n *\n * @generated from protobuf message sui.rpc.v2.EndOfEpochTransactionKind\n */\nexport interface EndOfEpochTransactionKind {\n\t/**\n\t * @generated from protobuf field: optional sui.rpc.v2.EndOfEpochTransactionKind.Kind kind = 1;\n\t */\n\tkind?: EndOfEpochTransactionKind_Kind;\n\t/**\n\t * @generated from protobuf oneof: data\n\t */\n\tdata:\n\t\t| {\n\t\t\t\toneofKind: 'changeEpoch';\n\t\t\t\t/**\n\t\t\t\t * End the epoch and start the next one.\n\t\t\t\t *\n\t\t\t\t * @generated from protobuf field: sui.rpc.v2.ChangeEpoch change_epoch = 2;\n\t\t\t\t */\n\t\t\t\tchangeEpoch: ChangeEpoch;\n\t\t  }\n\t\t| {\n\t\t\t\toneofKind: 'authenticatorStateExpire';\n\t\t\t\t/**\n\t\t\t\t * Expire JWKs used for zklogin.\n\t\t\t\t *\n\t\t\t\t * @generated from protobuf field: sui.rpc.v2.AuthenticatorStateExpire authenticator_state_expire = 3;\n\t\t\t\t */\n\t\t\t\tauthenticatorStateExpire: AuthenticatorStateExpire;\n\t\t  }\n\t\t| {\n\t\t\t\toneofKind: 'executionTimeObservations';\n\t\t\t\t/**\n\t\t\t\t * Execution time observations from the committee to preserve cross epoch\n\t\t\t\t *\n\t\t\t\t * @generated from protobuf field: sui.rpc.v2.ExecutionTimeObservations execution_time_observations = 4;\n\t\t\t\t */\n\t\t\t\texecutionTimeObservations: ExecutionTimeObservations;\n\t\t  }\n\t\t| {\n\t\t\t\toneofKind: 'bridgeChainId';\n\t\t\t\t/**\n\t\t\t\t * ChainId used when initializing the bridge\n\t\t\t\t *\n\t\t\t\t * @generated from protobuf field: string bridge_chain_id = 5;\n\t\t\t\t */\n\t\t\t\tbridgeChainId: string;\n\t\t  }\n\t\t| {\n\t\t\t\toneofKind: 'bridgeObjectVersion';\n\t\t\t\t/**\n\t\t\t\t * Start version of the Bridge object\n\t\t\t\t *\n\t\t\t\t * @generated from protobuf field: uint64 bridge_object_version = 6;\n\t\t\t\t */\n\t\t\t\tbridgeObjectVersion: bigint;\n\t\t  }\n\t\t| {\n\t\t\t\toneofKind: undefined;\n\t\t  };\n}\n/**\n * @generated from protobuf enum sui.rpc.v2.EndOfEpochTransactionKind.Kind\n */\nexport enum EndOfEpochTransactionKind_Kind {\n\t/**\n\t * @generated from protobuf enum value: KIND_UNKNOWN = 0;\n\t */\n\tKIND_UNKNOWN = 0,\n\t/**\n\t * End the epoch and start the next one.\n\t *\n\t * @generated from protobuf enum value: CHANGE_EPOCH = 1;\n\t */\n\tCHANGE_EPOCH = 1,\n\t/**\n\t * Create and initialize the authenticator object used for zklogin.\n\t *\n\t * @generated from protobuf enum value: AUTHENTICATOR_STATE_CREATE = 2;\n\t */\n\tAUTHENTICATOR_STATE_CREATE = 2,\n\t/**\n\t * Expire JWKs used for zklogin.\n\t *\n\t * @generated from protobuf enum value: AUTHENTICATOR_STATE_EXPIRE = 3;\n\t */\n\tAUTHENTICATOR_STATE_EXPIRE = 3,\n\t/**\n\t * Create and initialize the randomness object.\n\t *\n\t * @generated from protobuf enum value: RANDOMNESS_STATE_CREATE = 4;\n\t */\n\tRANDOMNESS_STATE_CREATE = 4,\n\t/**\n\t * Create and initialize the deny list object.\n\t *\n\t * @generated from protobuf enum value: DENY_LIST_STATE_CREATE = 5;\n\t */\n\tDENY_LIST_STATE_CREATE = 5,\n\t/**\n\t * Create and initialize the bridge object.\n\t *\n\t * @generated from protobuf enum value: BRIDGE_STATE_CREATE = 6;\n\t */\n\tBRIDGE_STATE_CREATE = 6,\n\t/**\n\t * Initialize the bridge committee.\n\t *\n\t * @generated from protobuf enum value: BRIDGE_COMMITTEE_INIT = 7;\n\t */\n\tBRIDGE_COMMITTEE_INIT = 7,\n\t/**\n\t * Execution time observations from the committee to preserve cross epoch\n\t *\n\t * @generated from protobuf enum value: STORE_EXECUTION_TIME_OBSERVATIONS = 8;\n\t */\n\tSTORE_EXECUTION_TIME_OBSERVATIONS = 8,\n\t/**\n\t * Create the accumulator root object.\n\t *\n\t * @generated from protobuf enum value: ACCUMULATOR_ROOT_CREATE = 9;\n\t */\n\tACCUMULATOR_ROOT_CREATE = 9,\n\t/**\n\t * Create and initialize the Coin Registry object.\n\t *\n\t * @generated from protobuf enum value: COIN_REGISTRY_CREATE = 10;\n\t */\n\tCOIN_REGISTRY_CREATE = 10,\n\t/**\n\t * Create and initialize the Display Registry object.\n\t *\n\t * @generated from protobuf enum value: DISPLAY_REGISTRY_CREATE = 11;\n\t */\n\tDISPLAY_REGISTRY_CREATE = 11,\n}\n/**\n * Expire old JWKs.\n *\n * @generated from protobuf message sui.rpc.v2.AuthenticatorStateExpire\n */\nexport interface AuthenticatorStateExpire {\n\t/**\n\t * Expire JWKs that have a lower epoch than this.\n\t *\n\t * @generated from protobuf field: optional uint64 min_epoch = 1;\n\t */\n\tminEpoch?: bigint;\n\t/**\n\t * The initial version of the authenticator object that it was shared at.\n\t *\n\t * @generated from protobuf field: optional uint64 authenticator_object_initial_shared_version = 2;\n\t */\n\tauthenticatorObjectInitialSharedVersion?: bigint;\n}\n/**\n * @generated from protobuf message sui.rpc.v2.ExecutionTimeObservations\n */\nexport interface ExecutionTimeObservations {\n\t/**\n\t * Version of this ExecutionTimeObservations\n\t *\n\t * @generated from protobuf field: optional int32 version = 1;\n\t */\n\tversion?: number;\n\t/**\n\t * @generated from protobuf field: repeated sui.rpc.v2.ExecutionTimeObservation observations = 2;\n\t */\n\tobservations: ExecutionTimeObservation[];\n}\n/**\n * @generated from protobuf message sui.rpc.v2.ExecutionTimeObservation\n */\nexport interface ExecutionTimeObservation {\n\t/**\n\t * @generated from protobuf field: optional sui.rpc.v2.ExecutionTimeObservation.ExecutionTimeObservationKind kind = 1;\n\t */\n\tkind?: ExecutionTimeObservation_ExecutionTimeObservationKind;\n\t/**\n\t * @generated from protobuf field: optional sui.rpc.v2.MoveCall move_entry_point = 2;\n\t */\n\tmoveEntryPoint?: MoveCall;\n\t/**\n\t * @generated from protobuf field: repeated sui.rpc.v2.ValidatorExecutionTimeObservation validator_observations = 3;\n\t */\n\tvalidatorObservations: ValidatorExecutionTimeObservation[];\n}\n/**\n * @generated from protobuf enum sui.rpc.v2.ExecutionTimeObservation.ExecutionTimeObservationKind\n */\nexport enum ExecutionTimeObservation_ExecutionTimeObservationKind {\n\t/**\n\t * @generated from protobuf enum value: EXECUTION_TIME_OBSERVATION_KIND_UNKNOWN = 0;\n\t */\n\tEXECUTION_TIME_OBSERVATION_KIND_UNKNOWN = 0,\n\t/**\n\t * @generated from protobuf enum value: MOVE_ENTRY_POINT = 1;\n\t */\n\tMOVE_ENTRY_POINT = 1,\n\t/**\n\t * @generated from protobuf enum value: TRANSFER_OBJECTS = 2;\n\t */\n\tTRANSFER_OBJECTS = 2,\n\t/**\n\t * @generated from protobuf enum value: SPLIT_COINS = 3;\n\t */\n\tSPLIT_COINS = 3,\n\t/**\n\t * @generated from protobuf enum value: MERGE_COINS = 4;\n\t */\n\tMERGE_COINS = 4,\n\t/**\n\t * @generated from protobuf enum value: PUBLISH = 5;\n\t */\n\tPUBLISH = 5,\n\t/**\n\t * @generated from protobuf enum value: MAKE_MOVE_VECTOR = 6;\n\t */\n\tMAKE_MOVE_VECTOR = 6,\n\t/**\n\t * @generated from protobuf enum value: UPGRADE = 7;\n\t */\n\tUPGRADE = 7,\n}\n/**\n * @generated from protobuf message sui.rpc.v2.ValidatorExecutionTimeObservation\n */\nexport interface ValidatorExecutionTimeObservation {\n\t/**\n\t * Bls12381 public key of the validator\n\t *\n\t * @generated from protobuf field: optional bytes validator = 1;\n\t */\n\tvalidator?: Uint8Array;\n\t/**\n\t * Duration of an execution observation\n\t *\n\t * @generated from protobuf field: optional google.protobuf.Duration duration = 2;\n\t */\n\tduration?: Duration;\n}\n// @generated message type with reflection information, may provide speed optimized methods\nclass Transaction$Type extends MessageType<Transaction> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.Transaction', [\n\t\t\t{ no: 1, name: 'bcs', kind: 'message', T: () => Bcs },\n\t\t\t{ no: 2, name: 'digest', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 3, name: 'version', kind: 'scalar', opt: true, T: 5 /*ScalarType.INT32*/ },\n\t\t\t{ no: 4, name: 'kind', kind: 'message', T: () => TransactionKind },\n\t\t\t{ no: 5, name: 'sender', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 6, name: 'gas_payment', kind: 'message', T: () => GasPayment },\n\t\t\t{ no: 7, name: 'expiration', kind: 'message', T: () => TransactionExpiration },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.Transaction\n */\nexport const Transaction = new Transaction$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass GasPayment$Type extends MessageType<GasPayment> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.GasPayment', [\n\t\t\t{\n\t\t\t\tno: 1,\n\t\t\t\tname: 'objects',\n\t\t\t\tkind: 'message',\n\t\t\t\trepeat: 1 /*RepeatType.PACKED*/,\n\t\t\t\tT: () => ObjectReference,\n\t\t\t},\n\t\t\t{ no: 2, name: 'owner', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{\n\t\t\t\tno: 3,\n\t\t\t\tname: 'price',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 4,\n\t\t\t\tname: 'budget',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.GasPayment\n */\nexport const GasPayment = new GasPayment$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass TransactionExpiration$Type extends MessageType<TransactionExpiration> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.TransactionExpiration', [\n\t\t\t{\n\t\t\t\tno: 1,\n\t\t\t\tname: 'kind',\n\t\t\t\tkind: 'enum',\n\t\t\t\topt: true,\n\t\t\t\tT: () => [\n\t\t\t\t\t'sui.rpc.v2.TransactionExpiration.TransactionExpirationKind',\n\t\t\t\t\tTransactionExpiration_TransactionExpirationKind,\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 2,\n\t\t\t\tname: 'epoch',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.TransactionExpiration\n */\nexport const TransactionExpiration = new TransactionExpiration$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass TransactionKind$Type extends MessageType<TransactionKind> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.TransactionKind', [\n\t\t\t{\n\t\t\t\tno: 1,\n\t\t\t\tname: 'kind',\n\t\t\t\tkind: 'enum',\n\t\t\t\topt: true,\n\t\t\t\tT: () => ['sui.rpc.v2.TransactionKind.Kind', TransactionKind_Kind],\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 2,\n\t\t\t\tname: 'programmable_transaction',\n\t\t\t\tkind: 'message',\n\t\t\t\toneof: 'data',\n\t\t\t\tT: () => ProgrammableTransaction,\n\t\t\t},\n\t\t\t{ no: 3, name: 'change_epoch', kind: 'message', oneof: 'data', T: () => ChangeEpoch },\n\t\t\t{ no: 4, name: 'genesis', kind: 'message', oneof: 'data', T: () => GenesisTransaction },\n\t\t\t{\n\t\t\t\tno: 5,\n\t\t\t\tname: 'consensus_commit_prologue',\n\t\t\t\tkind: 'message',\n\t\t\t\toneof: 'data',\n\t\t\t\tT: () => ConsensusCommitPrologue,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 6,\n\t\t\t\tname: 'authenticator_state_update',\n\t\t\t\tkind: 'message',\n\t\t\t\toneof: 'data',\n\t\t\t\tT: () => AuthenticatorStateUpdate,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 7,\n\t\t\t\tname: 'end_of_epoch',\n\t\t\t\tkind: 'message',\n\t\t\t\toneof: 'data',\n\t\t\t\tT: () => EndOfEpochTransaction,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 8,\n\t\t\t\tname: 'randomness_state_update',\n\t\t\t\tkind: 'message',\n\t\t\t\toneof: 'data',\n\t\t\t\tT: () => RandomnessStateUpdate,\n\t\t\t},\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.TransactionKind\n */\nexport const TransactionKind = new TransactionKind$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ProgrammableTransaction$Type extends MessageType<ProgrammableTransaction> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.ProgrammableTransaction', [\n\t\t\t{ no: 1, name: 'inputs', kind: 'message', repeat: 1 /*RepeatType.PACKED*/, T: () => Input },\n\t\t\t{\n\t\t\t\tno: 2,\n\t\t\t\tname: 'commands',\n\t\t\t\tkind: 'message',\n\t\t\t\trepeat: 1 /*RepeatType.PACKED*/,\n\t\t\t\tT: () => Command,\n\t\t\t},\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.ProgrammableTransaction\n */\nexport const ProgrammableTransaction = new ProgrammableTransaction$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass Command$Type extends MessageType<Command> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.Command', [\n\t\t\t{ no: 1, name: 'move_call', kind: 'message', oneof: 'command', T: () => MoveCall },\n\t\t\t{\n\t\t\t\tno: 2,\n\t\t\t\tname: 'transfer_objects',\n\t\t\t\tkind: 'message',\n\t\t\t\toneof: 'command',\n\t\t\t\tT: () => TransferObjects,\n\t\t\t},\n\t\t\t{ no: 3, name: 'split_coins', kind: 'message', oneof: 'command', T: () => SplitCoins },\n\t\t\t{ no: 4, name: 'merge_coins', kind: 'message', oneof: 'command', T: () => MergeCoins },\n\t\t\t{ no: 5, name: 'publish', kind: 'message', oneof: 'command', T: () => Publish },\n\t\t\t{\n\t\t\t\tno: 6,\n\t\t\t\tname: 'make_move_vector',\n\t\t\t\tkind: 'message',\n\t\t\t\toneof: 'command',\n\t\t\t\tT: () => MakeMoveVector,\n\t\t\t},\n\t\t\t{ no: 7, name: 'upgrade', kind: 'message', oneof: 'command', T: () => Upgrade },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.Command\n */\nexport const Command = new Command$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass MoveCall$Type extends MessageType<MoveCall> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.MoveCall', [\n\t\t\t{ no: 1, name: 'package', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 2, name: 'module', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 3, name: 'function', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{\n\t\t\t\tno: 4,\n\t\t\t\tname: 'type_arguments',\n\t\t\t\tkind: 'scalar',\n\t\t\t\trepeat: 2 /*RepeatType.UNPACKED*/,\n\t\t\t\tT: 9 /*ScalarType.STRING*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 5,\n\t\t\t\tname: 'arguments',\n\t\t\t\tkind: 'message',\n\t\t\t\trepeat: 1 /*RepeatType.PACKED*/,\n\t\t\t\tT: () => Argument,\n\t\t\t},\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.MoveCall\n */\nexport const MoveCall = new MoveCall$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass TransferObjects$Type extends MessageType<TransferObjects> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.TransferObjects', [\n\t\t\t{\n\t\t\t\tno: 1,\n\t\t\t\tname: 'objects',\n\t\t\t\tkind: 'message',\n\t\t\t\trepeat: 1 /*RepeatType.PACKED*/,\n\t\t\t\tT: () => Argument,\n\t\t\t},\n\t\t\t{ no: 2, name: 'address', kind: 'message', T: () => Argument },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.TransferObjects\n */\nexport const TransferObjects = new TransferObjects$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass SplitCoins$Type extends MessageType<SplitCoins> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.SplitCoins', [\n\t\t\t{ no: 1, name: 'coin', kind: 'message', T: () => Argument },\n\t\t\t{\n\t\t\t\tno: 2,\n\t\t\t\tname: 'amounts',\n\t\t\t\tkind: 'message',\n\t\t\t\trepeat: 1 /*RepeatType.PACKED*/,\n\t\t\t\tT: () => Argument,\n\t\t\t},\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.SplitCoins\n */\nexport const SplitCoins = new SplitCoins$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass MergeCoins$Type extends MessageType<MergeCoins> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.MergeCoins', [\n\t\t\t{ no: 1, name: 'coin', kind: 'message', T: () => Argument },\n\t\t\t{\n\t\t\t\tno: 2,\n\t\t\t\tname: 'coins_to_merge',\n\t\t\t\tkind: 'message',\n\t\t\t\trepeat: 1 /*RepeatType.PACKED*/,\n\t\t\t\tT: () => Argument,\n\t\t\t},\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.MergeCoins\n */\nexport const MergeCoins = new MergeCoins$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass Publish$Type extends MessageType<Publish> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.Publish', [\n\t\t\t{\n\t\t\t\tno: 1,\n\t\t\t\tname: 'modules',\n\t\t\t\tkind: 'scalar',\n\t\t\t\trepeat: 2 /*RepeatType.UNPACKED*/,\n\t\t\t\tT: 12 /*ScalarType.BYTES*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 2,\n\t\t\t\tname: 'dependencies',\n\t\t\t\tkind: 'scalar',\n\t\t\t\trepeat: 2 /*RepeatType.UNPACKED*/,\n\t\t\t\tT: 9 /*ScalarType.STRING*/,\n\t\t\t},\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.Publish\n */\nexport const Publish = new Publish$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass MakeMoveVector$Type extends MessageType<MakeMoveVector> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.MakeMoveVector', [\n\t\t\t{ no: 1, name: 'element_type', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{\n\t\t\t\tno: 2,\n\t\t\t\tname: 'elements',\n\t\t\t\tkind: 'message',\n\t\t\t\trepeat: 1 /*RepeatType.PACKED*/,\n\t\t\t\tT: () => Argument,\n\t\t\t},\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.MakeMoveVector\n */\nexport const MakeMoveVector = new MakeMoveVector$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass Upgrade$Type extends MessageType<Upgrade> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.Upgrade', [\n\t\t\t{\n\t\t\t\tno: 1,\n\t\t\t\tname: 'modules',\n\t\t\t\tkind: 'scalar',\n\t\t\t\trepeat: 2 /*RepeatType.UNPACKED*/,\n\t\t\t\tT: 12 /*ScalarType.BYTES*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 2,\n\t\t\t\tname: 'dependencies',\n\t\t\t\tkind: 'scalar',\n\t\t\t\trepeat: 2 /*RepeatType.UNPACKED*/,\n\t\t\t\tT: 9 /*ScalarType.STRING*/,\n\t\t\t},\n\t\t\t{ no: 3, name: 'package', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 4, name: 'ticket', kind: 'message', T: () => Argument },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.Upgrade\n */\nexport const Upgrade = new Upgrade$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass RandomnessStateUpdate$Type extends MessageType<RandomnessStateUpdate> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.RandomnessStateUpdate', [\n\t\t\t{\n\t\t\t\tno: 1,\n\t\t\t\tname: 'epoch',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 2,\n\t\t\t\tname: 'randomness_round',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{ no: 3, name: 'random_bytes', kind: 'scalar', opt: true, T: 12 /*ScalarType.BYTES*/ },\n\t\t\t{\n\t\t\t\tno: 4,\n\t\t\t\tname: 'randomness_object_initial_shared_version',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.RandomnessStateUpdate\n */\nexport const RandomnessStateUpdate = new RandomnessStateUpdate$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ChangeEpoch$Type extends MessageType<ChangeEpoch> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.ChangeEpoch', [\n\t\t\t{\n\t\t\t\tno: 1,\n\t\t\t\tname: 'epoch',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 2,\n\t\t\t\tname: 'protocol_version',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 3,\n\t\t\t\tname: 'storage_charge',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 4,\n\t\t\t\tname: 'computation_charge',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 5,\n\t\t\t\tname: 'storage_rebate',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 6,\n\t\t\t\tname: 'non_refundable_storage_fee',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{ no: 7, name: 'epoch_start_timestamp', kind: 'message', T: () => Timestamp },\n\t\t\t{\n\t\t\t\tno: 8,\n\t\t\t\tname: 'system_packages',\n\t\t\t\tkind: 'message',\n\t\t\t\trepeat: 1 /*RepeatType.PACKED*/,\n\t\t\t\tT: () => SystemPackage,\n\t\t\t},\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.ChangeEpoch\n */\nexport const ChangeEpoch = new ChangeEpoch$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass SystemPackage$Type extends MessageType<SystemPackage> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.SystemPackage', [\n\t\t\t{\n\t\t\t\tno: 1,\n\t\t\t\tname: 'version',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 2,\n\t\t\t\tname: 'modules',\n\t\t\t\tkind: 'scalar',\n\t\t\t\trepeat: 2 /*RepeatType.UNPACKED*/,\n\t\t\t\tT: 12 /*ScalarType.BYTES*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 3,\n\t\t\t\tname: 'dependencies',\n\t\t\t\tkind: 'scalar',\n\t\t\t\trepeat: 2 /*RepeatType.UNPACKED*/,\n\t\t\t\tT: 9 /*ScalarType.STRING*/,\n\t\t\t},\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.SystemPackage\n */\nexport const SystemPackage = new SystemPackage$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass GenesisTransaction$Type extends MessageType<GenesisTransaction> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.GenesisTransaction', [\n\t\t\t{ no: 1, name: 'objects', kind: 'message', repeat: 1 /*RepeatType.PACKED*/, T: () => Object },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.GenesisTransaction\n */\nexport const GenesisTransaction = new GenesisTransaction$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ConsensusCommitPrologue$Type extends MessageType<ConsensusCommitPrologue> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.ConsensusCommitPrologue', [\n\t\t\t{\n\t\t\t\tno: 1,\n\t\t\t\tname: 'epoch',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 2,\n\t\t\t\tname: 'round',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{ no: 3, name: 'commit_timestamp', kind: 'message', T: () => Timestamp },\n\t\t\t{\n\t\t\t\tno: 4,\n\t\t\t\tname: 'consensus_commit_digest',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 9 /*ScalarType.STRING*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 5,\n\t\t\t\tname: 'sub_dag_index',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 6,\n\t\t\t\tname: 'consensus_determined_version_assignments',\n\t\t\t\tkind: 'message',\n\t\t\t\tT: () => ConsensusDeterminedVersionAssignments,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 7,\n\t\t\t\tname: 'additional_state_digest',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 9 /*ScalarType.STRING*/,\n\t\t\t},\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.ConsensusCommitPrologue\n */\nexport const ConsensusCommitPrologue = new ConsensusCommitPrologue$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass VersionAssignment$Type extends MessageType<VersionAssignment> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.VersionAssignment', [\n\t\t\t{ no: 1, name: 'object_id', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{\n\t\t\t\tno: 2,\n\t\t\t\tname: 'start_version',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 3,\n\t\t\t\tname: 'version',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.VersionAssignment\n */\nexport const VersionAssignment = new VersionAssignment$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass CanceledTransaction$Type extends MessageType<CanceledTransaction> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.CanceledTransaction', [\n\t\t\t{ no: 1, name: 'digest', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{\n\t\t\t\tno: 2,\n\t\t\t\tname: 'version_assignments',\n\t\t\t\tkind: 'message',\n\t\t\t\trepeat: 1 /*RepeatType.PACKED*/,\n\t\t\t\tT: () => VersionAssignment,\n\t\t\t},\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.CanceledTransaction\n */\nexport const CanceledTransaction = new CanceledTransaction$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ConsensusDeterminedVersionAssignments$Type extends MessageType<ConsensusDeterminedVersionAssignments> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.ConsensusDeterminedVersionAssignments', [\n\t\t\t{ no: 1, name: 'version', kind: 'scalar', opt: true, T: 5 /*ScalarType.INT32*/ },\n\t\t\t{\n\t\t\t\tno: 3,\n\t\t\t\tname: 'canceled_transactions',\n\t\t\t\tkind: 'message',\n\t\t\t\trepeat: 1 /*RepeatType.PACKED*/,\n\t\t\t\tT: () => CanceledTransaction,\n\t\t\t},\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.ConsensusDeterminedVersionAssignments\n */\nexport const ConsensusDeterminedVersionAssignments =\n\tnew ConsensusDeterminedVersionAssignments$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass AuthenticatorStateUpdate$Type extends MessageType<AuthenticatorStateUpdate> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.AuthenticatorStateUpdate', [\n\t\t\t{\n\t\t\t\tno: 1,\n\t\t\t\tname: 'epoch',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 2,\n\t\t\t\tname: 'round',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 3,\n\t\t\t\tname: 'new_active_jwks',\n\t\t\t\tkind: 'message',\n\t\t\t\trepeat: 1 /*RepeatType.PACKED*/,\n\t\t\t\tT: () => ActiveJwk,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 4,\n\t\t\t\tname: 'authenticator_object_initial_shared_version',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.AuthenticatorStateUpdate\n */\nexport const AuthenticatorStateUpdate = new AuthenticatorStateUpdate$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ActiveJwk$Type extends MessageType<ActiveJwk> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.ActiveJwk', [\n\t\t\t{ no: 1, name: 'id', kind: 'message', T: () => JwkId },\n\t\t\t{ no: 2, name: 'jwk', kind: 'message', T: () => Jwk },\n\t\t\t{\n\t\t\t\tno: 3,\n\t\t\t\tname: 'epoch',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.ActiveJwk\n */\nexport const ActiveJwk = new ActiveJwk$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass EndOfEpochTransaction$Type extends MessageType<EndOfEpochTransaction> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.EndOfEpochTransaction', [\n\t\t\t{\n\t\t\t\tno: 1,\n\t\t\t\tname: 'transactions',\n\t\t\t\tkind: 'message',\n\t\t\t\trepeat: 1 /*RepeatType.PACKED*/,\n\t\t\t\tT: () => EndOfEpochTransactionKind,\n\t\t\t},\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.EndOfEpochTransaction\n */\nexport const EndOfEpochTransaction = new EndOfEpochTransaction$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass EndOfEpochTransactionKind$Type extends MessageType<EndOfEpochTransactionKind> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.EndOfEpochTransactionKind', [\n\t\t\t{\n\t\t\t\tno: 1,\n\t\t\t\tname: 'kind',\n\t\t\t\tkind: 'enum',\n\t\t\t\topt: true,\n\t\t\t\tT: () => ['sui.rpc.v2.EndOfEpochTransactionKind.Kind', EndOfEpochTransactionKind_Kind],\n\t\t\t},\n\t\t\t{ no: 2, name: 'change_epoch', kind: 'message', oneof: 'data', T: () => ChangeEpoch },\n\t\t\t{\n\t\t\t\tno: 3,\n\t\t\t\tname: 'authenticator_state_expire',\n\t\t\t\tkind: 'message',\n\t\t\t\toneof: 'data',\n\t\t\t\tT: () => AuthenticatorStateExpire,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 4,\n\t\t\t\tname: 'execution_time_observations',\n\t\t\t\tkind: 'message',\n\t\t\t\toneof: 'data',\n\t\t\t\tT: () => ExecutionTimeObservations,\n\t\t\t},\n\t\t\t{ no: 5, name: 'bridge_chain_id', kind: 'scalar', oneof: 'data', T: 9 /*ScalarType.STRING*/ },\n\t\t\t{\n\t\t\t\tno: 6,\n\t\t\t\tname: 'bridge_object_version',\n\t\t\t\tkind: 'scalar',\n\t\t\t\toneof: 'data',\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.EndOfEpochTransactionKind\n */\nexport const EndOfEpochTransactionKind = new EndOfEpochTransactionKind$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass AuthenticatorStateExpire$Type extends MessageType<AuthenticatorStateExpire> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.AuthenticatorStateExpire', [\n\t\t\t{\n\t\t\t\tno: 1,\n\t\t\t\tname: 'min_epoch',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 2,\n\t\t\t\tname: 'authenticator_object_initial_shared_version',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.AuthenticatorStateExpire\n */\nexport const AuthenticatorStateExpire = new AuthenticatorStateExpire$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ExecutionTimeObservations$Type extends MessageType<ExecutionTimeObservations> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.ExecutionTimeObservations', [\n\t\t\t{ no: 1, name: 'version', kind: 'scalar', opt: true, T: 5 /*ScalarType.INT32*/ },\n\t\t\t{\n\t\t\t\tno: 2,\n\t\t\t\tname: 'observations',\n\t\t\t\tkind: 'message',\n\t\t\t\trepeat: 1 /*RepeatType.PACKED*/,\n\t\t\t\tT: () => ExecutionTimeObservation,\n\t\t\t},\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.ExecutionTimeObservations\n */\nexport const ExecutionTimeObservations = new ExecutionTimeObservations$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ExecutionTimeObservation$Type extends MessageType<ExecutionTimeObservation> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.ExecutionTimeObservation', [\n\t\t\t{\n\t\t\t\tno: 1,\n\t\t\t\tname: 'kind',\n\t\t\t\tkind: 'enum',\n\t\t\t\topt: true,\n\t\t\t\tT: () => [\n\t\t\t\t\t'sui.rpc.v2.ExecutionTimeObservation.ExecutionTimeObservationKind',\n\t\t\t\t\tExecutionTimeObservation_ExecutionTimeObservationKind,\n\t\t\t\t],\n\t\t\t},\n\t\t\t{ no: 2, name: 'move_entry_point', kind: 'message', T: () => MoveCall },\n\t\t\t{\n\t\t\t\tno: 3,\n\t\t\t\tname: 'validator_observations',\n\t\t\t\tkind: 'message',\n\t\t\t\trepeat: 1 /*RepeatType.PACKED*/,\n\t\t\t\tT: () => ValidatorExecutionTimeObservation,\n\t\t\t},\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.ExecutionTimeObservation\n */\nexport const ExecutionTimeObservation = new ExecutionTimeObservation$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ValidatorExecutionTimeObservation$Type extends MessageType<ValidatorExecutionTimeObservation> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.ValidatorExecutionTimeObservation', [\n\t\t\t{ no: 1, name: 'validator', kind: 'scalar', opt: true, T: 12 /*ScalarType.BYTES*/ },\n\t\t\t{ no: 2, name: 'duration', kind: 'message', T: () => Duration },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.ValidatorExecutionTimeObservation\n */\nexport const ValidatorExecutionTimeObservation = new ValidatorExecutionTimeObservation$Type();\n"],
  "mappings": "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",
  "names": ["TransactionExpiration_TransactionExpirationKind", "TransactionKind_Kind", "EndOfEpochTransactionKind_Kind", "ExecutionTimeObservation_ExecutionTimeObservationKind"]
}
