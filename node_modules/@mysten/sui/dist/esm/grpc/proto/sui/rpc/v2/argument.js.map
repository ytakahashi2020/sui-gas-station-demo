{
  "version": 3,
  "sources": ["../../../../../../../src/grpc/proto/sui/rpc/v2/argument.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\n// @generated by protobuf-ts 2.9.6 with parameter force_server_none,optimize_code_size,ts_nocheck\n// @generated from protobuf file \"sui/rpc/v2/argument.proto\" (package \"sui.rpc.v2\", syntax proto3)\n// tslint:disable\n// @ts-nocheck\n//\n// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n//\nimport { MessageType } from '@protobuf-ts/runtime';\n/**\n * An argument to a programmable transaction command.\n *\n * @generated from protobuf message sui.rpc.v2.Argument\n */\nexport interface Argument {\n\t/**\n\t * @generated from protobuf field: optional sui.rpc.v2.Argument.ArgumentKind kind = 1;\n\t */\n\tkind?: Argument_ArgumentKind;\n\t/**\n\t * Index of an input when `kind` is `INPUT`.\n\t *\n\t * @generated from protobuf field: optional uint32 input = 2;\n\t */\n\tinput?: number;\n\t/**\n\t * Index of a result when `kind` is `RESULT`.\n\t *\n\t * @generated from protobuf field: optional uint32 result = 3;\n\t */\n\tresult?: number;\n\t/**\n\t * Used to access a nested result when `kind` is `RESULT`.\n\t *\n\t * @generated from protobuf field: optional uint32 subresult = 4;\n\t */\n\tsubresult?: number;\n}\n/**\n * @generated from protobuf enum sui.rpc.v2.Argument.ArgumentKind\n */\nexport enum Argument_ArgumentKind {\n\t/**\n\t * @generated from protobuf enum value: ARGUMENT_KIND_UNKNOWN = 0;\n\t */\n\tARGUMENT_KIND_UNKNOWN = 0,\n\t/**\n\t * The gas coin.\n\t *\n\t * @generated from protobuf enum value: GAS = 1;\n\t */\n\tGAS = 1,\n\t/**\n\t * One of the input objects or primitive values (from\n\t * `ProgrammableTransaction` inputs).\n\t *\n\t * @generated from protobuf enum value: INPUT = 2;\n\t */\n\tINPUT = 2,\n\t/**\n\t * The result of another command (from `ProgrammableTransaction` commands).\n\t *\n\t * @generated from protobuf enum value: RESULT = 3;\n\t */\n\tRESULT = 3,\n}\n// @generated message type with reflection information, may provide speed optimized methods\nclass Argument$Type extends MessageType<Argument> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.Argument', [\n\t\t\t{\n\t\t\t\tno: 1,\n\t\t\t\tname: 'kind',\n\t\t\t\tkind: 'enum',\n\t\t\t\topt: true,\n\t\t\t\tT: () => ['sui.rpc.v2.Argument.ArgumentKind', Argument_ArgumentKind],\n\t\t\t},\n\t\t\t{ no: 2, name: 'input', kind: 'scalar', opt: true, T: 13 /*ScalarType.UINT32*/ },\n\t\t\t{ no: 3, name: 'result', kind: 'scalar', opt: true, T: 13 /*ScalarType.UINT32*/ },\n\t\t\t{ no: 4, name: 'subresult', kind: 'scalar', opt: true, T: 13 /*ScalarType.UINT32*/ },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.Argument\n */\nexport const Argument = new Argument$Type();\n"],
  "mappings": "AAWA,SAAS,mBAAmB;AAiCrB,IAAK,wBAAL,kBAAKA,2BAAL;AAIN,EAAAA,8CAAA,2BAAwB,KAAxB;AAMA,EAAAA,8CAAA,SAAM,KAAN;AAOA,EAAAA,8CAAA,WAAQ,KAAR;AAMA,EAAAA,8CAAA,YAAS,KAAT;AAvBW,SAAAA;AAAA,GAAA;AA0BZ,MAAM,sBAAsB,YAAsB;AAAA,EACjD,cAAc;AACb,UAAM,uBAAuB;AAAA,MAC5B;AAAA,QACC,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA,QACN,KAAK;AAAA,QACL,GAAG,MAAM,CAAC,oCAAoC,qBAAqB;AAAA,MACpE;AAAA,MACA;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAS,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAyB;AAAA,MAC/E;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAU,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAyB;AAAA,MAChF;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAa,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAyB;AAAA,IACpF,CAAC;AAAA,EACF;AACD;AAIO,MAAM,WAAW,IAAI,cAAc;",
  "names": ["Argument_ArgumentKind"]
}
