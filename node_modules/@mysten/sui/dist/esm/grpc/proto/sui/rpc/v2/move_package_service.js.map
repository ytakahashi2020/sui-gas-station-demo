{
  "version": 3,
  "sources": ["../../../../../../../src/grpc/proto/sui/rpc/v2/move_package_service.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\n// @generated by protobuf-ts 2.9.6 with parameter force_server_none,optimize_code_size,ts_nocheck\n// @generated from protobuf file \"sui/rpc/v2/move_package_service.proto\" (package \"sui.rpc.v2\", syntax proto3)\n// tslint:disable\n// @ts-nocheck\n//\n// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n//\nimport { ServiceType } from '@protobuf-ts/runtime-rpc';\nimport { MessageType } from '@protobuf-ts/runtime';\nimport { FunctionDescriptor } from './move_package.js';\nimport { DatatypeDescriptor } from './move_package.js';\nimport { Package } from './move_package.js';\n/**\n * @generated from protobuf message sui.rpc.v2.GetPackageRequest\n */\nexport interface GetPackageRequest {\n\t/**\n\t * Required. The `storage_id` of the requested package.\n\t *\n\t * @generated from protobuf field: optional string package_id = 1;\n\t */\n\tpackageId?: string;\n}\n/**\n * @generated from protobuf message sui.rpc.v2.GetPackageResponse\n */\nexport interface GetPackageResponse {\n\t/**\n\t * The package.\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2.Package package = 1;\n\t */\n\tpackage?: Package;\n}\n/**\n * @generated from protobuf message sui.rpc.v2.GetDatatypeRequest\n */\nexport interface GetDatatypeRequest {\n\t/**\n\t * Required. The `storage_id` of the requested package.\n\t *\n\t * @generated from protobuf field: optional string package_id = 1;\n\t */\n\tpackageId?: string;\n\t/**\n\t * Required. The name of the requested module.\n\t *\n\t * @generated from protobuf field: optional string module_name = 2;\n\t */\n\tmoduleName?: string;\n\t/**\n\t * Required. The name of the requested datatype.\n\t *\n\t * @generated from protobuf field: optional string name = 3;\n\t */\n\tname?: string;\n}\n/**\n * @generated from protobuf message sui.rpc.v2.GetDatatypeResponse\n */\nexport interface GetDatatypeResponse {\n\t/**\n\t * The datatype.\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2.DatatypeDescriptor datatype = 1;\n\t */\n\tdatatype?: DatatypeDescriptor;\n}\n/**\n * @generated from protobuf message sui.rpc.v2.GetFunctionRequest\n */\nexport interface GetFunctionRequest {\n\t/**\n\t * Required. The `storage_id` of the requested package.\n\t *\n\t * @generated from protobuf field: optional string package_id = 1;\n\t */\n\tpackageId?: string;\n\t/**\n\t * Required. The name of the requested module.\n\t *\n\t * @generated from protobuf field: optional string module_name = 2;\n\t */\n\tmoduleName?: string;\n\t/**\n\t * Required. The name of the requested function.\n\t *\n\t * @generated from protobuf field: optional string name = 3;\n\t */\n\tname?: string;\n}\n/**\n * @generated from protobuf message sui.rpc.v2.GetFunctionResponse\n */\nexport interface GetFunctionResponse {\n\t/**\n\t * The function.\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2.FunctionDescriptor function = 1;\n\t */\n\tfunction?: FunctionDescriptor;\n}\n/**\n * @generated from protobuf message sui.rpc.v2.ListPackageVersionsRequest\n */\nexport interface ListPackageVersionsRequest {\n\t/**\n\t * Required. The `storage_id` of any version of the package.\n\t *\n\t * @generated from protobuf field: optional string package_id = 1;\n\t */\n\tpackageId?: string;\n\t/**\n\t * The maximum number of versions to return. The service may return fewer than this value.\n\t * If unspecified, at most `1000` entries will be returned.\n\t * The maximum value is `10000`; values above `10000` will be coerced to `10000`.\n\t *\n\t * @generated from protobuf field: optional uint32 page_size = 2;\n\t */\n\tpageSize?: number;\n\t/**\n\t * A page token, received from a previous `ListPackageVersions` call.\n\t * Provide this to retrieve the subsequent page.\n\t *\n\t * When paginating, all other parameters provided to `ListPackageVersions` must\n\t * match the call that provided the page token.\n\t *\n\t * @generated from protobuf field: optional bytes page_token = 3;\n\t */\n\tpageToken?: Uint8Array;\n}\n/**\n * @generated from protobuf message sui.rpc.v2.ListPackageVersionsResponse\n */\nexport interface ListPackageVersionsResponse {\n\t/**\n\t * List of all package versions, ordered by version.\n\t *\n\t * @generated from protobuf field: repeated sui.rpc.v2.PackageVersion versions = 1;\n\t */\n\tversions: PackageVersion[];\n\t/**\n\t * A token, which can be sent as `page_token` to retrieve the next page.\n\t * If this field is omitted, there are no subsequent pages.\n\t *\n\t * @generated from protobuf field: optional bytes next_page_token = 2;\n\t */\n\tnextPageToken?: Uint8Array;\n}\n/**\n * A simplified representation of a package version\n *\n * @generated from protobuf message sui.rpc.v2.PackageVersion\n */\nexport interface PackageVersion {\n\t/**\n\t * The storage ID of this package version\n\t *\n\t * @generated from protobuf field: optional string package_id = 1;\n\t */\n\tpackageId?: string;\n\t/**\n\t * The version number\n\t *\n\t * @generated from protobuf field: optional uint64 version = 2;\n\t */\n\tversion?: bigint;\n}\n// @generated message type with reflection information, may provide speed optimized methods\nclass GetPackageRequest$Type extends MessageType<GetPackageRequest> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.GetPackageRequest', [\n\t\t\t{ no: 1, name: 'package_id', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.GetPackageRequest\n */\nexport const GetPackageRequest = new GetPackageRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass GetPackageResponse$Type extends MessageType<GetPackageResponse> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.GetPackageResponse', [\n\t\t\t{ no: 1, name: 'package', kind: 'message', T: () => Package },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.GetPackageResponse\n */\nexport const GetPackageResponse = new GetPackageResponse$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass GetDatatypeRequest$Type extends MessageType<GetDatatypeRequest> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.GetDatatypeRequest', [\n\t\t\t{ no: 1, name: 'package_id', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 2, name: 'module_name', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 3, name: 'name', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.GetDatatypeRequest\n */\nexport const GetDatatypeRequest = new GetDatatypeRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass GetDatatypeResponse$Type extends MessageType<GetDatatypeResponse> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.GetDatatypeResponse', [\n\t\t\t{ no: 1, name: 'datatype', kind: 'message', T: () => DatatypeDescriptor },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.GetDatatypeResponse\n */\nexport const GetDatatypeResponse = new GetDatatypeResponse$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass GetFunctionRequest$Type extends MessageType<GetFunctionRequest> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.GetFunctionRequest', [\n\t\t\t{ no: 1, name: 'package_id', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 2, name: 'module_name', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 3, name: 'name', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.GetFunctionRequest\n */\nexport const GetFunctionRequest = new GetFunctionRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass GetFunctionResponse$Type extends MessageType<GetFunctionResponse> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.GetFunctionResponse', [\n\t\t\t{ no: 1, name: 'function', kind: 'message', T: () => FunctionDescriptor },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.GetFunctionResponse\n */\nexport const GetFunctionResponse = new GetFunctionResponse$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ListPackageVersionsRequest$Type extends MessageType<ListPackageVersionsRequest> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.ListPackageVersionsRequest', [\n\t\t\t{ no: 1, name: 'package_id', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 2, name: 'page_size', kind: 'scalar', opt: true, T: 13 /*ScalarType.UINT32*/ },\n\t\t\t{ no: 3, name: 'page_token', kind: 'scalar', opt: true, T: 12 /*ScalarType.BYTES*/ },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.ListPackageVersionsRequest\n */\nexport const ListPackageVersionsRequest = new ListPackageVersionsRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ListPackageVersionsResponse$Type extends MessageType<ListPackageVersionsResponse> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.ListPackageVersionsResponse', [\n\t\t\t{\n\t\t\t\tno: 1,\n\t\t\t\tname: 'versions',\n\t\t\t\tkind: 'message',\n\t\t\t\trepeat: 1 /*RepeatType.PACKED*/,\n\t\t\t\tT: () => PackageVersion,\n\t\t\t},\n\t\t\t{ no: 2, name: 'next_page_token', kind: 'scalar', opt: true, T: 12 /*ScalarType.BYTES*/ },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.ListPackageVersionsResponse\n */\nexport const ListPackageVersionsResponse = new ListPackageVersionsResponse$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass PackageVersion$Type extends MessageType<PackageVersion> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.PackageVersion', [\n\t\t\t{ no: 1, name: 'package_id', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{\n\t\t\t\tno: 2,\n\t\t\t\tname: 'version',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.PackageVersion\n */\nexport const PackageVersion = new PackageVersion$Type();\n/**\n * @generated ServiceType for protobuf service sui.rpc.v2.MovePackageService\n */\nexport const MovePackageService = new ServiceType('sui.rpc.v2.MovePackageService', [\n\t{ name: 'GetPackage', options: {}, I: GetPackageRequest, O: GetPackageResponse },\n\t{ name: 'GetDatatype', options: {}, I: GetDatatypeRequest, O: GetDatatypeResponse },\n\t{ name: 'GetFunction', options: {}, I: GetFunctionRequest, O: GetFunctionResponse },\n\t{\n\t\tname: 'ListPackageVersions',\n\t\toptions: {},\n\t\tI: ListPackageVersionsRequest,\n\t\tO: ListPackageVersionsResponse,\n\t},\n]);\n"],
  "mappings": "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",
  "names": []
}
