{
  "version": 3,
  "sources": ["../../../../../../../src/grpc/proto/sui/rpc/v2/subscription_service.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\n// @generated by protobuf-ts 2.9.6 with parameter force_server_none,optimize_code_size,ts_nocheck\n// @generated from protobuf file \"sui/rpc/v2/subscription_service.proto\" (package \"sui.rpc.v2\", syntax proto3)\n// tslint:disable\n// @ts-nocheck\n//\n// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n//\nimport { ServiceType } from '@protobuf-ts/runtime-rpc';\nimport { MessageType } from '@protobuf-ts/runtime';\nimport { Checkpoint } from './checkpoint.js';\nimport { FieldMask } from '../../../google/protobuf/field_mask.js';\n/**\n * Request message for SubscriptionService.SubscribeCheckpoints\n *\n * @generated from protobuf message sui.rpc.v2.SubscribeCheckpointsRequest\n */\nexport interface SubscribeCheckpointsRequest {\n\t/**\n\t * Optional. Mask for specifying which parts of the\n\t * SubscribeCheckpointsResponse should be returned.\n\t *\n\t * @generated from protobuf field: optional google.protobuf.FieldMask read_mask = 1;\n\t */\n\treadMask?: FieldMask;\n}\n/**\n * Response message for SubscriptionService.SubscribeCheckpoints\n *\n * @generated from protobuf message sui.rpc.v2.SubscribeCheckpointsResponse\n */\nexport interface SubscribeCheckpointsResponse {\n\t/**\n\t * Required. The checkpoint sequence number and value of the current cursor\n\t * into the checkpoint stream\n\t *\n\t * @generated from protobuf field: optional uint64 cursor = 1;\n\t */\n\tcursor?: bigint;\n\t/**\n\t * The requested data for this checkpoint\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2.Checkpoint checkpoint = 2;\n\t */\n\tcheckpoint?: Checkpoint;\n}\n// @generated message type with reflection information, may provide speed optimized methods\nclass SubscribeCheckpointsRequest$Type extends MessageType<SubscribeCheckpointsRequest> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.SubscribeCheckpointsRequest', [\n\t\t\t{ no: 1, name: 'read_mask', kind: 'message', T: () => FieldMask },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.SubscribeCheckpointsRequest\n */\nexport const SubscribeCheckpointsRequest = new SubscribeCheckpointsRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass SubscribeCheckpointsResponse$Type extends MessageType<SubscribeCheckpointsResponse> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.SubscribeCheckpointsResponse', [\n\t\t\t{\n\t\t\t\tno: 1,\n\t\t\t\tname: 'cursor',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{ no: 2, name: 'checkpoint', kind: 'message', T: () => Checkpoint },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.SubscribeCheckpointsResponse\n */\nexport const SubscribeCheckpointsResponse = new SubscribeCheckpointsResponse$Type();\n/**\n * @generated ServiceType for protobuf service sui.rpc.v2.SubscriptionService\n */\nexport const SubscriptionService = new ServiceType('sui.rpc.v2.SubscriptionService', [\n\t{\n\t\tname: 'SubscribeCheckpoints',\n\t\tserverStreaming: true,\n\t\toptions: {},\n\t\tI: SubscribeCheckpointsRequest,\n\t\tO: SubscribeCheckpointsResponse,\n\t},\n]);\n"],
  "mappings": "AAWA,SAAS,mBAAmB;AAC5B,SAAS,mBAAmB;AAC5B,SAAS,kBAAkB;AAC3B,SAAS,iBAAiB;AAoC1B,MAAM,yCAAyC,YAAyC;AAAA,EACvF,cAAc;AACb,UAAM,0CAA0C;AAAA,MAC/C,EAAE,IAAI,GAAG,MAAM,aAAa,MAAM,WAAW,GAAG,MAAM,UAAU;AAAA,IACjE,CAAC;AAAA,EACF;AACD;AAIO,MAAM,8BAA8B,IAAI,iCAAiC;AAEhF,MAAM,0CAA0C,YAA0C;AAAA,EACzF,cAAc;AACb,UAAM,2CAA2C;AAAA,MAChD;AAAA,QACC,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA,QACN,KAAK;AAAA,QACL,GAAG;AAAA,QACH,GAAG;AAAA,MACJ;AAAA,MACA,EAAE,IAAI,GAAG,MAAM,cAAc,MAAM,WAAW,GAAG,MAAM,WAAW;AAAA,IACnE,CAAC;AAAA,EACF;AACD;AAIO,MAAM,+BAA+B,IAAI,kCAAkC;AAI3E,MAAM,sBAAsB,IAAI,YAAY,kCAAkC;AAAA,EACpF;AAAA,IACC,MAAM;AAAA,IACN,iBAAiB;AAAA,IACjB,SAAS,CAAC;AAAA,IACV,GAAG;AAAA,IACH,GAAG;AAAA,EACJ;AACD,CAAC;",
  "names": []
}
