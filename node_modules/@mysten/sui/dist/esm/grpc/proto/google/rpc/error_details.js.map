{
  "version": 3,
  "sources": ["../../../../../../src/grpc/proto/google/rpc/error_details.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\n// @generated by protobuf-ts 2.9.6 with parameter force_server_none,optimize_code_size,ts_nocheck\n// @generated from protobuf file \"google/rpc/error_details.proto\" (package \"google.rpc\", syntax proto3)\n// tslint:disable\n// @ts-nocheck\n//\n// Copyright 2024 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\nimport { MessageType } from '@protobuf-ts/runtime';\nimport { Duration } from '../protobuf/duration.js';\n/**\n * Describes the cause of the error with structured details.\n *\n * Example of an error when contacting the \"pubsub.googleapis.com\" API when it\n * is not enabled:\n *\n * ```text,json\n * { \"reason\": \"API_DISABLED\"\n *   \"domain\": \"googleapis.com\"\n *   \"metadata\": {\n *     \"resource\": \"projects/123\",\n *     \"service\": \"pubsub.googleapis.com\"\n *   }\n * }\n * ```\n *\n * This response indicates that the pubsub.googleapis.com API is not enabled.\n *\n * Example of an error that is returned when attempting to create a Spanner\n * instance in a region that is out of stock:\n *\n * ```text,json\n * { \"reason\": \"STOCKOUT\"\n *   \"domain\": \"spanner.googleapis.com\",\n *   \"metadata\": {\n *     \"availableRegions\": \"us-central1,us-east2\"\n *   }\n * }\n * ```\n *\n * @generated from protobuf message google.rpc.ErrorInfo\n */\nexport interface ErrorInfo {\n\t/**\n\t * The reason of the error. This is a constant value that identifies the\n\t * proximate cause of the error. Error reasons are unique within a particular\n\t * domain of errors. This should be at most 63 characters and match a\n\t * regular expression of `[A-Z][A-Z0-9_]+[A-Z0-9]`, which represents\n\t * UPPER_SNAKE_CASE.\n\t *\n\t * @generated from protobuf field: string reason = 1;\n\t */\n\treason: string;\n\t/**\n\t * The logical grouping to which the \"reason\" belongs. The error domain\n\t * is typically the registered service name of the tool or product that\n\t * generates the error. Example: \"pubsub.googleapis.com\". If the error is\n\t * generated by some common infrastructure, the error domain must be a\n\t * globally unique value that identifies the infrastructure. For Google API\n\t * infrastructure, the error domain is \"googleapis.com\".\n\t *\n\t * @generated from protobuf field: string domain = 2;\n\t */\n\tdomain: string;\n\t/**\n\t * Additional structured details about this error.\n\t *\n\t * Keys must match a regular expression of `[a-z][a-zA-Z0-9-_]+` but should\n\t * ideally be lowerCamelCase. Also, they must be limited to 64 characters in\n\t * length. When identifying the current value of an exceeded limit, the units\n\t * should be contained in the key, not the value.  For example, rather than\n\t * `{\"instanceLimit\": \"100/request\"}`, should be returned as,\n\t * `{\"instanceLimitPerRequest\": \"100\"}`, if the client exceeds the number of\n\t * instances that can be created in a single (batch) request.\n\t *\n\t * @generated from protobuf field: map<string, string> metadata = 3;\n\t */\n\tmetadata: {\n\t\t[key: string]: string;\n\t};\n}\n/**\n * Describes when the clients can retry a failed request. Clients could ignore\n * the recommendation here or retry when this information is missing from error\n * responses.\n *\n * It's always recommended that clients should use exponential backoff when\n * retrying.\n *\n * Clients should wait until `retry_delay` amount of time has passed since\n * receiving the error response before retrying.  If retrying requests also\n * fail, clients should use an exponential backoff scheme to gradually increase\n * the delay between retries based on `retry_delay`, until either a maximum\n * number of retries have been reached or a maximum retry delay cap has been\n * reached.\n *\n * @generated from protobuf message google.rpc.RetryInfo\n */\nexport interface RetryInfo {\n\t/**\n\t * Clients should wait at least this long between retrying the same request.\n\t *\n\t * @generated from protobuf field: google.protobuf.Duration retry_delay = 1;\n\t */\n\tretryDelay?: Duration;\n}\n/**\n * Describes additional debugging info.\n *\n * @generated from protobuf message google.rpc.DebugInfo\n */\nexport interface DebugInfo {\n\t/**\n\t * The stack trace entries indicating where the error occurred.\n\t *\n\t * @generated from protobuf field: repeated string stack_entries = 1;\n\t */\n\tstackEntries: string[];\n\t/**\n\t * Additional debugging information provided by the server.\n\t *\n\t * @generated from protobuf field: string detail = 2;\n\t */\n\tdetail: string;\n}\n/**\n * Describes how a quota check failed.\n *\n * For example if a daily limit was exceeded for the calling project,\n * a service could respond with a QuotaFailure detail containing the project\n * id and the description of the quota limit that was exceeded.  If the\n * calling project hasn't enabled the service in the developer console, then\n * a service could respond with the project id and set `service_disabled`\n * to true.\n *\n * Also see RetryInfo and Help types for other details about handling a\n * quota failure.\n *\n * @generated from protobuf message google.rpc.QuotaFailure\n */\nexport interface QuotaFailure {\n\t/**\n\t * Describes all quota violations.\n\t *\n\t * @generated from protobuf field: repeated google.rpc.QuotaFailure.Violation violations = 1;\n\t */\n\tviolations: QuotaFailure_Violation[];\n}\n/**\n * A message type used to describe a single quota violation.  For example, a\n * daily quota or a custom quota that was exceeded.\n *\n * @generated from protobuf message google.rpc.QuotaFailure.Violation\n */\nexport interface QuotaFailure_Violation {\n\t/**\n\t * The subject on which the quota check failed.\n\t * For example, `clientip:<ip address of client>` or `project:<Google\n\t * developer project id>`.\n\t *\n\t * @generated from protobuf field: string subject = 1;\n\t */\n\tsubject: string;\n\t/**\n\t * A description of how the quota check failed. Clients can use this\n\t * description to find more about the quota configuration in the service's\n\t * public documentation, or find the relevant quota limit to adjust through\n\t * developer console.\n\t *\n\t * For example: \"Service disabled\" or \"Daily Limit for read operations\n\t * exceeded\".\n\t *\n\t * @generated from protobuf field: string description = 2;\n\t */\n\tdescription: string;\n}\n/**\n * Describes what preconditions have failed.\n *\n * For example, if an RPC failed because it required the Terms of Service to be\n * acknowledged, it could list the terms of service violation in the\n * PreconditionFailure message.\n *\n * @generated from protobuf message google.rpc.PreconditionFailure\n */\nexport interface PreconditionFailure {\n\t/**\n\t * Describes all precondition violations.\n\t *\n\t * @generated from protobuf field: repeated google.rpc.PreconditionFailure.Violation violations = 1;\n\t */\n\tviolations: PreconditionFailure_Violation[];\n}\n/**\n * A message type used to describe a single precondition failure.\n *\n * @generated from protobuf message google.rpc.PreconditionFailure.Violation\n */\nexport interface PreconditionFailure_Violation {\n\t/**\n\t * The type of PreconditionFailure. We recommend using a service-specific\n\t * enum type to define the supported precondition violation subjects. For\n\t * example, \"TOS\" for \"Terms of Service violation\".\n\t *\n\t * @generated from protobuf field: string type = 1;\n\t */\n\ttype: string;\n\t/**\n\t * The subject, relative to the type, that failed.\n\t * For example, \"google.com/cloud\" relative to the \"TOS\" type would indicate\n\t * which terms of service is being referenced.\n\t *\n\t * @generated from protobuf field: string subject = 2;\n\t */\n\tsubject: string;\n\t/**\n\t * A description of how the precondition failed. Developers can use this\n\t * description to understand how to fix the failure.\n\t *\n\t * For example: \"Terms of service not accepted\".\n\t *\n\t * @generated from protobuf field: string description = 3;\n\t */\n\tdescription: string;\n}\n/**\n * Describes violations in a client request. This error type focuses on the\n * syntactic aspects of the request.\n *\n * @generated from protobuf message google.rpc.BadRequest\n */\nexport interface BadRequest {\n\t/**\n\t * Describes all violations in a client request.\n\t *\n\t * @generated from protobuf field: repeated google.rpc.BadRequest.FieldViolation field_violations = 1;\n\t */\n\tfieldViolations: BadRequest_FieldViolation[];\n}\n/**\n * A message type used to describe a single bad request field.\n *\n * @generated from protobuf message google.rpc.BadRequest.FieldViolation\n */\nexport interface BadRequest_FieldViolation {\n\t/**\n\t * A path that leads to a field in the request body. The value will be a\n\t * sequence of dot-separated identifiers that identify a protocol buffer\n\t * field.\n\t *\n\t * Consider the following:\n\t *\n\t * ```text,json\n\t * message CreateContactRequest {\n\t *   message EmailAddress {\n\t *     enum Type {\n\t *       TYPE_UNSPECIFIED = 0;\n\t *       HOME = 1;\n\t *       WORK = 2;\n\t *     }\n\t *\n\t *     optional string email = 1;\n\t *     repeated EmailType type = 2;\n\t *   }\n\t *\n\t *   string full_name = 1;\n\t *   repeated EmailAddress email_addresses = 2;\n\t * }\n\t * ```\n\t *\n\t * In this example, in proto `field` could take one of the following values:\n\t *\n\t * * `full_name` for a violation in the `full_name` value\n\t * * `email_addresses[1].email` for a violation in the `email` field of the\n\t *   first `email_addresses` message\n\t * * `email_addresses[3].type[2]` for a violation in the second `type`\n\t *   value in the third `email_addresses` message.\n\t *\n\t * In JSON, the same values are represented as:\n\t *\n\t * * `fullName` for a violation in the `fullName` value\n\t * * `emailAddresses[1].email` for a violation in the `email` field of the\n\t *   first `emailAddresses` message\n\t * * `emailAddresses[3].type[2]` for a violation in the second `type`\n\t *   value in the third `emailAddresses` message.\n\t *\n\t * @generated from protobuf field: string field = 1;\n\t */\n\tfield: string;\n\t/**\n\t * A description of why the request element is bad.\n\t *\n\t * @generated from protobuf field: string description = 2;\n\t */\n\tdescription: string;\n\t/**\n\t * The reason of the field-level error. This is a constant value that\n\t * identifies the proximate cause of the field-level error. It should\n\t * uniquely identify the type of the FieldViolation within the scope of the\n\t * google.rpc.ErrorInfo.domain. This should be at most 63\n\t * characters and match a regular expression of `[A-Z][A-Z0-9_]+[A-Z0-9]`,\n\t * which represents UPPER_SNAKE_CASE.\n\t *\n\t * @generated from protobuf field: string reason = 3;\n\t */\n\treason: string;\n\t/**\n\t * Provides a localized error message for field-level errors that is safe to\n\t * return to the API consumer.\n\t *\n\t * @generated from protobuf field: google.rpc.LocalizedMessage localized_message = 4;\n\t */\n\tlocalizedMessage?: LocalizedMessage;\n}\n/**\n * Contains metadata about the request that clients can attach when filing a bug\n * or providing other forms of feedback.\n *\n * @generated from protobuf message google.rpc.RequestInfo\n */\nexport interface RequestInfo {\n\t/**\n\t * An opaque string that should only be interpreted by the service generating\n\t * it. For example, it can be used to identify requests in the service's logs.\n\t *\n\t * @generated from protobuf field: string request_id = 1;\n\t */\n\trequestId: string;\n\t/**\n\t * Any data that was used to serve this request. For example, an encrypted\n\t * stack trace that can be sent back to the service provider for debugging.\n\t *\n\t * @generated from protobuf field: string serving_data = 2;\n\t */\n\tservingData: string;\n}\n/**\n * Describes the resource that is being accessed.\n *\n * @generated from protobuf message google.rpc.ResourceInfo\n */\nexport interface ResourceInfo {\n\t/**\n\t * A name for the type of resource being accessed, e.g. \"sql table\",\n\t * \"cloud storage bucket\", \"file\", \"Google calendar\"; or the type URL\n\t * of the resource: e.g. \"type.googleapis.com/google.pubsub.v1.Topic\".\n\t *\n\t * @generated from protobuf field: string resource_type = 1;\n\t */\n\tresourceType: string;\n\t/**\n\t * The name of the resource being accessed.  For example, a shared calendar\n\t * name: \"example.com_4fghdhgsrgh@group.calendar.google.com\", if the current\n\t * error is\n\t * [google.rpc.Code.PERMISSION_DENIED][google.rpc.Code.PERMISSION_DENIED].\n\t *\n\t * @generated from protobuf field: string resource_name = 2;\n\t */\n\tresourceName: string;\n\t/**\n\t * The owner of the resource (optional).\n\t * For example, `user:<owner email>` or `project:<Google developer project\n\t * id>`.\n\t *\n\t * @generated from protobuf field: string owner = 3;\n\t */\n\towner: string;\n\t/**\n\t * Describes what error is encountered when accessing this resource.\n\t * For example, updating a cloud project may require the `writer` permission\n\t * on the developer console project.\n\t *\n\t * @generated from protobuf field: string description = 4;\n\t */\n\tdescription: string;\n}\n/**\n * Provides links to documentation or for performing an out of band action.\n *\n * For example, if a quota check failed with an error indicating the calling\n * project hasn't enabled the accessed service, this can contain a URL pointing\n * directly to the right place in the developer console to flip the bit.\n *\n * @generated from protobuf message google.rpc.Help\n */\nexport interface Help {\n\t/**\n\t * URL(s) pointing to additional information on handling the current error.\n\t *\n\t * @generated from protobuf field: repeated google.rpc.Help.Link links = 1;\n\t */\n\tlinks: Help_Link[];\n}\n/**\n * Describes a URL link.\n *\n * @generated from protobuf message google.rpc.Help.Link\n */\nexport interface Help_Link {\n\t/**\n\t * Describes what the link offers.\n\t *\n\t * @generated from protobuf field: string description = 1;\n\t */\n\tdescription: string;\n\t/**\n\t * The URL of the link.\n\t *\n\t * @generated from protobuf field: string url = 2;\n\t */\n\turl: string;\n}\n/**\n * Provides a localized error message that is safe to return to the user\n * which can be attached to an RPC error.\n *\n * @generated from protobuf message google.rpc.LocalizedMessage\n */\nexport interface LocalizedMessage {\n\t/**\n\t * The locale used following the specification defined at\n\t * https://www.rfc-editor.org/rfc/bcp/bcp47.txt.\n\t * Examples are: \"en-US\", \"fr-CH\", \"es-MX\"\n\t *\n\t * @generated from protobuf field: string locale = 1;\n\t */\n\tlocale: string;\n\t/**\n\t * The localized error message in the above locale.\n\t *\n\t * @generated from protobuf field: string message = 2;\n\t */\n\tmessage: string;\n}\n// @generated message type with reflection information, may provide speed optimized methods\nclass ErrorInfo$Type extends MessageType<ErrorInfo> {\n\tconstructor() {\n\t\tsuper('google.rpc.ErrorInfo', [\n\t\t\t{ no: 1, name: 'reason', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 2, name: 'domain', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n\t\t\t{\n\t\t\t\tno: 3,\n\t\t\t\tname: 'metadata',\n\t\t\t\tkind: 'map',\n\t\t\t\tK: 9 /*ScalarType.STRING*/,\n\t\t\t\tV: { kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n\t\t\t},\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message google.rpc.ErrorInfo\n */\nexport const ErrorInfo = new ErrorInfo$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass RetryInfo$Type extends MessageType<RetryInfo> {\n\tconstructor() {\n\t\tsuper('google.rpc.RetryInfo', [\n\t\t\t{ no: 1, name: 'retry_delay', kind: 'message', T: () => Duration },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message google.rpc.RetryInfo\n */\nexport const RetryInfo = new RetryInfo$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass DebugInfo$Type extends MessageType<DebugInfo> {\n\tconstructor() {\n\t\tsuper('google.rpc.DebugInfo', [\n\t\t\t{\n\t\t\t\tno: 1,\n\t\t\t\tname: 'stack_entries',\n\t\t\t\tkind: 'scalar',\n\t\t\t\trepeat: 2 /*RepeatType.UNPACKED*/,\n\t\t\t\tT: 9 /*ScalarType.STRING*/,\n\t\t\t},\n\t\t\t{ no: 2, name: 'detail', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message google.rpc.DebugInfo\n */\nexport const DebugInfo = new DebugInfo$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass QuotaFailure$Type extends MessageType<QuotaFailure> {\n\tconstructor() {\n\t\tsuper('google.rpc.QuotaFailure', [\n\t\t\t{\n\t\t\t\tno: 1,\n\t\t\t\tname: 'violations',\n\t\t\t\tkind: 'message',\n\t\t\t\trepeat: 1 /*RepeatType.PACKED*/,\n\t\t\t\tT: () => QuotaFailure_Violation,\n\t\t\t},\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message google.rpc.QuotaFailure\n */\nexport const QuotaFailure = new QuotaFailure$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass QuotaFailure_Violation$Type extends MessageType<QuotaFailure_Violation> {\n\tconstructor() {\n\t\tsuper('google.rpc.QuotaFailure.Violation', [\n\t\t\t{ no: 1, name: 'subject', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 2, name: 'description', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message google.rpc.QuotaFailure.Violation\n */\nexport const QuotaFailure_Violation = new QuotaFailure_Violation$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass PreconditionFailure$Type extends MessageType<PreconditionFailure> {\n\tconstructor() {\n\t\tsuper('google.rpc.PreconditionFailure', [\n\t\t\t{\n\t\t\t\tno: 1,\n\t\t\t\tname: 'violations',\n\t\t\t\tkind: 'message',\n\t\t\t\trepeat: 1 /*RepeatType.PACKED*/,\n\t\t\t\tT: () => PreconditionFailure_Violation,\n\t\t\t},\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message google.rpc.PreconditionFailure\n */\nexport const PreconditionFailure = new PreconditionFailure$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass PreconditionFailure_Violation$Type extends MessageType<PreconditionFailure_Violation> {\n\tconstructor() {\n\t\tsuper('google.rpc.PreconditionFailure.Violation', [\n\t\t\t{ no: 1, name: 'type', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 2, name: 'subject', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 3, name: 'description', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message google.rpc.PreconditionFailure.Violation\n */\nexport const PreconditionFailure_Violation = new PreconditionFailure_Violation$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass BadRequest$Type extends MessageType<BadRequest> {\n\tconstructor() {\n\t\tsuper('google.rpc.BadRequest', [\n\t\t\t{\n\t\t\t\tno: 1,\n\t\t\t\tname: 'field_violations',\n\t\t\t\tkind: 'message',\n\t\t\t\trepeat: 1 /*RepeatType.PACKED*/,\n\t\t\t\tT: () => BadRequest_FieldViolation,\n\t\t\t},\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message google.rpc.BadRequest\n */\nexport const BadRequest = new BadRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass BadRequest_FieldViolation$Type extends MessageType<BadRequest_FieldViolation> {\n\tconstructor() {\n\t\tsuper('google.rpc.BadRequest.FieldViolation', [\n\t\t\t{ no: 1, name: 'field', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 2, name: 'description', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 3, name: 'reason', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 4, name: 'localized_message', kind: 'message', T: () => LocalizedMessage },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message google.rpc.BadRequest.FieldViolation\n */\nexport const BadRequest_FieldViolation = new BadRequest_FieldViolation$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass RequestInfo$Type extends MessageType<RequestInfo> {\n\tconstructor() {\n\t\tsuper('google.rpc.RequestInfo', [\n\t\t\t{ no: 1, name: 'request_id', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 2, name: 'serving_data', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message google.rpc.RequestInfo\n */\nexport const RequestInfo = new RequestInfo$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ResourceInfo$Type extends MessageType<ResourceInfo> {\n\tconstructor() {\n\t\tsuper('google.rpc.ResourceInfo', [\n\t\t\t{ no: 1, name: 'resource_type', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 2, name: 'resource_name', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 3, name: 'owner', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 4, name: 'description', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message google.rpc.ResourceInfo\n */\nexport const ResourceInfo = new ResourceInfo$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass Help$Type extends MessageType<Help> {\n\tconstructor() {\n\t\tsuper('google.rpc.Help', [\n\t\t\t{\n\t\t\t\tno: 1,\n\t\t\t\tname: 'links',\n\t\t\t\tkind: 'message',\n\t\t\t\trepeat: 1 /*RepeatType.PACKED*/,\n\t\t\t\tT: () => Help_Link,\n\t\t\t},\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message google.rpc.Help\n */\nexport const Help = new Help$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass Help_Link$Type extends MessageType<Help_Link> {\n\tconstructor() {\n\t\tsuper('google.rpc.Help.Link', [\n\t\t\t{ no: 1, name: 'description', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 2, name: 'url', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message google.rpc.Help.Link\n */\nexport const Help_Link = new Help_Link$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass LocalizedMessage$Type extends MessageType<LocalizedMessage> {\n\tconstructor() {\n\t\tsuper('google.rpc.LocalizedMessage', [\n\t\t\t{ no: 1, name: 'locale', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 2, name: 'message', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message google.rpc.LocalizedMessage\n */\nexport const LocalizedMessage = new LocalizedMessage$Type();\n"],
  "mappings": "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",
  "names": []
}
