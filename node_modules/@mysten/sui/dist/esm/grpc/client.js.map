{
  "version": 3,
  "sources": ["../../../src/grpc/client.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport type { GrpcWebOptions } from '@protobuf-ts/grpcweb-transport';\nimport { GrpcWebFetchTransport } from '@protobuf-ts/grpcweb-transport';\nimport { TransactionExecutionServiceClient } from './proto/sui/rpc/v2/transaction_execution_service.client.js';\nimport { LedgerServiceClient } from './proto/sui/rpc/v2/ledger_service.client.js';\nimport { MovePackageServiceClient } from './proto/sui/rpc/v2/move_package_service.client.js';\nimport { SignatureVerificationServiceClient } from './proto/sui/rpc/v2/signature_verification_service.client.js';\nimport type { RpcTransport } from '@protobuf-ts/runtime-rpc';\nimport { StateServiceClient } from './proto/sui/rpc/v2/state_service.client.js';\nimport { SubscriptionServiceClient } from './proto/sui/rpc/v2/subscription_service.client.js';\nimport { GrpcCoreClient } from './core.js';\nimport type { Experimental_SuiClientTypes } from '../experimental/index.js';\nimport { Experimental_BaseClient } from '../experimental/index.js';\n\ninterface SuiGrpcTransportOptions extends GrpcWebOptions {\n\ttransport?: never;\n}\n\nexport type SuiGrpcClientOptions = {\n\tnetwork: Experimental_SuiClientTypes.Network;\n\tmvr?: Experimental_SuiClientTypes.MvrOptions;\n} & (\n\t| {\n\t\t\ttransport: RpcTransport;\n\t  }\n\t| SuiGrpcTransportOptions\n);\n\nexport class SuiGrpcClient extends Experimental_BaseClient {\n\tcore: GrpcCoreClient;\n\ttransactionExecutionService: TransactionExecutionServiceClient;\n\tledgerService: LedgerServiceClient;\n\tstateService: StateServiceClient;\n\tsubscriptionService: SubscriptionServiceClient;\n\tmovePackageService: MovePackageServiceClient;\n\tsignatureVerificationService: SignatureVerificationServiceClient;\n\n\tconstructor(options: SuiGrpcClientOptions) {\n\t\tsuper({ network: options.network });\n\t\tconst transport =\n\t\t\toptions.transport ??\n\t\t\tnew GrpcWebFetchTransport({ baseUrl: options.baseUrl, fetchInit: options.fetchInit });\n\t\tthis.transactionExecutionService = new TransactionExecutionServiceClient(transport);\n\t\tthis.ledgerService = new LedgerServiceClient(transport);\n\t\tthis.stateService = new StateServiceClient(transport);\n\t\tthis.subscriptionService = new SubscriptionServiceClient(transport);\n\t\tthis.movePackageService = new MovePackageServiceClient(transport);\n\t\tthis.signatureVerificationService = new SignatureVerificationServiceClient(transport);\n\n\t\tthis.core = new GrpcCoreClient({\n\t\t\tclient: this,\n\t\t\tbase: this,\n\t\t\tnetwork: options.network,\n\t\t\tmvr: options.mvr,\n\t\t});\n\t}\n}\n"],
  "mappings": "AAIA,SAAS,6BAA6B;AACtC,SAAS,yCAAyC;AAClD,SAAS,2BAA2B;AACpC,SAAS,gCAAgC;AACzC,SAAS,0CAA0C;AAEnD,SAAS,0BAA0B;AACnC,SAAS,iCAAiC;AAC1C,SAAS,sBAAsB;AAE/B,SAAS,+BAA+B;AAgBjC,MAAM,sBAAsB,wBAAwB;AAAA,EAS1D,YAAY,SAA+B;AAC1C,UAAM,EAAE,SAAS,QAAQ,QAAQ,CAAC;AAClC,UAAM,YACL,QAAQ,aACR,IAAI,sBAAsB,EAAE,SAAS,QAAQ,SAAS,WAAW,QAAQ,UAAU,CAAC;AACrF,SAAK,8BAA8B,IAAI,kCAAkC,SAAS;AAClF,SAAK,gBAAgB,IAAI,oBAAoB,SAAS;AACtD,SAAK,eAAe,IAAI,mBAAmB,SAAS;AACpD,SAAK,sBAAsB,IAAI,0BAA0B,SAAS;AAClE,SAAK,qBAAqB,IAAI,yBAAyB,SAAS;AAChE,SAAK,+BAA+B,IAAI,mCAAmC,SAAS;AAEpF,SAAK,OAAO,IAAI,eAAe;AAAA,MAC9B,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,SAAS,QAAQ;AAAA,MACjB,KAAK,QAAQ;AAAA,IACd,CAAC;AAAA,EACF;AACD;",
  "names": []
}
