{
  "version": 3,
  "sources": ["../../../../../../../src/grpc/proto/sui/rpc/v2/name_service.client.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\n// @generated by protobuf-ts 2.9.6 with parameter force_server_none,optimize_code_size,ts_nocheck\n// @generated from protobuf file \"sui/rpc/v2/name_service.proto\" (package \"sui.rpc.v2\", syntax proto3)\n// tslint:disable\n// @ts-nocheck\n//\n// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n//\nimport type { RpcTransport } from '@protobuf-ts/runtime-rpc';\nimport type { ServiceInfo } from '@protobuf-ts/runtime-rpc';\nimport { NameService } from './name_service.js';\nimport type { ReverseLookupNameResponse } from './name_service.js';\nimport type { ReverseLookupNameRequest } from './name_service.js';\nimport { stackIntercept } from '@protobuf-ts/runtime-rpc';\nimport type { LookupNameResponse } from './name_service.js';\nimport type { LookupNameRequest } from './name_service.js';\nimport type { UnaryCall } from '@protobuf-ts/runtime-rpc';\nimport type { RpcOptions } from '@protobuf-ts/runtime-rpc';\n/**\n * @generated from protobuf service sui.rpc.v2.NameService\n */\nexport interface INameServiceClient {\n\t/**\n\t * @generated from protobuf rpc: LookupName(sui.rpc.v2.LookupNameRequest) returns (sui.rpc.v2.LookupNameResponse);\n\t */\n\tlookupName(\n\t\tinput: LookupNameRequest,\n\t\toptions?: RpcOptions,\n\t): UnaryCall<LookupNameRequest, LookupNameResponse>;\n\t/**\n\t * @generated from protobuf rpc: ReverseLookupName(sui.rpc.v2.ReverseLookupNameRequest) returns (sui.rpc.v2.ReverseLookupNameResponse);\n\t */\n\treverseLookupName(\n\t\tinput: ReverseLookupNameRequest,\n\t\toptions?: RpcOptions,\n\t): UnaryCall<ReverseLookupNameRequest, ReverseLookupNameResponse>;\n}\n/**\n * @generated from protobuf service sui.rpc.v2.NameService\n */\nexport class NameServiceClient implements INameServiceClient, ServiceInfo {\n\ttypeName = NameService.typeName;\n\tmethods = NameService.methods;\n\toptions = NameService.options;\n\tconstructor(private readonly _transport: RpcTransport) {}\n\t/**\n\t * @generated from protobuf rpc: LookupName(sui.rpc.v2.LookupNameRequest) returns (sui.rpc.v2.LookupNameResponse);\n\t */\n\tlookupName(\n\t\tinput: LookupNameRequest,\n\t\toptions?: RpcOptions,\n\t): UnaryCall<LookupNameRequest, LookupNameResponse> {\n\t\tconst method = this.methods[0],\n\t\t\topt = this._transport.mergeOptions(options);\n\t\treturn stackIntercept<LookupNameRequest, LookupNameResponse>(\n\t\t\t'unary',\n\t\t\tthis._transport,\n\t\t\tmethod,\n\t\t\topt,\n\t\t\tinput,\n\t\t);\n\t}\n\t/**\n\t * @generated from protobuf rpc: ReverseLookupName(sui.rpc.v2.ReverseLookupNameRequest) returns (sui.rpc.v2.ReverseLookupNameResponse);\n\t */\n\treverseLookupName(\n\t\tinput: ReverseLookupNameRequest,\n\t\toptions?: RpcOptions,\n\t): UnaryCall<ReverseLookupNameRequest, ReverseLookupNameResponse> {\n\t\tconst method = this.methods[1],\n\t\t\topt = this._transport.mergeOptions(options);\n\t\treturn stackIntercept<ReverseLookupNameRequest, ReverseLookupNameResponse>(\n\t\t\t'unary',\n\t\t\tthis._transport,\n\t\t\tmethod,\n\t\t\topt,\n\t\t\tinput,\n\t\t);\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA,0BAA4B;AAG5B,yBAA+B;AA2BxB,MAAM,kBAA6D;AAAA,EAIzE,YAA6B,YAA0B;AAA1B;AAH7B,oBAAW,gCAAY;AACvB,mBAAU,gCAAY;AACtB,mBAAU,gCAAY;AAAA,EACkC;AAAA;AAAA;AAAA;AAAA,EAIxD,WACC,OACA,SACmD;AACnD,UAAM,SAAS,KAAK,QAAQ,CAAC,GAC5B,MAAM,KAAK,WAAW,aAAa,OAAO;AAC3C,eAAO;AAAA,MACN;AAAA,MACA,KAAK;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAAA,EACD;AAAA;AAAA;AAAA;AAAA,EAIA,kBACC,OACA,SACiE;AACjE,UAAM,SAAS,KAAK,QAAQ,CAAC,GAC5B,MAAM,KAAK,WAAW,aAAa,OAAO;AAC3C,eAAO;AAAA,MACN;AAAA,MACA,KAAK;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAAA,EACD;AACD;",
  "names": []
}
