{
  "version": 3,
  "sources": ["../../../../../../../src/grpc/proto/sui/rpc/v2/system_state.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\n// @generated by protobuf-ts 2.9.6 with parameter force_server_none,optimize_code_size,ts_nocheck\n// @generated from protobuf file \"sui/rpc/v2/system_state.proto\" (package \"sui.rpc.v2\", syntax proto3)\n// tslint:disable\n// @ts-nocheck\n//\n// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n//\nimport { MessageType } from '@protobuf-ts/runtime';\n/**\n * @generated from protobuf message sui.rpc.v2.SystemState\n */\nexport interface SystemState {\n\t/**\n\t * The version of the system state data structure type.\n\t *\n\t * @generated from protobuf field: optional uint64 version = 1;\n\t */\n\tversion?: bigint;\n\t/**\n\t * The epoch id\n\t *\n\t * @generated from protobuf field: optional uint64 epoch = 2;\n\t */\n\tepoch?: bigint;\n\t/**\n\t * The protocol version\n\t *\n\t * @generated from protobuf field: optional uint64 protocol_version = 3;\n\t */\n\tprotocolVersion?: bigint;\n\t/**\n\t * Information about the validators\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2.ValidatorSet validators = 4;\n\t */\n\tvalidators?: ValidatorSet;\n\t/**\n\t * Storage Fund info\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2.StorageFund storage_fund = 5;\n\t */\n\tstorageFund?: StorageFund;\n\t/**\n\t * Set of system config parameters\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2.SystemParameters parameters = 6;\n\t */\n\tparameters?: SystemParameters;\n\t/**\n\t * The reference gas price for this epoch\n\t *\n\t * @generated from protobuf field: optional uint64 reference_gas_price = 7;\n\t */\n\treferenceGasPrice?: bigint;\n\t/**\n\t * A list of the records of validator reporting each other.\n\t *\n\t * There is an entry in this list for each validator that has been reported\n\t * at least once. Each record contains all the validators that reported\n\t * them. If a validator has never been reported they don't have a record in this list.\n\t * This lists persists across epoch: a peer continues being in a reported state until the\n\t * reporter doesn't explicitly remove their report.\n\t *\n\t * @generated from protobuf field: repeated sui.rpc.v2.ValidatorReportRecord validator_report_records = 8;\n\t */\n\tvalidatorReportRecords: ValidatorReportRecord[];\n\t/**\n\t * Schedule of stake subsidies given out each epoch.\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2.StakeSubsidy stake_subsidy = 9;\n\t */\n\tstakeSubsidy?: StakeSubsidy;\n\t/**\n\t * Whether the system is running in a downgraded safe mode due to a non-recoverable bug.\n\t * This is set whenever we failed to execute advance_epoch, and ended up executing advance_epoch_safe_mode.\n\t * It can be reset once we are able to successfully execute advance_epoch.\n\t * The rest of the fields starting with `safe_mode_` are accumulated during safe mode\n\t * when advance_epoch_safe_mode is executed. They will eventually be processed once we\n\t * are out of safe mode.\n\t *\n\t * @generated from protobuf field: optional bool safe_mode = 10;\n\t */\n\tsafeMode?: boolean;\n\t/**\n\t * Storage rewards accumulated during safe_mode\n\t *\n\t * @generated from protobuf field: optional uint64 safe_mode_storage_rewards = 11;\n\t */\n\tsafeModeStorageRewards?: bigint;\n\t/**\n\t * Computation rewards accumulated during safe_mode\n\t *\n\t * @generated from protobuf field: optional uint64 safe_mode_computation_rewards = 12;\n\t */\n\tsafeModeComputationRewards?: bigint;\n\t/**\n\t * Storage rebates paid out during safe_mode\n\t *\n\t * @generated from protobuf field: optional uint64 safe_mode_storage_rebates = 13;\n\t */\n\tsafeModeStorageRebates?: bigint;\n\t/**\n\t * Nonrefundable storage fees accumulated during safe_mode\n\t *\n\t * @generated from protobuf field: optional uint64 safe_mode_non_refundable_storage_fee = 14;\n\t */\n\tsafeModeNonRefundableStorageFee?: bigint;\n\t/**\n\t * Unix timestamp of when this this epoch started\n\t *\n\t * @generated from protobuf field: optional uint64 epoch_start_timestamp_ms = 15;\n\t */\n\tepochStartTimestampMs?: bigint;\n\t/**\n\t * Any extra fields that's not defined statically.\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2.MoveTable extra_fields = 16;\n\t */\n\textraFields?: MoveTable;\n}\n/**\n * @generated from protobuf message sui.rpc.v2.ValidatorReportRecord\n */\nexport interface ValidatorReportRecord {\n\t/**\n\t * The address of the validator being reported\n\t *\n\t * @generated from protobuf field: optional string reported = 1;\n\t */\n\treported?: string;\n\t/**\n\t * The list of validator (addresses) that are reporting on the validator specified by `reported`\n\t *\n\t * @generated from protobuf field: repeated string reporters = 2;\n\t */\n\treporters: string[];\n}\n/**\n * @generated from protobuf message sui.rpc.v2.SystemParameters\n */\nexport interface SystemParameters {\n\t/**\n\t * The duration of an epoch, in milliseconds.\n\t *\n\t * @generated from protobuf field: optional uint64 epoch_duration_ms = 1;\n\t */\n\tepochDurationMs?: bigint;\n\t/**\n\t * The starting epoch in which stake subsidies start being paid out\n\t *\n\t * @generated from protobuf field: optional uint64 stake_subsidy_start_epoch = 2;\n\t */\n\tstakeSubsidyStartEpoch?: bigint;\n\t/**\n\t * Minimum number of active validators at any moment.\n\t *\n\t * @generated from protobuf field: optional uint64 min_validator_count = 3;\n\t */\n\tminValidatorCount?: bigint;\n\t/**\n\t * Maximum number of active validators at any moment.\n\t * We do not allow the number of validators in any epoch to go above this.\n\t *\n\t * @generated from protobuf field: optional uint64 max_validator_count = 4;\n\t */\n\tmaxValidatorCount?: bigint;\n\t/**\n\t * Deprecated.\n\t * Lower-bound on the amount of stake required to become a validator.\n\t *\n\t * @generated from protobuf field: optional uint64 min_validator_joining_stake = 5;\n\t */\n\tminValidatorJoiningStake?: bigint;\n\t/**\n\t * Deprecated.\n\t * Validators with stake amount below `validator_low_stake_threshold` are considered to\n\t * have low stake and will be escorted out of the validator set after being below this\n\t * threshold for more than `validator_low_stake_grace_period` number of epochs.\n\t *\n\t * @generated from protobuf field: optional uint64 validator_low_stake_threshold = 6;\n\t */\n\tvalidatorLowStakeThreshold?: bigint;\n\t/**\n\t * Deprecated.\n\t * Validators with stake below `validator_very_low_stake_threshold` will be removed\n\t * immediately at epoch change, no grace period.\n\t *\n\t * @generated from protobuf field: optional uint64 validator_very_low_stake_threshold = 7;\n\t */\n\tvalidatorVeryLowStakeThreshold?: bigint;\n\t/**\n\t * A validator can have stake below `validator_low_stake_threshold`\n\t * for this many epochs before being kicked out.\n\t *\n\t * @generated from protobuf field: optional uint64 validator_low_stake_grace_period = 8;\n\t */\n\tvalidatorLowStakeGracePeriod?: bigint;\n\t/**\n\t * Any extra fields that are not defined statically.\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2.MoveTable extra_fields = 9;\n\t */\n\textraFields?: MoveTable;\n}\n/**\n * A message that represents a Move `0x2::table::Table` or `0x2::bag::Bag`\n *\n * @generated from protobuf message sui.rpc.v2.MoveTable\n */\nexport interface MoveTable {\n\t/**\n\t * The UID of the table or bag\n\t *\n\t * @generated from protobuf field: optional string id = 1;\n\t */\n\tid?: string;\n\t/**\n\t * The size or number of key-value pairs in the table or bag\n\t *\n\t * @generated from protobuf field: optional uint64 size = 2;\n\t */\n\tsize?: bigint;\n}\n/**\n * @generated from protobuf message sui.rpc.v2.StakeSubsidy\n */\nexport interface StakeSubsidy {\n\t/**\n\t * Balance of SUI set aside for stake subsidies that will be drawn down over time.\n\t *\n\t * @generated from protobuf field: optional uint64 balance = 1;\n\t */\n\tbalance?: bigint;\n\t/**\n\t * Count of the number of times stake subsidies have been distributed.\n\t *\n\t * @generated from protobuf field: optional uint64 distribution_counter = 2;\n\t */\n\tdistributionCounter?: bigint;\n\t/**\n\t * The amount of stake subsidy to be drawn down per distribution.\n\t * This amount decays and decreases over time.\n\t *\n\t * @generated from protobuf field: optional uint64 current_distribution_amount = 3;\n\t */\n\tcurrentDistributionAmount?: bigint;\n\t/**\n\t * Number of distributions to occur before the distribution amount decays.\n\t *\n\t * @generated from protobuf field: optional uint64 stake_subsidy_period_length = 4;\n\t */\n\tstakeSubsidyPeriodLength?: bigint;\n\t/**\n\t * The rate at which the distribution amount decays at the end of each\n\t * period. Expressed in basis points.\n\t *\n\t * @generated from protobuf field: optional uint32 stake_subsidy_decrease_rate = 5;\n\t */\n\tstakeSubsidyDecreaseRate?: number;\n\t/**\n\t * Any extra fields that's not defined statically.\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2.MoveTable extra_fields = 6;\n\t */\n\textraFields?: MoveTable;\n}\n/**\n * Struct representing the onchain storage fund.\n *\n * @generated from protobuf message sui.rpc.v2.StorageFund\n */\nexport interface StorageFund {\n\t/**\n\t * This is the sum of `storage_rebate` of\n\t * all objects currently stored on-chain. To maintain this invariant, the only inflow of this\n\t * balance is storage charges collected from transactions, and the only outflow is storage rebates\n\t * of transactions, including both the portion refunded to the transaction senders as well as\n\t * the non-refundable portion taken out and put into `non_refundable_balance`.\n\t *\n\t * @generated from protobuf field: optional uint64 total_object_storage_rebates = 1;\n\t */\n\ttotalObjectStorageRebates?: bigint;\n\t/**\n\t * Represents any remaining inflow of the storage fund that should not\n\t * be taken out of the fund.\n\t *\n\t * @generated from protobuf field: optional uint64 non_refundable_balance = 2;\n\t */\n\tnonRefundableBalance?: bigint;\n}\n/**\n * @generated from protobuf message sui.rpc.v2.ValidatorSet\n */\nexport interface ValidatorSet {\n\t/**\n\t * Total amount of stake from all active validators at the beginning of the epoch.\n\t * Written only once per epoch, in `advance_epoch` function.\n\t *\n\t * @generated from protobuf field: optional uint64 total_stake = 1;\n\t */\n\ttotalStake?: bigint;\n\t/**\n\t * The current list of active validators.\n\t *\n\t * @generated from protobuf field: repeated sui.rpc.v2.Validator active_validators = 2;\n\t */\n\tactiveValidators: Validator[];\n\t/**\n\t * List of new validator candidates added during the current epoch.\n\t * They will be processed at the end of the epoch.\n\t *\n\t * key: u64 (index), value: 0x3::validator::Validator\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2.MoveTable pending_active_validators = 3;\n\t */\n\tpendingActiveValidators?: MoveTable;\n\t/**\n\t * Removal requests from the validators. Each element is an index\n\t * pointing to `active_validators`.\n\t *\n\t * @generated from protobuf field: repeated uint64 pending_removals = 4;\n\t */\n\tpendingRemovals: bigint[];\n\t/**\n\t * Mappings from staking pool's ID to the sui address of a validator.\n\t *\n\t * key: address (staking pool Id), value: address (sui address of the validator)\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2.MoveTable staking_pool_mappings = 5;\n\t */\n\tstakingPoolMappings?: MoveTable;\n\t/**\n\t * Mapping from a staking pool ID to the inactive validator that has that pool as its staking pool.\n\t * When a validator is deactivated the validator is removed from `active_validators` it\n\t * is added to this table so that stakers can continue to withdraw their stake from it.\n\t *\n\t * key: address (staking pool Id), value: 0x3::validator_wrapper::ValidatorWrapper\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2.MoveTable inactive_validators = 6;\n\t */\n\tinactiveValidators?: MoveTable;\n\t/**\n\t * Table storing preactive/candidate validators, mapping their addresses to their `Validator ` structs.\n\t * When an address calls `request_add_validator_candidate`, they get added to this table and become a preactive\n\t * validator.\n\t * When the candidate has met the min stake requirement, they can call `request_add_validator` to\n\t * officially add them to the active validator set `active_validators` next epoch.\n\t *\n\t * key: address (sui address of the validator), value: 0x3::validator_wrapper::ValidatorWrapper\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2.MoveTable validator_candidates = 7;\n\t */\n\tvalidatorCandidates?: MoveTable;\n\t/**\n\t * Table storing the number of epochs during which a validator's stake has been below the low stake threshold.\n\t *\n\t * @generated from protobuf field: map<string, uint64> at_risk_validators = 8;\n\t */\n\tatRiskValidators: {\n\t\t[key: string]: bigint;\n\t};\n\t/**\n\t * Any extra fields that's not defined statically.\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2.MoveTable extra_fields = 9;\n\t */\n\textraFields?: MoveTable;\n}\n/**\n * Definition of a Validator in the system contracts\n *\n * Note: fields of ValidatorMetadata are flattened into this type\n *\n * @generated from protobuf message sui.rpc.v2.Validator\n */\nexport interface Validator {\n\t/**\n\t * A unique human-readable name of this validator.\n\t *\n\t * @generated from protobuf field: optional string name = 1;\n\t */\n\tname?: string;\n\t/**\n\t * The Sui Address of the validator. This is the sender that created the Validator object,\n\t * and also the address to send validator/coins to during withdraws.\n\t *\n\t * @generated from protobuf field: optional string address = 2;\n\t */\n\taddress?: string;\n\t/**\n\t * @generated from protobuf field: optional string description = 3;\n\t */\n\tdescription?: string;\n\t/**\n\t * @generated from protobuf field: optional string image_url = 4;\n\t */\n\timageUrl?: string;\n\t/**\n\t * @generated from protobuf field: optional string project_url = 5;\n\t */\n\tprojectUrl?: string;\n\t/**\n\t * The public key bytes corresponding to the private key that the validator\n\t * holds to sign transactions. For now, this is the same as AuthorityName.\n\t *\n\t * @generated from protobuf field: optional bytes protocol_public_key = 7;\n\t */\n\tprotocolPublicKey?: Uint8Array;\n\t/**\n\t * This is a proof that the validator has ownership of the protocol private key\n\t *\n\t * @generated from protobuf field: optional bytes proof_of_possession = 8;\n\t */\n\tproofOfPossession?: Uint8Array;\n\t/**\n\t * The public key bytes corresponding to the private key that the validator\n\t * uses to establish TLS connections\n\t *\n\t * @generated from protobuf field: optional bytes network_public_key = 10;\n\t */\n\tnetworkPublicKey?: Uint8Array;\n\t/**\n\t * The public key bytes corresponding to the Narwhal Worker\n\t *\n\t * @generated from protobuf field: optional bytes worker_public_key = 12;\n\t */\n\tworkerPublicKey?: Uint8Array;\n\t/**\n\t * The network address of the validator (could also contain extra info such as port, DNS and etc.).\n\t *\n\t * @generated from protobuf field: optional string network_address = 13;\n\t */\n\tnetworkAddress?: string;\n\t/**\n\t * The address of the validator used for p2p activities such as state sync (could also contain extra info such as port, DNS and etc.).\n\t *\n\t * @generated from protobuf field: optional string p2p_address = 14 [json_name = \"p2pAddress\"];\n\t */\n\tp2PAddress?: string;\n\t/**\n\t * The address of the narwhal primary\n\t *\n\t * @generated from protobuf field: optional string primary_address = 15;\n\t */\n\tprimaryAddress?: string;\n\t/**\n\t * The address of the narwhal worker\n\t *\n\t * @generated from protobuf field: optional string worker_address = 16;\n\t */\n\tworkerAddress?: string;\n\t/**\n\t * @generated from protobuf field: optional bytes next_epoch_protocol_public_key = 18;\n\t */\n\tnextEpochProtocolPublicKey?: Uint8Array;\n\t/**\n\t * @generated from protobuf field: optional bytes next_epoch_proof_of_possession = 19;\n\t */\n\tnextEpochProofOfPossession?: Uint8Array;\n\t/**\n\t * @generated from protobuf field: optional bytes next_epoch_network_public_key = 21;\n\t */\n\tnextEpochNetworkPublicKey?: Uint8Array;\n\t/**\n\t * @generated from protobuf field: optional bytes next_epoch_worker_public_key = 23;\n\t */\n\tnextEpochWorkerPublicKey?: Uint8Array;\n\t/**\n\t * @generated from protobuf field: optional string next_epoch_network_address = 24;\n\t */\n\tnextEpochNetworkAddress?: string;\n\t/**\n\t * @generated from protobuf field: optional string next_epoch_p2p_address = 25 [json_name = \"nextEpochP2pAddress\"];\n\t */\n\tnextEpochP2PAddress?: string;\n\t/**\n\t * @generated from protobuf field: optional string next_epoch_primary_address = 26;\n\t */\n\tnextEpochPrimaryAddress?: string;\n\t/**\n\t * @generated from protobuf field: optional string next_epoch_worker_address = 27;\n\t */\n\tnextEpochWorkerAddress?: string;\n\t/**\n\t * Any extra fields that's not defined statically in the `ValidatorMetadata` struct\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2.MoveTable metadata_extra_fields = 28;\n\t */\n\tmetadataExtraFields?: MoveTable;\n\t/**\n\t * The voting power of this validator, which might be different from its\n\t * stake amount.\n\t *\n\t * @generated from protobuf field: optional uint64 voting_power = 29;\n\t */\n\tvotingPower?: bigint;\n\t/**\n\t * The ID of this validator's current valid `UnverifiedValidatorOperationCap`\n\t *\n\t * @generated from protobuf field: optional string operation_cap_id = 30;\n\t */\n\toperationCapId?: string;\n\t/**\n\t * Gas price quote, updated only at end of epoch.\n\t *\n\t * @generated from protobuf field: optional uint64 gas_price = 31;\n\t */\n\tgasPrice?: bigint;\n\t/**\n\t * Staking pool for this validator.\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2.StakingPool staking_pool = 32;\n\t */\n\tstakingPool?: StakingPool;\n\t/**\n\t * Commission rate of the validator, in basis point.\n\t *\n\t * @generated from protobuf field: optional uint64 commission_rate = 33;\n\t */\n\tcommissionRate?: bigint;\n\t/**\n\t * Total amount of stake that would be active in the next epoch.\n\t *\n\t * @generated from protobuf field: optional uint64 next_epoch_stake = 34;\n\t */\n\tnextEpochStake?: bigint;\n\t/**\n\t * This validator's gas price quote for the next epoch.\n\t *\n\t * @generated from protobuf field: optional uint64 next_epoch_gas_price = 35;\n\t */\n\tnextEpochGasPrice?: bigint;\n\t/**\n\t * The commission rate of the validator starting the next epoch, in basis point.\n\t *\n\t * @generated from protobuf field: optional uint64 next_epoch_commission_rate = 36;\n\t */\n\tnextEpochCommissionRate?: bigint;\n\t/**\n\t * Any extra fields that's not defined statically.\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2.MoveTable extra_fields = 37;\n\t */\n\textraFields?: MoveTable;\n}\n/**\n * A staking pool embedded in each validator struct in the system state object.\n *\n * @generated from protobuf message sui.rpc.v2.StakingPool\n */\nexport interface StakingPool {\n\t/**\n\t * UID of the StakingPool object\n\t *\n\t * @generated from protobuf field: optional string id = 1;\n\t */\n\tid?: string;\n\t/**\n\t * The epoch at which this pool became active.\n\t * The value is `None` if the pool is pre-active and `Some(<epoch_number>)` if active or inactive.\n\t *\n\t * @generated from protobuf field: optional uint64 activation_epoch = 2;\n\t */\n\tactivationEpoch?: bigint;\n\t/**\n\t * The epoch at which this staking pool ceased to be active. `None` = {pre-active, active},\n\t * `Some(<epoch_number>)` if in-active, and it was de-activated at epoch `<epoch_number>`.\n\t *\n\t * @generated from protobuf field: optional uint64 deactivation_epoch = 3;\n\t */\n\tdeactivationEpoch?: bigint;\n\t/**\n\t * The total number of SUI tokens in this pool, including the SUI in the rewards_pool, as well as in all the principal\n\t * in the `StakedSui` object, updated at epoch boundaries.\n\t *\n\t * @generated from protobuf field: optional uint64 sui_balance = 4;\n\t */\n\tsuiBalance?: bigint;\n\t/**\n\t * The epoch stake rewards will be added here at the end of each epoch.\n\t *\n\t * @generated from protobuf field: optional uint64 rewards_pool = 5;\n\t */\n\trewardsPool?: bigint;\n\t/**\n\t * Total number of pool tokens issued by the pool.\n\t *\n\t * @generated from protobuf field: optional uint64 pool_token_balance = 6;\n\t */\n\tpoolTokenBalance?: bigint;\n\t/**\n\t * Exchange rate history of previous epochs.\n\t *\n\t * The entries start from the `activation_epoch` of this pool and contains exchange rates at the beginning of each epoch,\n\t * i.e., right after the rewards for the previous epoch have been deposited into the pool.\n\t *\n\t * key: u64 (epoch number), value: PoolTokenExchangeRate\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2.MoveTable exchange_rates = 7;\n\t */\n\texchangeRates?: MoveTable;\n\t/**\n\t * Pending stake amount for this epoch, emptied at epoch boundaries.\n\t *\n\t * @generated from protobuf field: optional uint64 pending_stake = 8;\n\t */\n\tpendingStake?: bigint;\n\t/**\n\t * Pending stake withdrawn during the current epoch, emptied at epoch boundaries.\n\t * This includes both the principal and rewards SUI withdrawn.\n\t *\n\t * @generated from protobuf field: optional uint64 pending_total_sui_withdraw = 9;\n\t */\n\tpendingTotalSuiWithdraw?: bigint;\n\t/**\n\t * Pending pool token withdrawn during the current epoch, emptied at epoch boundaries.\n\t *\n\t * @generated from protobuf field: optional uint64 pending_pool_token_withdraw = 10;\n\t */\n\tpendingPoolTokenWithdraw?: bigint;\n\t/**\n\t * Any extra fields that's not defined statically.\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2.MoveTable extra_fields = 11;\n\t */\n\textraFields?: MoveTable;\n}\n// @generated message type with reflection information, may provide speed optimized methods\nclass SystemState$Type extends MessageType<SystemState> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.SystemState', [\n\t\t\t{\n\t\t\t\tno: 1,\n\t\t\t\tname: 'version',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 2,\n\t\t\t\tname: 'epoch',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 3,\n\t\t\t\tname: 'protocol_version',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{ no: 4, name: 'validators', kind: 'message', T: () => ValidatorSet },\n\t\t\t{ no: 5, name: 'storage_fund', kind: 'message', T: () => StorageFund },\n\t\t\t{ no: 6, name: 'parameters', kind: 'message', T: () => SystemParameters },\n\t\t\t{\n\t\t\t\tno: 7,\n\t\t\t\tname: 'reference_gas_price',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 8,\n\t\t\t\tname: 'validator_report_records',\n\t\t\t\tkind: 'message',\n\t\t\t\trepeat: 1 /*RepeatType.PACKED*/,\n\t\t\t\tT: () => ValidatorReportRecord,\n\t\t\t},\n\t\t\t{ no: 9, name: 'stake_subsidy', kind: 'message', T: () => StakeSubsidy },\n\t\t\t{ no: 10, name: 'safe_mode', kind: 'scalar', opt: true, T: 8 /*ScalarType.BOOL*/ },\n\t\t\t{\n\t\t\t\tno: 11,\n\t\t\t\tname: 'safe_mode_storage_rewards',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 12,\n\t\t\t\tname: 'safe_mode_computation_rewards',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 13,\n\t\t\t\tname: 'safe_mode_storage_rebates',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 14,\n\t\t\t\tname: 'safe_mode_non_refundable_storage_fee',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 15,\n\t\t\t\tname: 'epoch_start_timestamp_ms',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{ no: 16, name: 'extra_fields', kind: 'message', T: () => MoveTable },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.SystemState\n */\nexport const SystemState = new SystemState$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ValidatorReportRecord$Type extends MessageType<ValidatorReportRecord> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.ValidatorReportRecord', [\n\t\t\t{ no: 1, name: 'reported', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{\n\t\t\t\tno: 2,\n\t\t\t\tname: 'reporters',\n\t\t\t\tkind: 'scalar',\n\t\t\t\trepeat: 2 /*RepeatType.UNPACKED*/,\n\t\t\t\tT: 9 /*ScalarType.STRING*/,\n\t\t\t},\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.ValidatorReportRecord\n */\nexport const ValidatorReportRecord = new ValidatorReportRecord$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass SystemParameters$Type extends MessageType<SystemParameters> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.SystemParameters', [\n\t\t\t{\n\t\t\t\tno: 1,\n\t\t\t\tname: 'epoch_duration_ms',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 2,\n\t\t\t\tname: 'stake_subsidy_start_epoch',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 3,\n\t\t\t\tname: 'min_validator_count',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 4,\n\t\t\t\tname: 'max_validator_count',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 5,\n\t\t\t\tname: 'min_validator_joining_stake',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 6,\n\t\t\t\tname: 'validator_low_stake_threshold',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 7,\n\t\t\t\tname: 'validator_very_low_stake_threshold',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 8,\n\t\t\t\tname: 'validator_low_stake_grace_period',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{ no: 9, name: 'extra_fields', kind: 'message', T: () => MoveTable },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.SystemParameters\n */\nexport const SystemParameters = new SystemParameters$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass MoveTable$Type extends MessageType<MoveTable> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.MoveTable', [\n\t\t\t{ no: 1, name: 'id', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{\n\t\t\t\tno: 2,\n\t\t\t\tname: 'size',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.MoveTable\n */\nexport const MoveTable = new MoveTable$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass StakeSubsidy$Type extends MessageType<StakeSubsidy> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.StakeSubsidy', [\n\t\t\t{\n\t\t\t\tno: 1,\n\t\t\t\tname: 'balance',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 2,\n\t\t\t\tname: 'distribution_counter',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 3,\n\t\t\t\tname: 'current_distribution_amount',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 4,\n\t\t\t\tname: 'stake_subsidy_period_length',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 5,\n\t\t\t\tname: 'stake_subsidy_decrease_rate',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 13 /*ScalarType.UINT32*/,\n\t\t\t},\n\t\t\t{ no: 6, name: 'extra_fields', kind: 'message', T: () => MoveTable },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.StakeSubsidy\n */\nexport const StakeSubsidy = new StakeSubsidy$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass StorageFund$Type extends MessageType<StorageFund> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.StorageFund', [\n\t\t\t{\n\t\t\t\tno: 1,\n\t\t\t\tname: 'total_object_storage_rebates',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 2,\n\t\t\t\tname: 'non_refundable_balance',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.StorageFund\n */\nexport const StorageFund = new StorageFund$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ValidatorSet$Type extends MessageType<ValidatorSet> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.ValidatorSet', [\n\t\t\t{\n\t\t\t\tno: 1,\n\t\t\t\tname: 'total_stake',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 2,\n\t\t\t\tname: 'active_validators',\n\t\t\t\tkind: 'message',\n\t\t\t\trepeat: 1 /*RepeatType.PACKED*/,\n\t\t\t\tT: () => Validator,\n\t\t\t},\n\t\t\t{ no: 3, name: 'pending_active_validators', kind: 'message', T: () => MoveTable },\n\t\t\t{\n\t\t\t\tno: 4,\n\t\t\t\tname: 'pending_removals',\n\t\t\t\tkind: 'scalar',\n\t\t\t\trepeat: 1 /*RepeatType.PACKED*/,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{ no: 5, name: 'staking_pool_mappings', kind: 'message', T: () => MoveTable },\n\t\t\t{ no: 6, name: 'inactive_validators', kind: 'message', T: () => MoveTable },\n\t\t\t{ no: 7, name: 'validator_candidates', kind: 'message', T: () => MoveTable },\n\t\t\t{\n\t\t\t\tno: 8,\n\t\t\t\tname: 'at_risk_validators',\n\t\t\t\tkind: 'map',\n\t\t\t\tK: 9 /*ScalarType.STRING*/,\n\t\t\t\tV: { kind: 'scalar', T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },\n\t\t\t},\n\t\t\t{ no: 9, name: 'extra_fields', kind: 'message', T: () => MoveTable },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.ValidatorSet\n */\nexport const ValidatorSet = new ValidatorSet$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass Validator$Type extends MessageType<Validator> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.Validator', [\n\t\t\t{ no: 1, name: 'name', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 2, name: 'address', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 3, name: 'description', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 4, name: 'image_url', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 5, name: 'project_url', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 7, name: 'protocol_public_key', kind: 'scalar', opt: true, T: 12 /*ScalarType.BYTES*/ },\n\t\t\t{ no: 8, name: 'proof_of_possession', kind: 'scalar', opt: true, T: 12 /*ScalarType.BYTES*/ },\n\t\t\t{ no: 10, name: 'network_public_key', kind: 'scalar', opt: true, T: 12 /*ScalarType.BYTES*/ },\n\t\t\t{ no: 12, name: 'worker_public_key', kind: 'scalar', opt: true, T: 12 /*ScalarType.BYTES*/ },\n\t\t\t{ no: 13, name: 'network_address', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{\n\t\t\t\tno: 14,\n\t\t\t\tname: 'p2p_address',\n\t\t\t\tkind: 'scalar',\n\t\t\t\tjsonName: 'p2pAddress',\n\t\t\t\topt: true,\n\t\t\t\tT: 9 /*ScalarType.STRING*/,\n\t\t\t},\n\t\t\t{ no: 15, name: 'primary_address', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 16, name: 'worker_address', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{\n\t\t\t\tno: 18,\n\t\t\t\tname: 'next_epoch_protocol_public_key',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 12 /*ScalarType.BYTES*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 19,\n\t\t\t\tname: 'next_epoch_proof_of_possession',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 12 /*ScalarType.BYTES*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 21,\n\t\t\t\tname: 'next_epoch_network_public_key',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 12 /*ScalarType.BYTES*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 23,\n\t\t\t\tname: 'next_epoch_worker_public_key',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 12 /*ScalarType.BYTES*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 24,\n\t\t\t\tname: 'next_epoch_network_address',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 9 /*ScalarType.STRING*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 25,\n\t\t\t\tname: 'next_epoch_p2p_address',\n\t\t\t\tkind: 'scalar',\n\t\t\t\tjsonName: 'nextEpochP2pAddress',\n\t\t\t\topt: true,\n\t\t\t\tT: 9 /*ScalarType.STRING*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 26,\n\t\t\t\tname: 'next_epoch_primary_address',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 9 /*ScalarType.STRING*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 27,\n\t\t\t\tname: 'next_epoch_worker_address',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 9 /*ScalarType.STRING*/,\n\t\t\t},\n\t\t\t{ no: 28, name: 'metadata_extra_fields', kind: 'message', T: () => MoveTable },\n\t\t\t{\n\t\t\t\tno: 29,\n\t\t\t\tname: 'voting_power',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{ no: 30, name: 'operation_cap_id', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{\n\t\t\t\tno: 31,\n\t\t\t\tname: 'gas_price',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{ no: 32, name: 'staking_pool', kind: 'message', T: () => StakingPool },\n\t\t\t{\n\t\t\t\tno: 33,\n\t\t\t\tname: 'commission_rate',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 34,\n\t\t\t\tname: 'next_epoch_stake',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 35,\n\t\t\t\tname: 'next_epoch_gas_price',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 36,\n\t\t\t\tname: 'next_epoch_commission_rate',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{ no: 37, name: 'extra_fields', kind: 'message', T: () => MoveTable },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.Validator\n */\nexport const Validator = new Validator$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass StakingPool$Type extends MessageType<StakingPool> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.StakingPool', [\n\t\t\t{ no: 1, name: 'id', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{\n\t\t\t\tno: 2,\n\t\t\t\tname: 'activation_epoch',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 3,\n\t\t\t\tname: 'deactivation_epoch',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 4,\n\t\t\t\tname: 'sui_balance',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 5,\n\t\t\t\tname: 'rewards_pool',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 6,\n\t\t\t\tname: 'pool_token_balance',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{ no: 7, name: 'exchange_rates', kind: 'message', T: () => MoveTable },\n\t\t\t{\n\t\t\t\tno: 8,\n\t\t\t\tname: 'pending_stake',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 9,\n\t\t\t\tname: 'pending_total_sui_withdraw',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 10,\n\t\t\t\tname: 'pending_pool_token_withdraw',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{ no: 11, name: 'extra_fields', kind: 'message', T: () => MoveTable },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.StakingPool\n */\nexport const StakingPool = new StakingPool$Type();\n"],
  "mappings": "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",
  "names": []
}
