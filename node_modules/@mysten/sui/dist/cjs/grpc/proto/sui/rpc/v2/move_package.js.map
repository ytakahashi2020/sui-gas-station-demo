{
  "version": 3,
  "sources": ["../../../../../../../src/grpc/proto/sui/rpc/v2/move_package.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\n// @generated by protobuf-ts 2.9.6 with parameter force_server_none,optimize_code_size,ts_nocheck\n// @generated from protobuf file \"sui/rpc/v2/move_package.proto\" (package \"sui.rpc.v2\", syntax proto3)\n// tslint:disable\n// @ts-nocheck\n//\n// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n//\nimport { MessageType } from '@protobuf-ts/runtime';\n/**\n * A Move Package\n *\n * @generated from protobuf message sui.rpc.v2.Package\n */\nexport interface Package {\n\t/**\n\t * The PackageId of this package\n\t *\n\t * A package's `storage_id` is the Sui ObjectId of the package on-chain.\n\t * Outside of system packages the `storage_id` for every package version is\n\t * different.\n\t *\n\t * @generated from protobuf field: optional string storage_id = 1;\n\t */\n\tstorageId?: string;\n\t/**\n\t * The PackageId of the first published version of this package.\n\t *\n\t * A package's `original_id` (sometimes also called its `runtime_id`) is the\n\t * `storage_id` of the first version of this package that has been published.\n\t * The `original_id`/`runtime_id` is stable across all versions of the\n\t * package and does not ever change.\n\t *\n\t * @generated from protobuf field: optional string original_id = 2;\n\t */\n\toriginalId?: string;\n\t/**\n\t * The version of this package\n\t *\n\t * @generated from protobuf field: optional uint64 version = 3;\n\t */\n\tversion?: bigint;\n\t/**\n\t * The modules defined by this package\n\t *\n\t * @generated from protobuf field: repeated sui.rpc.v2.Module modules = 4;\n\t */\n\tmodules: Module[];\n\t/**\n\t * List of datatype origins for mapping datatypes to a package version where\n\t * it was first defined\n\t *\n\t * @generated from protobuf field: repeated sui.rpc.v2.TypeOrigin type_origins = 5;\n\t */\n\ttypeOrigins: TypeOrigin[];\n\t/**\n\t * The package's transitive dependencies as a mapping from the package's\n\t * runtime Id (the Id it is referred to by in other packages) to its\n\t * storage Id (the Id it is loaded from on chain).\n\t *\n\t * @generated from protobuf field: repeated sui.rpc.v2.Linkage linkage = 6;\n\t */\n\tlinkage: Linkage[];\n}\n/**\n * A Move Module.\n *\n * @generated from protobuf message sui.rpc.v2.Module\n */\nexport interface Module {\n\t/**\n\t * Name of this module.\n\t *\n\t * @generated from protobuf field: optional string name = 1;\n\t */\n\tname?: string;\n\t/**\n\t * Serialized bytecode of the module.\n\t *\n\t * @generated from protobuf field: optional bytes contents = 2;\n\t */\n\tcontents?: Uint8Array;\n\t/**\n\t * List of DataTypes defined by this module.\n\t *\n\t * @generated from protobuf field: repeated sui.rpc.v2.DatatypeDescriptor datatypes = 3;\n\t */\n\tdatatypes: DatatypeDescriptor[];\n\t/**\n\t * List of Functions defined by this module.\n\t *\n\t * @generated from protobuf field: repeated sui.rpc.v2.FunctionDescriptor functions = 4;\n\t */\n\tfunctions: FunctionDescriptor[];\n}\n/**\n * Describes a Move Datatype.\n *\n * @generated from protobuf message sui.rpc.v2.DatatypeDescriptor\n */\nexport interface DatatypeDescriptor {\n\t/**\n\t * Fully qualified name of this Datatype.\n\t *\n\t * This is `<defining_id>::<module>::<name>`\n\t *\n\t * @generated from protobuf field: optional string type_name = 1;\n\t */\n\ttypeName?: string;\n\t/**\n\t * PackageId of the package where this Datatype is defined.\n\t *\n\t * A type's `defining_id` is the `storage_id` of the package version that first introduced or added that type.\n\t *\n\t * @generated from protobuf field: optional string defining_id = 2;\n\t */\n\tdefiningId?: string;\n\t/**\n\t * Name of the module where this Datatype is defined\n\t *\n\t * @generated from protobuf field: optional string module = 3;\n\t */\n\tmodule?: string;\n\t/**\n\t * Name of this Datatype\n\t *\n\t * @generated from protobuf field: optional string name = 4;\n\t */\n\tname?: string;\n\t/**\n\t * This type's abilities\n\t *\n\t * @generated from protobuf field: repeated sui.rpc.v2.Ability abilities = 5;\n\t */\n\tabilities: Ability[];\n\t/**\n\t * Ability constraints and phantom status for this type's generic type parameters\n\t *\n\t * @generated from protobuf field: repeated sui.rpc.v2.TypeParameter type_parameters = 6;\n\t */\n\ttypeParameters: TypeParameter[];\n\t/**\n\t * Indicates whether this datatype is a 'STRUCT' or an 'ENUM'\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2.DatatypeDescriptor.DatatypeKind kind = 7;\n\t */\n\tkind?: DatatypeDescriptor_DatatypeKind;\n\t/**\n\t * Set of fields if this Datatype is a struct.\n\t *\n\t * The order of the entries is the order of how the fields are defined.\n\t *\n\t * @generated from protobuf field: repeated sui.rpc.v2.FieldDescriptor fields = 8;\n\t */\n\tfields: FieldDescriptor[];\n\t/**\n\t * Set of variants if this Datatype is an enum.\n\t *\n\t * The order of the entries is the order of how the variants are defined.\n\t *\n\t * @generated from protobuf field: repeated sui.rpc.v2.VariantDescriptor variants = 9;\n\t */\n\tvariants: VariantDescriptor[];\n}\n/**\n * @generated from protobuf enum sui.rpc.v2.DatatypeDescriptor.DatatypeKind\n */\nexport enum DatatypeDescriptor_DatatypeKind {\n\t/**\n\t * @generated from protobuf enum value: DATATYPE_KIND_UNKNOWN = 0;\n\t */\n\tDATATYPE_KIND_UNKNOWN = 0,\n\t/**\n\t * @generated from protobuf enum value: STRUCT = 1;\n\t */\n\tSTRUCT = 1,\n\t/**\n\t * @generated from protobuf enum value: ENUM = 2;\n\t */\n\tENUM = 2,\n}\n/**\n * A generic type parameter used in the declaration of a struct or enum.\n *\n * @generated from protobuf message sui.rpc.v2.TypeParameter\n */\nexport interface TypeParameter {\n\t/**\n\t * The type parameter constraints\n\t *\n\t * @generated from protobuf field: repeated sui.rpc.v2.Ability constraints = 1;\n\t */\n\tconstraints: Ability[];\n\t/**\n\t * Whether the parameter is declared as phantom\n\t *\n\t * @generated from protobuf field: optional bool is_phantom = 2;\n\t */\n\tisPhantom?: boolean;\n}\n/**\n * Descriptor of a field that belongs to a struct or enum variant\n *\n * @generated from protobuf message sui.rpc.v2.FieldDescriptor\n */\nexport interface FieldDescriptor {\n\t/**\n\t * Name of the field\n\t *\n\t * @generated from protobuf field: optional string name = 1;\n\t */\n\tname?: string;\n\t/**\n\t * Order or position of the field in the struct or enum variant definition.\n\t *\n\t * @generated from protobuf field: optional uint32 position = 2;\n\t */\n\tposition?: number;\n\t/**\n\t * The type of the field\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2.OpenSignatureBody type = 3;\n\t */\n\ttype?: OpenSignatureBody;\n}\n/**\n * Descriptor of an enum variant\n *\n * @generated from protobuf message sui.rpc.v2.VariantDescriptor\n */\nexport interface VariantDescriptor {\n\t/**\n\t * Name of the variant\n\t *\n\t * @generated from protobuf field: optional string name = 1;\n\t */\n\tname?: string;\n\t/**\n\t * Order or position of the variant in the enum definition.\n\t *\n\t * @generated from protobuf field: optional uint32 position = 2;\n\t */\n\tposition?: number;\n\t/**\n\t * Set of fields defined by this variant.\n\t *\n\t * @generated from protobuf field: repeated sui.rpc.v2.FieldDescriptor fields = 3;\n\t */\n\tfields: FieldDescriptor[];\n}\n/**\n * Representation of a type signature that could appear as a field type for a struct or enum\n *\n * @generated from protobuf message sui.rpc.v2.OpenSignatureBody\n */\nexport interface OpenSignatureBody {\n\t/**\n\t * Type of this signature\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2.OpenSignatureBody.Type type = 1;\n\t */\n\ttype?: OpenSignatureBody_Type;\n\t/**\n\t * Fully qualified name of the datatype when `type` is `DATATYPE`\n\t *\n\t * @generated from protobuf field: optional string type_name = 2;\n\t */\n\ttypeName?: string;\n\t/**\n\t * Set when `type` is `VECTOR` or `DATATYPE`\n\t *\n\t * @generated from protobuf field: repeated sui.rpc.v2.OpenSignatureBody type_parameter_instantiation = 3;\n\t */\n\ttypeParameterInstantiation: OpenSignatureBody[];\n\t/**\n\t * Position of the type parameter as defined in the containing data type descriptor when `type` is `TYPE_PARAMETER`\n\t *\n\t * @generated from protobuf field: optional uint32 type_parameter = 4;\n\t */\n\ttypeParameter?: number;\n}\n/**\n * @generated from protobuf enum sui.rpc.v2.OpenSignatureBody.Type\n */\nexport enum OpenSignatureBody_Type {\n\t/**\n\t * @generated from protobuf enum value: TYPE_UNKNOWN = 0;\n\t */\n\tTYPE_UNKNOWN = 0,\n\t/**\n\t * @generated from protobuf enum value: ADDRESS = 1;\n\t */\n\tADDRESS = 1,\n\t/**\n\t * @generated from protobuf enum value: BOOL = 2;\n\t */\n\tBOOL = 2,\n\t/**\n\t * @generated from protobuf enum value: U8 = 3;\n\t */\n\tU8 = 3,\n\t/**\n\t * @generated from protobuf enum value: U16 = 4;\n\t */\n\tU16 = 4,\n\t/**\n\t * @generated from protobuf enum value: U32 = 5;\n\t */\n\tU32 = 5,\n\t/**\n\t * @generated from protobuf enum value: U64 = 6;\n\t */\n\tU64 = 6,\n\t/**\n\t * @generated from protobuf enum value: U128 = 7;\n\t */\n\tU128 = 7,\n\t/**\n\t * @generated from protobuf enum value: U256 = 8;\n\t */\n\tU256 = 8,\n\t/**\n\t * @generated from protobuf enum value: VECTOR = 9;\n\t */\n\tVECTOR = 9,\n\t/**\n\t * @generated from protobuf enum value: DATATYPE = 10;\n\t */\n\tDATATYPE = 10,\n\t/**\n\t * @generated from protobuf enum value: TYPE_PARAMETER = 11;\n\t */\n\tTYPE_PARAMETER = 11,\n}\n/**\n * Descriptor of a Move function\n *\n * @generated from protobuf message sui.rpc.v2.FunctionDescriptor\n */\nexport interface FunctionDescriptor {\n\t/**\n\t * Name of the function\n\t *\n\t * @generated from protobuf field: optional string name = 1;\n\t */\n\tname?: string;\n\t/**\n\t * Whether the function is `public`, `private` or `public(friend)`\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2.FunctionDescriptor.Visibility visibility = 5;\n\t */\n\tvisibility?: FunctionDescriptor_Visibility;\n\t/**\n\t * Whether the function is marked `entry` or not.\n\t *\n\t * @generated from protobuf field: optional bool is_entry = 6;\n\t */\n\tisEntry?: boolean;\n\t/**\n\t * Ability constraints for type parameters\n\t *\n\t * @generated from protobuf field: repeated sui.rpc.v2.TypeParameter type_parameters = 7;\n\t */\n\ttypeParameters: TypeParameter[];\n\t/**\n\t * Formal parameter types.\n\t *\n\t * @generated from protobuf field: repeated sui.rpc.v2.OpenSignature parameters = 8;\n\t */\n\tparameters: OpenSignature[];\n\t/**\n\t * Return types.\n\t *\n\t * @generated from protobuf field: repeated sui.rpc.v2.OpenSignature returns = 9;\n\t */\n\treturns: OpenSignature[];\n}\n/**\n * @generated from protobuf enum sui.rpc.v2.FunctionDescriptor.Visibility\n */\nexport enum FunctionDescriptor_Visibility {\n\t/**\n\t * @generated from protobuf enum value: VISIBILITY_UNKNOWN = 0;\n\t */\n\tVISIBILITY_UNKNOWN = 0,\n\t/**\n\t * @generated from protobuf enum value: PRIVATE = 1;\n\t */\n\tPRIVATE = 1,\n\t/**\n\t * @generated from protobuf enum value: PUBLIC = 2;\n\t */\n\tPUBLIC = 2,\n\t/**\n\t * @generated from protobuf enum value: FRIEND = 3;\n\t */\n\tFRIEND = 3,\n}\n/**\n * Representation of a type signature that could appear as a function parameter or return value.\n *\n * @generated from protobuf message sui.rpc.v2.OpenSignature\n */\nexport interface OpenSignature {\n\t/**\n\t * @generated from protobuf field: optional sui.rpc.v2.OpenSignature.Reference reference = 1;\n\t */\n\treference?: OpenSignature_Reference;\n\t/**\n\t * @generated from protobuf field: optional sui.rpc.v2.OpenSignatureBody body = 2;\n\t */\n\tbody?: OpenSignatureBody;\n}\n/**\n * @generated from protobuf enum sui.rpc.v2.OpenSignature.Reference\n */\nexport enum OpenSignature_Reference {\n\t/**\n\t * @generated from protobuf enum value: REFERENCE_UNKNOWN = 0;\n\t */\n\tREFERENCE_UNKNOWN = 0,\n\t/**\n\t * @generated from protobuf enum value: IMMUTABLE = 1;\n\t */\n\tIMMUTABLE = 1,\n\t/**\n\t * @generated from protobuf enum value: MUTABLE = 2;\n\t */\n\tMUTABLE = 2,\n}\n/**\n * Identifies a struct and the module it was defined in.\n *\n * @generated from protobuf message sui.rpc.v2.TypeOrigin\n */\nexport interface TypeOrigin {\n\t/**\n\t * @generated from protobuf field: optional string module_name = 1;\n\t */\n\tmoduleName?: string;\n\t/**\n\t * @generated from protobuf field: optional string datatype_name = 2;\n\t */\n\tdatatypeName?: string;\n\t/**\n\t * @generated from protobuf field: optional string package_id = 3;\n\t */\n\tpackageId?: string;\n}\n/**\n * Upgraded package info for the linkage table.\n *\n * @generated from protobuf message sui.rpc.v2.Linkage\n */\nexport interface Linkage {\n\t/**\n\t * Id of the original package.\n\t *\n\t * @generated from protobuf field: optional string original_id = 1;\n\t */\n\toriginalId?: string;\n\t/**\n\t * Id of the upgraded package.\n\t *\n\t * @generated from protobuf field: optional string upgraded_id = 2;\n\t */\n\tupgradedId?: string;\n\t/**\n\t * Version of the upgraded package.\n\t *\n\t * @generated from protobuf field: optional uint64 upgraded_version = 3;\n\t */\n\tupgradedVersion?: bigint;\n}\n/**\n * An `Ability` classifies what operations are permitted for a given type\n *\n * @generated from protobuf enum sui.rpc.v2.Ability\n */\nexport enum Ability {\n\t/**\n\t * @generated from protobuf enum value: ABILITY_UNKNOWN = 0;\n\t */\n\tABILITY_UNKNOWN = 0,\n\t/**\n\t * Allows values of types with this ability to be copied\n\t *\n\t * @generated from protobuf enum value: COPY = 1;\n\t */\n\tCOPY = 1,\n\t/**\n\t * Allows values of types with this ability to be dropped.\n\t *\n\t * @generated from protobuf enum value: DROP = 2;\n\t */\n\tDROP = 2,\n\t/**\n\t * Allows values of types with this ability to exist inside a struct in global storage\n\t *\n\t * @generated from protobuf enum value: STORE = 3;\n\t */\n\tSTORE = 3,\n\t/**\n\t * Allows the type to serve as a key for global storage operations\n\t *\n\t * @generated from protobuf enum value: KEY = 4;\n\t */\n\tKEY = 4,\n}\n// @generated message type with reflection information, may provide speed optimized methods\nclass Package$Type extends MessageType<Package> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.Package', [\n\t\t\t{ no: 1, name: 'storage_id', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 2, name: 'original_id', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{\n\t\t\t\tno: 3,\n\t\t\t\tname: 'version',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{ no: 4, name: 'modules', kind: 'message', repeat: 1 /*RepeatType.PACKED*/, T: () => Module },\n\t\t\t{\n\t\t\t\tno: 5,\n\t\t\t\tname: 'type_origins',\n\t\t\t\tkind: 'message',\n\t\t\t\trepeat: 1 /*RepeatType.PACKED*/,\n\t\t\t\tT: () => TypeOrigin,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 6,\n\t\t\t\tname: 'linkage',\n\t\t\t\tkind: 'message',\n\t\t\t\trepeat: 1 /*RepeatType.PACKED*/,\n\t\t\t\tT: () => Linkage,\n\t\t\t},\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.Package\n */\nexport const Package = new Package$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass Module$Type extends MessageType<Module> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.Module', [\n\t\t\t{ no: 1, name: 'name', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 2, name: 'contents', kind: 'scalar', opt: true, T: 12 /*ScalarType.BYTES*/ },\n\t\t\t{\n\t\t\t\tno: 3,\n\t\t\t\tname: 'datatypes',\n\t\t\t\tkind: 'message',\n\t\t\t\trepeat: 1 /*RepeatType.PACKED*/,\n\t\t\t\tT: () => DatatypeDescriptor,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 4,\n\t\t\t\tname: 'functions',\n\t\t\t\tkind: 'message',\n\t\t\t\trepeat: 1 /*RepeatType.PACKED*/,\n\t\t\t\tT: () => FunctionDescriptor,\n\t\t\t},\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.Module\n */\nexport const Module = new Module$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass DatatypeDescriptor$Type extends MessageType<DatatypeDescriptor> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.DatatypeDescriptor', [\n\t\t\t{ no: 1, name: 'type_name', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 2, name: 'defining_id', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 3, name: 'module', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 4, name: 'name', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{\n\t\t\t\tno: 5,\n\t\t\t\tname: 'abilities',\n\t\t\t\tkind: 'enum',\n\t\t\t\trepeat: 1 /*RepeatType.PACKED*/,\n\t\t\t\tT: () => ['sui.rpc.v2.Ability', Ability],\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 6,\n\t\t\t\tname: 'type_parameters',\n\t\t\t\tkind: 'message',\n\t\t\t\trepeat: 1 /*RepeatType.PACKED*/,\n\t\t\t\tT: () => TypeParameter,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 7,\n\t\t\t\tname: 'kind',\n\t\t\t\tkind: 'enum',\n\t\t\t\topt: true,\n\t\t\t\tT: () => ['sui.rpc.v2.DatatypeDescriptor.DatatypeKind', DatatypeDescriptor_DatatypeKind],\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 8,\n\t\t\t\tname: 'fields',\n\t\t\t\tkind: 'message',\n\t\t\t\trepeat: 1 /*RepeatType.PACKED*/,\n\t\t\t\tT: () => FieldDescriptor,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 9,\n\t\t\t\tname: 'variants',\n\t\t\t\tkind: 'message',\n\t\t\t\trepeat: 1 /*RepeatType.PACKED*/,\n\t\t\t\tT: () => VariantDescriptor,\n\t\t\t},\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.DatatypeDescriptor\n */\nexport const DatatypeDescriptor = new DatatypeDescriptor$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass TypeParameter$Type extends MessageType<TypeParameter> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.TypeParameter', [\n\t\t\t{\n\t\t\t\tno: 1,\n\t\t\t\tname: 'constraints',\n\t\t\t\tkind: 'enum',\n\t\t\t\trepeat: 1 /*RepeatType.PACKED*/,\n\t\t\t\tT: () => ['sui.rpc.v2.Ability', Ability],\n\t\t\t},\n\t\t\t{ no: 2, name: 'is_phantom', kind: 'scalar', opt: true, T: 8 /*ScalarType.BOOL*/ },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.TypeParameter\n */\nexport const TypeParameter = new TypeParameter$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass FieldDescriptor$Type extends MessageType<FieldDescriptor> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.FieldDescriptor', [\n\t\t\t{ no: 1, name: 'name', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 2, name: 'position', kind: 'scalar', opt: true, T: 13 /*ScalarType.UINT32*/ },\n\t\t\t{ no: 3, name: 'type', kind: 'message', T: () => OpenSignatureBody },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.FieldDescriptor\n */\nexport const FieldDescriptor = new FieldDescriptor$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass VariantDescriptor$Type extends MessageType<VariantDescriptor> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.VariantDescriptor', [\n\t\t\t{ no: 1, name: 'name', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 2, name: 'position', kind: 'scalar', opt: true, T: 13 /*ScalarType.UINT32*/ },\n\t\t\t{\n\t\t\t\tno: 3,\n\t\t\t\tname: 'fields',\n\t\t\t\tkind: 'message',\n\t\t\t\trepeat: 1 /*RepeatType.PACKED*/,\n\t\t\t\tT: () => FieldDescriptor,\n\t\t\t},\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.VariantDescriptor\n */\nexport const VariantDescriptor = new VariantDescriptor$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass OpenSignatureBody$Type extends MessageType<OpenSignatureBody> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.OpenSignatureBody', [\n\t\t\t{\n\t\t\t\tno: 1,\n\t\t\t\tname: 'type',\n\t\t\t\tkind: 'enum',\n\t\t\t\topt: true,\n\t\t\t\tT: () => ['sui.rpc.v2.OpenSignatureBody.Type', OpenSignatureBody_Type],\n\t\t\t},\n\t\t\t{ no: 2, name: 'type_name', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{\n\t\t\t\tno: 3,\n\t\t\t\tname: 'type_parameter_instantiation',\n\t\t\t\tkind: 'message',\n\t\t\t\trepeat: 1 /*RepeatType.PACKED*/,\n\t\t\t\tT: () => OpenSignatureBody,\n\t\t\t},\n\t\t\t{ no: 4, name: 'type_parameter', kind: 'scalar', opt: true, T: 13 /*ScalarType.UINT32*/ },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.OpenSignatureBody\n */\nexport const OpenSignatureBody = new OpenSignatureBody$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass FunctionDescriptor$Type extends MessageType<FunctionDescriptor> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.FunctionDescriptor', [\n\t\t\t{ no: 1, name: 'name', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{\n\t\t\t\tno: 5,\n\t\t\t\tname: 'visibility',\n\t\t\t\tkind: 'enum',\n\t\t\t\topt: true,\n\t\t\t\tT: () => ['sui.rpc.v2.FunctionDescriptor.Visibility', FunctionDescriptor_Visibility],\n\t\t\t},\n\t\t\t{ no: 6, name: 'is_entry', kind: 'scalar', opt: true, T: 8 /*ScalarType.BOOL*/ },\n\t\t\t{\n\t\t\t\tno: 7,\n\t\t\t\tname: 'type_parameters',\n\t\t\t\tkind: 'message',\n\t\t\t\trepeat: 1 /*RepeatType.PACKED*/,\n\t\t\t\tT: () => TypeParameter,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 8,\n\t\t\t\tname: 'parameters',\n\t\t\t\tkind: 'message',\n\t\t\t\trepeat: 1 /*RepeatType.PACKED*/,\n\t\t\t\tT: () => OpenSignature,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 9,\n\t\t\t\tname: 'returns',\n\t\t\t\tkind: 'message',\n\t\t\t\trepeat: 1 /*RepeatType.PACKED*/,\n\t\t\t\tT: () => OpenSignature,\n\t\t\t},\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.FunctionDescriptor\n */\nexport const FunctionDescriptor = new FunctionDescriptor$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass OpenSignature$Type extends MessageType<OpenSignature> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.OpenSignature', [\n\t\t\t{\n\t\t\t\tno: 1,\n\t\t\t\tname: 'reference',\n\t\t\t\tkind: 'enum',\n\t\t\t\topt: true,\n\t\t\t\tT: () => ['sui.rpc.v2.OpenSignature.Reference', OpenSignature_Reference],\n\t\t\t},\n\t\t\t{ no: 2, name: 'body', kind: 'message', T: () => OpenSignatureBody },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.OpenSignature\n */\nexport const OpenSignature = new OpenSignature$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass TypeOrigin$Type extends MessageType<TypeOrigin> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.TypeOrigin', [\n\t\t\t{ no: 1, name: 'module_name', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 2, name: 'datatype_name', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 3, name: 'package_id', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.TypeOrigin\n */\nexport const TypeOrigin = new TypeOrigin$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass Linkage$Type extends MessageType<Linkage> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.Linkage', [\n\t\t\t{ no: 1, name: 'original_id', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 2, name: 'upgraded_id', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{\n\t\t\t\tno: 3,\n\t\t\t\tname: 'upgraded_version',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.Linkage\n */\nexport const Linkage = new Linkage$Type();\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA,qBAA4B;AA+JrB,IAAK,kCAAL,kBAAKA,qCAAL;AAIN,EAAAA,kEAAA,2BAAwB,KAAxB;AAIA,EAAAA,kEAAA,YAAS,KAAT;AAIA,EAAAA,kEAAA,UAAO,KAAP;AAZW,SAAAA;AAAA,GAAA;AAqHL,IAAK,yBAAL,kBAAKC,4BAAL;AAIN,EAAAA,gDAAA,kBAAe,KAAf;AAIA,EAAAA,gDAAA,aAAU,KAAV;AAIA,EAAAA,gDAAA,UAAO,KAAP;AAIA,EAAAA,gDAAA,QAAK,KAAL;AAIA,EAAAA,gDAAA,SAAM,KAAN;AAIA,EAAAA,gDAAA,SAAM,KAAN;AAIA,EAAAA,gDAAA,SAAM,KAAN;AAIA,EAAAA,gDAAA,UAAO,KAAP;AAIA,EAAAA,gDAAA,UAAO,KAAP;AAIA,EAAAA,gDAAA,YAAS,KAAT;AAIA,EAAAA,gDAAA,cAAW,MAAX;AAIA,EAAAA,gDAAA,oBAAiB,MAAjB;AAhDW,SAAAA;AAAA,GAAA;AAgGL,IAAK,gCAAL,kBAAKC,mCAAL;AAIN,EAAAA,8DAAA,wBAAqB,KAArB;AAIA,EAAAA,8DAAA,aAAU,KAAV;AAIA,EAAAA,8DAAA,YAAS,KAAT;AAIA,EAAAA,8DAAA,YAAS,KAAT;AAhBW,SAAAA;AAAA,GAAA;AAoCL,IAAK,0BAAL,kBAAKC,6BAAL;AAIN,EAAAA,kDAAA,uBAAoB,KAApB;AAIA,EAAAA,kDAAA,eAAY,KAAZ;AAIA,EAAAA,kDAAA,aAAU,KAAV;AAZW,SAAAA;AAAA,GAAA;AA+DL,IAAK,UAAL,kBAAKC,aAAL;AAIN,EAAAA,kBAAA,qBAAkB,KAAlB;AAMA,EAAAA,kBAAA,UAAO,KAAP;AAMA,EAAAA,kBAAA,UAAO,KAAP;AAMA,EAAAA,kBAAA,WAAQ,KAAR;AAMA,EAAAA,kBAAA,SAAM,KAAN;AA5BW,SAAAA;AAAA,GAAA;AA+BZ,MAAM,qBAAqB,2BAAqB;AAAA,EAC/C,cAAc;AACb,UAAM,sBAAsB;AAAA,MAC3B;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAc,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,MACnF;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAe,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,MACpF;AAAA,QACC,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA,QACN,KAAK;AAAA,QACL,GAAG;AAAA,QACH,GAAG;AAAA,MACJ;AAAA,MACA,EAAE,IAAI,GAAG,MAAM,WAAW,MAAM,WAAW,QAAQ,GAAyB,GAAG,MAAM,OAAO;AAAA,MAC5F;AAAA,QACC,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,GAAG,MAAM;AAAA,MACV;AAAA,MACA;AAAA,QACC,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,GAAG,MAAM;AAAA,MACV;AAAA,IACD,CAAC;AAAA,EACF;AACD;AAIO,MAAM,UAAU,IAAI,aAAa;AAExC,MAAM,oBAAoB,2BAAoB;AAAA,EAC7C,cAAc;AACb,UAAM,qBAAqB;AAAA,MAC1B;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAQ,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,MAC7E;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAY,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,MACjF;AAAA,QACC,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,GAAG,MAAM;AAAA,MACV;AAAA,MACA;AAAA,QACC,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,GAAG,MAAM;AAAA,MACV;AAAA,IACD,CAAC;AAAA,EACF;AACD;AAIO,MAAM,SAAS,IAAI,YAAY;AAEtC,MAAM,gCAAgC,2BAAgC;AAAA,EACrE,cAAc;AACb,UAAM,iCAAiC;AAAA,MACtC;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAa,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,MAClF;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAe,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,MACpF;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAU,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,MAC/E;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAQ,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,MAC7E;AAAA,QACC,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,GAAG,MAAM,CAAC,sBAAsB,OAAO;AAAA,MACxC;AAAA,MACA;AAAA,QACC,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,GAAG,MAAM;AAAA,MACV;AAAA,MACA;AAAA,QACC,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA,QACN,KAAK;AAAA,QACL,GAAG,MAAM,CAAC,8CAA8C,+BAA+B;AAAA,MACxF;AAAA,MACA;AAAA,QACC,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,GAAG,MAAM;AAAA,MACV;AAAA,MACA;AAAA,QACC,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,GAAG,MAAM;AAAA,MACV;AAAA,IACD,CAAC;AAAA,EACF;AACD;AAIO,MAAM,qBAAqB,IAAI,wBAAwB;AAE9D,MAAM,2BAA2B,2BAA2B;AAAA,EAC3D,cAAc;AACb,UAAM,4BAA4B;AAAA,MACjC;AAAA,QACC,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,GAAG,MAAM,CAAC,sBAAsB,OAAO;AAAA,MACxC;AAAA,MACA;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAc,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAsB;AAAA,IAClF,CAAC;AAAA,EACF;AACD;AAIO,MAAM,gBAAgB,IAAI,mBAAmB;AAEpD,MAAM,6BAA6B,2BAA6B;AAAA,EAC/D,cAAc;AACb,UAAM,8BAA8B;AAAA,MACnC;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAQ,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,MAC7E;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAY,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAyB;AAAA,MAClF,EAAE,IAAI,GAAG,MAAM,QAAQ,MAAM,WAAW,GAAG,MAAM,kBAAkB;AAAA,IACpE,CAAC;AAAA,EACF;AACD;AAIO,MAAM,kBAAkB,IAAI,qBAAqB;AAExD,MAAM,+BAA+B,2BAA+B;AAAA,EACnE,cAAc;AACb,UAAM,gCAAgC;AAAA,MACrC;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAQ,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,MAC7E;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAY,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAyB;AAAA,MAClF;AAAA,QACC,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,GAAG,MAAM;AAAA,MACV;AAAA,IACD,CAAC;AAAA,EACF;AACD;AAIO,MAAM,oBAAoB,IAAI,uBAAuB;AAE5D,MAAM,+BAA+B,2BAA+B;AAAA,EACnE,cAAc;AACb,UAAM,gCAAgC;AAAA,MACrC;AAAA,QACC,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA,QACN,KAAK;AAAA,QACL,GAAG,MAAM,CAAC,qCAAqC,sBAAsB;AAAA,MACtE;AAAA,MACA;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAa,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,MAClF;AAAA,QACC,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,GAAG,MAAM;AAAA,MACV;AAAA,MACA;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAkB,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAyB;AAAA,IACzF,CAAC;AAAA,EACF;AACD;AAIO,MAAM,oBAAoB,IAAI,uBAAuB;AAE5D,MAAM,gCAAgC,2BAAgC;AAAA,EACrE,cAAc;AACb,UAAM,iCAAiC;AAAA,MACtC;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAQ,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,MAC7E;AAAA,QACC,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA,QACN,KAAK;AAAA,QACL,GAAG,MAAM,CAAC,4CAA4C,6BAA6B;AAAA,MACpF;AAAA,MACA;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAY,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAsB;AAAA,MAC/E;AAAA,QACC,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,GAAG,MAAM;AAAA,MACV;AAAA,MACA;AAAA,QACC,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,GAAG,MAAM;AAAA,MACV;AAAA,MACA;AAAA,QACC,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,GAAG,MAAM;AAAA,MACV;AAAA,IACD,CAAC;AAAA,EACF;AACD;AAIO,MAAM,qBAAqB,IAAI,wBAAwB;AAE9D,MAAM,2BAA2B,2BAA2B;AAAA,EAC3D,cAAc;AACb,UAAM,4BAA4B;AAAA,MACjC;AAAA,QACC,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA,QACN,KAAK;AAAA,QACL,GAAG,MAAM,CAAC,sCAAsC,uBAAuB;AAAA,MACxE;AAAA,MACA,EAAE,IAAI,GAAG,MAAM,QAAQ,MAAM,WAAW,GAAG,MAAM,kBAAkB;AAAA,IACpE,CAAC;AAAA,EACF;AACD;AAIO,MAAM,gBAAgB,IAAI,mBAAmB;AAEpD,MAAM,wBAAwB,2BAAwB;AAAA,EACrD,cAAc;AACb,UAAM,yBAAyB;AAAA,MAC9B;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAe,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,MACpF;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAiB,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,MACtF;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAc,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,IACpF,CAAC;AAAA,EACF;AACD;AAIO,MAAM,aAAa,IAAI,gBAAgB;AAE9C,MAAM,qBAAqB,2BAAqB;AAAA,EAC/C,cAAc;AACb,UAAM,sBAAsB;AAAA,MAC3B;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAe,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,MACpF;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAe,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,MACpF;AAAA,QACC,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA,QACN,KAAK;AAAA,QACL,GAAG;AAAA,QACH,GAAG;AAAA,MACJ;AAAA,IACD,CAAC;AAAA,EACF;AACD;AAIO,MAAM,UAAU,IAAI,aAAa;",
  "names": ["DatatypeDescriptor_DatatypeKind", "OpenSignatureBody_Type", "FunctionDescriptor_Visibility", "OpenSignature_Reference", "Ability"]
}
