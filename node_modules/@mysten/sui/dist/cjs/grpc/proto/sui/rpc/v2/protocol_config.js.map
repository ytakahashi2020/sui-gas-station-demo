{
  "version": 3,
  "sources": ["../../../../../../../src/grpc/proto/sui/rpc/v2/protocol_config.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\n// @generated by protobuf-ts 2.9.6 with parameter force_server_none,optimize_code_size,ts_nocheck\n// @generated from protobuf file \"sui/rpc/v2/protocol_config.proto\" (package \"sui.rpc.v2\", syntax proto3)\n// tslint:disable\n// @ts-nocheck\n//\n// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n//\nimport { MessageType } from '@protobuf-ts/runtime';\n/**\n * @generated from protobuf message sui.rpc.v2.ProtocolConfig\n */\nexport interface ProtocolConfig {\n\t/**\n\t * @generated from protobuf field: optional uint64 protocol_version = 1;\n\t */\n\tprotocolVersion?: bigint;\n\t/**\n\t * @generated from protobuf field: map<string, bool> feature_flags = 2;\n\t */\n\tfeatureFlags: {\n\t\t[key: string]: boolean;\n\t};\n\t/**\n\t * @generated from protobuf field: map<string, string> attributes = 3;\n\t */\n\tattributes: {\n\t\t[key: string]: string;\n\t};\n}\n// @generated message type with reflection information, may provide speed optimized methods\nclass ProtocolConfig$Type extends MessageType<ProtocolConfig> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.ProtocolConfig', [\n\t\t\t{\n\t\t\t\tno: 1,\n\t\t\t\tname: 'protocol_version',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 2,\n\t\t\t\tname: 'feature_flags',\n\t\t\t\tkind: 'map',\n\t\t\t\tK: 9 /*ScalarType.STRING*/,\n\t\t\t\tV: { kind: 'scalar', T: 8 /*ScalarType.BOOL*/ },\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 3,\n\t\t\t\tname: 'attributes',\n\t\t\t\tkind: 'map',\n\t\t\t\tK: 9 /*ScalarType.STRING*/,\n\t\t\t\tV: { kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n\t\t\t},\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.ProtocolConfig\n */\nexport const ProtocolConfig = new ProtocolConfig$Type();\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA,qBAA4B;AAuB5B,MAAM,4BAA4B,2BAA4B;AAAA,EAC7D,cAAc;AACb,UAAM,6BAA6B;AAAA,MAClC;AAAA,QACC,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA,QACN,KAAK;AAAA,QACL,GAAG;AAAA,QACH,GAAG;AAAA,MACJ;AAAA,MACA;AAAA,QACC,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA,QACN,GAAG;AAAA,QACH,GAAG;AAAA,UAAE,MAAM;AAAA,UAAU,GAAG;AAAA;AAAA,QAAsB;AAAA,MAC/C;AAAA,MACA;AAAA,QACC,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA,QACN,GAAG;AAAA,QACH,GAAG;AAAA,UAAE,MAAM;AAAA,UAAU,GAAG;AAAA;AAAA,QAAwB;AAAA,MACjD;AAAA,IACD,CAAC;AAAA,EACF;AACD;AAIO,MAAM,iBAAiB,IAAI,oBAAoB;",
  "names": []
}
