{
  "version": 3,
  "sources": ["../../../../../../../src/grpc/proto/sui/rpc/v2/ledger_service.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\n// @generated by protobuf-ts 2.9.6 with parameter force_server_none,optimize_code_size,ts_nocheck\n// @generated from protobuf file \"sui/rpc/v2/ledger_service.proto\" (package \"sui.rpc.v2\", syntax proto3)\n// tslint:disable\n// @ts-nocheck\n//\n// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n//\nimport { ServiceType } from '@protobuf-ts/runtime-rpc';\nimport { MessageType } from '@protobuf-ts/runtime';\nimport { Epoch } from './epoch.js';\nimport { Checkpoint } from './checkpoint.js';\nimport { ExecutedTransaction } from './executed_transaction.js';\nimport { Status } from '../../../google/rpc/status.js';\nimport { Object } from './object.js';\nimport { FieldMask } from '../../../google/protobuf/field_mask.js';\nimport { Timestamp } from '../../../google/protobuf/timestamp.js';\n/**\n * @generated from protobuf message sui.rpc.v2.GetServiceInfoRequest\n */\nexport interface GetServiceInfoRequest {}\n/**\n * @generated from protobuf message sui.rpc.v2.GetServiceInfoResponse\n */\nexport interface GetServiceInfoResponse {\n\t/**\n\t * The chain identifier of the chain that this node is on.\n\t *\n\t * The chain identifier is the digest of the genesis checkpoint, the\n\t * checkpoint with sequence number 0.\n\t *\n\t * @generated from protobuf field: optional string chain_id = 1;\n\t */\n\tchainId?: string;\n\t/**\n\t * Human-readable name of the chain that this node is on.\n\t *\n\t * This is intended to be a human-readable name like `mainnet`, `testnet`, and so on.\n\t *\n\t * @generated from protobuf field: optional string chain = 2;\n\t */\n\tchain?: string;\n\t/**\n\t * Current epoch of the node based on its highest executed checkpoint.\n\t *\n\t * @generated from protobuf field: optional uint64 epoch = 3;\n\t */\n\tepoch?: bigint;\n\t/**\n\t * Checkpoint height of the most recently executed checkpoint.\n\t *\n\t * @generated from protobuf field: optional uint64 checkpoint_height = 4;\n\t */\n\tcheckpointHeight?: bigint;\n\t/**\n\t * Unix timestamp of the most recently executed checkpoint.\n\t *\n\t * @generated from protobuf field: optional google.protobuf.Timestamp timestamp = 5;\n\t */\n\ttimestamp?: Timestamp;\n\t/**\n\t * The lowest checkpoint for which checkpoints and transaction data are available.\n\t *\n\t * @generated from protobuf field: optional uint64 lowest_available_checkpoint = 6;\n\t */\n\tlowestAvailableCheckpoint?: bigint;\n\t/**\n\t * The lowest checkpoint for which object data is available.\n\t *\n\t * @generated from protobuf field: optional uint64 lowest_available_checkpoint_objects = 7;\n\t */\n\tlowestAvailableCheckpointObjects?: bigint;\n\t/**\n\t * Software version of the service. Similar to the `server` http header.\n\t *\n\t * @generated from protobuf field: optional string server = 8;\n\t */\n\tserver?: string;\n}\n/**\n * @generated from protobuf message sui.rpc.v2.GetObjectRequest\n */\nexport interface GetObjectRequest {\n\t/**\n\t * Required. The `ObjectId` of the requested object.\n\t *\n\t * @generated from protobuf field: optional string object_id = 1;\n\t */\n\tobjectId?: string;\n\t/**\n\t * Request a specific version of the object.\n\t * If no version is specified, and the object is live, then the latest\n\t * version of the object is returned.\n\t *\n\t * @generated from protobuf field: optional uint64 version = 2;\n\t */\n\tversion?: bigint;\n\t/**\n\t * Mask specifying which fields to read.\n\t * If no mask is specified, defaults to `object_id,version,digest`.\n\t *\n\t * @generated from protobuf field: optional google.protobuf.FieldMask read_mask = 3;\n\t */\n\treadMask?: FieldMask;\n}\n/**\n * @generated from protobuf message sui.rpc.v2.GetObjectResponse\n */\nexport interface GetObjectResponse {\n\t/**\n\t * @generated from protobuf field: optional sui.rpc.v2.Object object = 1;\n\t */\n\tobject?: Object;\n}\n/**\n * @generated from protobuf message sui.rpc.v2.BatchGetObjectsRequest\n */\nexport interface BatchGetObjectsRequest {\n\t/**\n\t * @generated from protobuf field: repeated sui.rpc.v2.GetObjectRequest requests = 1;\n\t */\n\trequests: GetObjectRequest[];\n\t/**\n\t * Mask specifying which fields to read.\n\t * If no mask is specified, defaults to `object_id,version,digest`.\n\t *\n\t * @generated from protobuf field: optional google.protobuf.FieldMask read_mask = 2;\n\t */\n\treadMask?: FieldMask;\n}\n/**\n * @generated from protobuf message sui.rpc.v2.BatchGetObjectsResponse\n */\nexport interface BatchGetObjectsResponse {\n\t/**\n\t * @generated from protobuf field: repeated sui.rpc.v2.GetObjectResult objects = 1;\n\t */\n\tobjects: GetObjectResult[];\n}\n/**\n * @generated from protobuf message sui.rpc.v2.GetObjectResult\n */\nexport interface GetObjectResult {\n\t/**\n\t * @generated from protobuf oneof: result\n\t */\n\tresult:\n\t\t| {\n\t\t\t\toneofKind: 'object';\n\t\t\t\t/**\n\t\t\t\t * @generated from protobuf field: sui.rpc.v2.Object object = 1;\n\t\t\t\t */\n\t\t\t\tobject: Object;\n\t\t  }\n\t\t| {\n\t\t\t\toneofKind: 'error';\n\t\t\t\t/**\n\t\t\t\t * @generated from protobuf field: google.rpc.Status error = 2;\n\t\t\t\t */\n\t\t\t\terror: Status;\n\t\t  }\n\t\t| {\n\t\t\t\toneofKind: undefined;\n\t\t  };\n}\n/**\n * @generated from protobuf message sui.rpc.v2.GetTransactionRequest\n */\nexport interface GetTransactionRequest {\n\t/**\n\t * Required. The digest of the requested transaction.\n\t *\n\t * @generated from protobuf field: optional string digest = 1;\n\t */\n\tdigest?: string;\n\t/**\n\t * Mask specifying which fields to read.\n\t * If no mask is specified, defaults to `digest`.\n\t *\n\t * @generated from protobuf field: optional google.protobuf.FieldMask read_mask = 2;\n\t */\n\treadMask?: FieldMask;\n}\n/**\n * @generated from protobuf message sui.rpc.v2.GetTransactionResponse\n */\nexport interface GetTransactionResponse {\n\t/**\n\t * @generated from protobuf field: optional sui.rpc.v2.ExecutedTransaction transaction = 1;\n\t */\n\ttransaction?: ExecutedTransaction;\n}\n/**\n * @generated from protobuf message sui.rpc.v2.BatchGetTransactionsRequest\n */\nexport interface BatchGetTransactionsRequest {\n\t/**\n\t * Required. The digests of the requested transactions.\n\t *\n\t * @generated from protobuf field: repeated string digests = 1;\n\t */\n\tdigests: string[];\n\t/**\n\t * Mask specifying which fields to read.\n\t * If no mask is specified, defaults to `digest`.\n\t *\n\t * @generated from protobuf field: optional google.protobuf.FieldMask read_mask = 2;\n\t */\n\treadMask?: FieldMask;\n}\n/**\n * @generated from protobuf message sui.rpc.v2.BatchGetTransactionsResponse\n */\nexport interface BatchGetTransactionsResponse {\n\t/**\n\t * @generated from protobuf field: repeated sui.rpc.v2.GetTransactionResult transactions = 1;\n\t */\n\ttransactions: GetTransactionResult[];\n}\n/**\n * @generated from protobuf message sui.rpc.v2.GetTransactionResult\n */\nexport interface GetTransactionResult {\n\t/**\n\t * @generated from protobuf oneof: result\n\t */\n\tresult:\n\t\t| {\n\t\t\t\toneofKind: 'transaction';\n\t\t\t\t/**\n\t\t\t\t * @generated from protobuf field: sui.rpc.v2.ExecutedTransaction transaction = 1;\n\t\t\t\t */\n\t\t\t\ttransaction: ExecutedTransaction;\n\t\t  }\n\t\t| {\n\t\t\t\toneofKind: 'error';\n\t\t\t\t/**\n\t\t\t\t * @generated from protobuf field: google.rpc.Status error = 2;\n\t\t\t\t */\n\t\t\t\terror: Status;\n\t\t  }\n\t\t| {\n\t\t\t\toneofKind: undefined;\n\t\t  };\n}\n/**\n * @generated from protobuf message sui.rpc.v2.GetCheckpointRequest\n */\nexport interface GetCheckpointRequest {\n\t/**\n\t * @generated from protobuf oneof: checkpoint_id\n\t */\n\tcheckpointId:\n\t\t| {\n\t\t\t\toneofKind: 'sequenceNumber';\n\t\t\t\t/**\n\t\t\t\t * The sequence number of the requested checkpoint.\n\t\t\t\t *\n\t\t\t\t * @generated from protobuf field: uint64 sequence_number = 1;\n\t\t\t\t */\n\t\t\t\tsequenceNumber: bigint;\n\t\t  }\n\t\t| {\n\t\t\t\toneofKind: 'digest';\n\t\t\t\t/**\n\t\t\t\t * The digest of the requested checkpoint.\n\t\t\t\t *\n\t\t\t\t * @generated from protobuf field: string digest = 2;\n\t\t\t\t */\n\t\t\t\tdigest: string;\n\t\t  }\n\t\t| {\n\t\t\t\toneofKind: undefined;\n\t\t  };\n\t/**\n\t * Mask specifying which fields to read.\n\t * If no mask is specified, defaults to `sequence_number,digest`.\n\t *\n\t * @generated from protobuf field: optional google.protobuf.FieldMask read_mask = 3;\n\t */\n\treadMask?: FieldMask;\n}\n/**\n * @generated from protobuf message sui.rpc.v2.GetCheckpointResponse\n */\nexport interface GetCheckpointResponse {\n\t/**\n\t * @generated from protobuf field: optional sui.rpc.v2.Checkpoint checkpoint = 1;\n\t */\n\tcheckpoint?: Checkpoint;\n}\n/**\n * @generated from protobuf message sui.rpc.v2.GetEpochRequest\n */\nexport interface GetEpochRequest {\n\t/**\n\t * The requested epoch.\n\t * If no epoch is provided the current epoch will be returned.\n\t *\n\t * @generated from protobuf field: optional uint64 epoch = 1;\n\t */\n\tepoch?: bigint;\n\t/**\n\t * Mask specifying which fields to read.\n\t * If no mask is specified, defaults to `epoch`.\n\t *\n\t * @generated from protobuf field: optional google.protobuf.FieldMask read_mask = 2;\n\t */\n\treadMask?: FieldMask;\n}\n/**\n * @generated from protobuf message sui.rpc.v2.GetEpochResponse\n */\nexport interface GetEpochResponse {\n\t/**\n\t * @generated from protobuf field: optional sui.rpc.v2.Epoch epoch = 1;\n\t */\n\tepoch?: Epoch;\n}\n// @generated message type with reflection information, may provide speed optimized methods\nclass GetServiceInfoRequest$Type extends MessageType<GetServiceInfoRequest> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.GetServiceInfoRequest', []);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.GetServiceInfoRequest\n */\nexport const GetServiceInfoRequest = new GetServiceInfoRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass GetServiceInfoResponse$Type extends MessageType<GetServiceInfoResponse> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.GetServiceInfoResponse', [\n\t\t\t{ no: 1, name: 'chain_id', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 2, name: 'chain', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{\n\t\t\t\tno: 3,\n\t\t\t\tname: 'epoch',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 4,\n\t\t\t\tname: 'checkpoint_height',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{ no: 5, name: 'timestamp', kind: 'message', T: () => Timestamp },\n\t\t\t{\n\t\t\t\tno: 6,\n\t\t\t\tname: 'lowest_available_checkpoint',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 7,\n\t\t\t\tname: 'lowest_available_checkpoint_objects',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{ no: 8, name: 'server', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.GetServiceInfoResponse\n */\nexport const GetServiceInfoResponse = new GetServiceInfoResponse$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass GetObjectRequest$Type extends MessageType<GetObjectRequest> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.GetObjectRequest', [\n\t\t\t{ no: 1, name: 'object_id', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{\n\t\t\t\tno: 2,\n\t\t\t\tname: 'version',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{ no: 3, name: 'read_mask', kind: 'message', T: () => FieldMask },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.GetObjectRequest\n */\nexport const GetObjectRequest = new GetObjectRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass GetObjectResponse$Type extends MessageType<GetObjectResponse> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.GetObjectResponse', [\n\t\t\t{ no: 1, name: 'object', kind: 'message', T: () => Object },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.GetObjectResponse\n */\nexport const GetObjectResponse = new GetObjectResponse$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass BatchGetObjectsRequest$Type extends MessageType<BatchGetObjectsRequest> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.BatchGetObjectsRequest', [\n\t\t\t{\n\t\t\t\tno: 1,\n\t\t\t\tname: 'requests',\n\t\t\t\tkind: 'message',\n\t\t\t\trepeat: 1 /*RepeatType.PACKED*/,\n\t\t\t\tT: () => GetObjectRequest,\n\t\t\t},\n\t\t\t{ no: 2, name: 'read_mask', kind: 'message', T: () => FieldMask },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.BatchGetObjectsRequest\n */\nexport const BatchGetObjectsRequest = new BatchGetObjectsRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass BatchGetObjectsResponse$Type extends MessageType<BatchGetObjectsResponse> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.BatchGetObjectsResponse', [\n\t\t\t{\n\t\t\t\tno: 1,\n\t\t\t\tname: 'objects',\n\t\t\t\tkind: 'message',\n\t\t\t\trepeat: 1 /*RepeatType.PACKED*/,\n\t\t\t\tT: () => GetObjectResult,\n\t\t\t},\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.BatchGetObjectsResponse\n */\nexport const BatchGetObjectsResponse = new BatchGetObjectsResponse$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass GetObjectResult$Type extends MessageType<GetObjectResult> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.GetObjectResult', [\n\t\t\t{ no: 1, name: 'object', kind: 'message', oneof: 'result', T: () => Object },\n\t\t\t{ no: 2, name: 'error', kind: 'message', oneof: 'result', T: () => Status },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.GetObjectResult\n */\nexport const GetObjectResult = new GetObjectResult$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass GetTransactionRequest$Type extends MessageType<GetTransactionRequest> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.GetTransactionRequest', [\n\t\t\t{ no: 1, name: 'digest', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 2, name: 'read_mask', kind: 'message', T: () => FieldMask },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.GetTransactionRequest\n */\nexport const GetTransactionRequest = new GetTransactionRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass GetTransactionResponse$Type extends MessageType<GetTransactionResponse> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.GetTransactionResponse', [\n\t\t\t{ no: 1, name: 'transaction', kind: 'message', T: () => ExecutedTransaction },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.GetTransactionResponse\n */\nexport const GetTransactionResponse = new GetTransactionResponse$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass BatchGetTransactionsRequest$Type extends MessageType<BatchGetTransactionsRequest> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.BatchGetTransactionsRequest', [\n\t\t\t{\n\t\t\t\tno: 1,\n\t\t\t\tname: 'digests',\n\t\t\t\tkind: 'scalar',\n\t\t\t\trepeat: 2 /*RepeatType.UNPACKED*/,\n\t\t\t\tT: 9 /*ScalarType.STRING*/,\n\t\t\t},\n\t\t\t{ no: 2, name: 'read_mask', kind: 'message', T: () => FieldMask },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.BatchGetTransactionsRequest\n */\nexport const BatchGetTransactionsRequest = new BatchGetTransactionsRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass BatchGetTransactionsResponse$Type extends MessageType<BatchGetTransactionsResponse> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.BatchGetTransactionsResponse', [\n\t\t\t{\n\t\t\t\tno: 1,\n\t\t\t\tname: 'transactions',\n\t\t\t\tkind: 'message',\n\t\t\t\trepeat: 1 /*RepeatType.PACKED*/,\n\t\t\t\tT: () => GetTransactionResult,\n\t\t\t},\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.BatchGetTransactionsResponse\n */\nexport const BatchGetTransactionsResponse = new BatchGetTransactionsResponse$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass GetTransactionResult$Type extends MessageType<GetTransactionResult> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.GetTransactionResult', [\n\t\t\t{\n\t\t\t\tno: 1,\n\t\t\t\tname: 'transaction',\n\t\t\t\tkind: 'message',\n\t\t\t\toneof: 'result',\n\t\t\t\tT: () => ExecutedTransaction,\n\t\t\t},\n\t\t\t{ no: 2, name: 'error', kind: 'message', oneof: 'result', T: () => Status },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.GetTransactionResult\n */\nexport const GetTransactionResult = new GetTransactionResult$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass GetCheckpointRequest$Type extends MessageType<GetCheckpointRequest> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.GetCheckpointRequest', [\n\t\t\t{\n\t\t\t\tno: 1,\n\t\t\t\tname: 'sequence_number',\n\t\t\t\tkind: 'scalar',\n\t\t\t\toneof: 'checkpointId',\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{ no: 2, name: 'digest', kind: 'scalar', oneof: 'checkpointId', T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 3, name: 'read_mask', kind: 'message', T: () => FieldMask },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.GetCheckpointRequest\n */\nexport const GetCheckpointRequest = new GetCheckpointRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass GetCheckpointResponse$Type extends MessageType<GetCheckpointResponse> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.GetCheckpointResponse', [\n\t\t\t{ no: 1, name: 'checkpoint', kind: 'message', T: () => Checkpoint },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.GetCheckpointResponse\n */\nexport const GetCheckpointResponse = new GetCheckpointResponse$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass GetEpochRequest$Type extends MessageType<GetEpochRequest> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.GetEpochRequest', [\n\t\t\t{\n\t\t\t\tno: 1,\n\t\t\t\tname: 'epoch',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{ no: 2, name: 'read_mask', kind: 'message', T: () => FieldMask },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.GetEpochRequest\n */\nexport const GetEpochRequest = new GetEpochRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass GetEpochResponse$Type extends MessageType<GetEpochResponse> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.GetEpochResponse', [\n\t\t\t{ no: 1, name: 'epoch', kind: 'message', T: () => Epoch },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.GetEpochResponse\n */\nexport const GetEpochResponse = new GetEpochResponse$Type();\n/**\n * @generated ServiceType for protobuf service sui.rpc.v2.LedgerService\n */\nexport const LedgerService = new ServiceType('sui.rpc.v2.LedgerService', [\n\t{ name: 'GetServiceInfo', options: {}, I: GetServiceInfoRequest, O: GetServiceInfoResponse },\n\t{ name: 'GetObject', options: {}, I: GetObjectRequest, O: GetObjectResponse },\n\t{ name: 'BatchGetObjects', options: {}, I: BatchGetObjectsRequest, O: BatchGetObjectsResponse },\n\t{ name: 'GetTransaction', options: {}, I: GetTransactionRequest, O: GetTransactionResponse },\n\t{\n\t\tname: 'BatchGetTransactions',\n\t\toptions: {},\n\t\tI: BatchGetTransactionsRequest,\n\t\tO: BatchGetTransactionsResponse,\n\t},\n\t{ name: 'GetCheckpoint', options: {}, I: GetCheckpointRequest, O: GetCheckpointResponse },\n\t{ name: 'GetEpoch', options: {}, I: GetEpochRequest, O: GetEpochResponse },\n]);\n"],
  "mappings": "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",
  "names": []
}
