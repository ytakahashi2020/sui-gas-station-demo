{
  "version": 3,
  "sources": ["../../../../../../../src/grpc/proto/sui/rpc/v2/event.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\n// @generated by protobuf-ts 2.9.6 with parameter force_server_none,optimize_code_size,ts_nocheck\n// @generated from protobuf file \"sui/rpc/v2/event.proto\" (package \"sui.rpc.v2\", syntax proto3)\n// tslint:disable\n// @ts-nocheck\n//\n// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n//\nimport { MessageType } from '@protobuf-ts/runtime';\nimport { Value } from '../../../google/protobuf/struct.js';\nimport { Bcs } from './bcs.js';\n/**\n * Events emitted during the successful execution of a transaction.\n *\n * @generated from protobuf message sui.rpc.v2.TransactionEvents\n */\nexport interface TransactionEvents {\n\t/**\n\t * This TransactionEvents serialized as BCS.\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2.Bcs bcs = 1;\n\t */\n\tbcs?: Bcs;\n\t/**\n\t * The digest of this TransactionEvents.\n\t *\n\t * @generated from protobuf field: optional string digest = 2;\n\t */\n\tdigest?: string;\n\t/**\n\t * Set of events emitted by a transaction.\n\t *\n\t * @generated from protobuf field: repeated sui.rpc.v2.Event events = 3;\n\t */\n\tevents: Event[];\n}\n/**\n * An event.\n *\n * @generated from protobuf message sui.rpc.v2.Event\n */\nexport interface Event {\n\t/**\n\t * Package ID of the top-level function invoked by a `MoveCall` command that triggered this\n\t * event to be emitted.\n\t *\n\t * @generated from protobuf field: optional string package_id = 1;\n\t */\n\tpackageId?: string;\n\t/**\n\t * Module name of the top-level function invoked by a `MoveCall` command that triggered this\n\t * event to be emitted.\n\t *\n\t * @generated from protobuf field: optional string module = 2;\n\t */\n\tmodule?: string;\n\t/**\n\t * Address of the account that sent the transaction where this event was emitted.\n\t *\n\t * @generated from protobuf field: optional string sender = 3;\n\t */\n\tsender?: string;\n\t/**\n\t * The type of the event emitted.\n\t *\n\t * @generated from protobuf field: optional string event_type = 4;\n\t */\n\teventType?: string;\n\t/**\n\t * BCS serialized bytes of the event.\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2.Bcs contents = 5;\n\t */\n\tcontents?: Bcs;\n\t/**\n\t * JSON rendering of the event.\n\t *\n\t * @generated from protobuf field: optional google.protobuf.Value json = 6;\n\t */\n\tjson?: Value;\n}\n// @generated message type with reflection information, may provide speed optimized methods\nclass TransactionEvents$Type extends MessageType<TransactionEvents> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.TransactionEvents', [\n\t\t\t{ no: 1, name: 'bcs', kind: 'message', T: () => Bcs },\n\t\t\t{ no: 2, name: 'digest', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 3, name: 'events', kind: 'message', repeat: 1 /*RepeatType.PACKED*/, T: () => Event },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.TransactionEvents\n */\nexport const TransactionEvents = new TransactionEvents$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass Event$Type extends MessageType<Event> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.Event', [\n\t\t\t{ no: 1, name: 'package_id', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 2, name: 'module', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 3, name: 'sender', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 4, name: 'event_type', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 5, name: 'contents', kind: 'message', T: () => Bcs },\n\t\t\t{ no: 6, name: 'json', kind: 'message', T: () => Value },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.Event\n */\nexport const Event = new Event$Type();\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA,qBAA4B;AAC5B,oBAAsB;AACtB,iBAAoB;AAwEpB,MAAM,+BAA+B,2BAA+B;AAAA,EACnE,cAAc;AACb,UAAM,gCAAgC;AAAA,MACrC,EAAE,IAAI,GAAG,MAAM,OAAO,MAAM,WAAW,GAAG,MAAM,eAAI;AAAA,MACpD;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAU,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,MAC/E,EAAE,IAAI,GAAG,MAAM,UAAU,MAAM,WAAW,QAAQ,GAAyB,GAAG,MAAM,MAAM;AAAA,IAC3F,CAAC;AAAA,EACF;AACD;AAIO,MAAM,oBAAoB,IAAI,uBAAuB;AAE5D,MAAM,mBAAmB,2BAAmB;AAAA,EAC3C,cAAc;AACb,UAAM,oBAAoB;AAAA,MACzB;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAc,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,MACnF;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAU,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,MAC/E;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAU,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,MAC/E;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAc,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,MACnF,EAAE,IAAI,GAAG,MAAM,YAAY,MAAM,WAAW,GAAG,MAAM,eAAI;AAAA,MACzD,EAAE,IAAI,GAAG,MAAM,QAAQ,MAAM,WAAW,GAAG,MAAM,oBAAM;AAAA,IACxD,CAAC;AAAA,EACF;AACD;AAIO,MAAM,QAAQ,IAAI,WAAW;",
  "names": []
}
