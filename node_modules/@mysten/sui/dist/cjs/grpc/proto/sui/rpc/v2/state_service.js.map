{
  "version": 3,
  "sources": ["../../../../../../../src/grpc/proto/sui/rpc/v2/state_service.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\n// @generated by protobuf-ts 2.9.6 with parameter force_server_none,optimize_code_size,ts_nocheck\n// @generated from protobuf file \"sui/rpc/v2/state_service.proto\" (package \"sui.rpc.v2\", syntax proto3)\n// tslint:disable\n// @ts-nocheck\n//\n// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n//\nimport { ServiceType } from '@protobuf-ts/runtime-rpc';\nimport { MessageType } from '@protobuf-ts/runtime';\nimport { Bcs } from './bcs.js';\nimport { Object } from './object.js';\nimport { FieldMask } from '../../../google/protobuf/field_mask.js';\n/**\n * Request message for `NodeService.GetCoinInfo`.\n *\n * @generated from protobuf message sui.rpc.v2.GetCoinInfoRequest\n */\nexport interface GetCoinInfoRequest {\n\t/**\n\t * The coin type to request information about\n\t *\n\t * @generated from protobuf field: optional string coin_type = 1;\n\t */\n\tcoinType?: string;\n}\n/**\n * Response message for `NodeService.GetCoinInfo`.\n *\n * @generated from protobuf message sui.rpc.v2.GetCoinInfoResponse\n */\nexport interface GetCoinInfoResponse {\n\t/**\n\t * Required. The coin type.\n\t *\n\t * @generated from protobuf field: optional string coin_type = 1;\n\t */\n\tcoinType?: string;\n\t/**\n\t * This field will be populated with information about this coin\n\t * type's `0x2::coin::CoinMetadata` if it exists and has not been wrapped.\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2.CoinMetadata metadata = 2;\n\t */\n\tmetadata?: CoinMetadata;\n\t/**\n\t * This field will be populated with information about this coin\n\t * type's `0x2::coin::TreasuryCap` if it exists and has not been wrapped.\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2.CoinTreasury treasury = 3;\n\t */\n\ttreasury?: CoinTreasury;\n\t/**\n\t * If this coin type is a regulated coin, this field will be\n\t * populated with information either from its Currency object\n\t * in the CoinRegistry, or from its `0x2::coin::RegulatedCoinMetadata`\n\t * object for coins that have not been migrated to the CoinRegistry\n\t *\n\t * If this coin is not known to be regulated, only the\n\t * coin_regulated_state field will be populated.\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2.RegulatedCoinMetadata regulated_metadata = 4;\n\t */\n\tregulatedMetadata?: RegulatedCoinMetadata;\n}\n/**\n * Metadata for a coin type\n *\n * @generated from protobuf message sui.rpc.v2.CoinMetadata\n */\nexport interface CoinMetadata {\n\t/**\n\t * ObjectId of the `0x2::coin::CoinMetadata` object or\n\t * 0x2::sui::coin_registry::Currency object (when registered with CoinRegistry).\n\t *\n\t * @generated from protobuf field: optional string id = 1;\n\t */\n\tid?: string;\n\t/**\n\t * Number of decimal places to coin uses.\n\t *\n\t * @generated from protobuf field: optional uint32 decimals = 2;\n\t */\n\tdecimals?: number;\n\t/**\n\t * Name for the token\n\t *\n\t * @generated from protobuf field: optional string name = 3;\n\t */\n\tname?: string;\n\t/**\n\t * Symbol for the token\n\t *\n\t * @generated from protobuf field: optional string symbol = 4;\n\t */\n\tsymbol?: string;\n\t/**\n\t * Description of the token\n\t *\n\t * @generated from protobuf field: optional string description = 5;\n\t */\n\tdescription?: string;\n\t/**\n\t * URL for the token logo\n\t *\n\t * @generated from protobuf field: optional string icon_url = 6;\n\t */\n\ticonUrl?: string;\n\t/**\n\t * The MetadataCap ID if it has been claimed for this coin type.\n\t * This capability allows updating the coin's metadata fields.\n\t * Only populated when metadata is from CoinRegistry.\n\t *\n\t * @generated from protobuf field: optional string metadata_cap_id = 7;\n\t */\n\tmetadataCapId?: string;\n\t/**\n\t * State of the MetadataCap for this coin type.\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2.CoinMetadata.MetadataCapState metadata_cap_state = 8;\n\t */\n\tmetadataCapState?: CoinMetadata_MetadataCapState;\n}\n/**\n * Information about the state of the coin's MetadataCap\n *\n * @generated from protobuf enum sui.rpc.v2.CoinMetadata.MetadataCapState\n */\nexport enum CoinMetadata_MetadataCapState {\n\t/**\n\t * Indicates the state of the MetadataCap is unknown.\n\t * Set when the coin has not been migrated to the CoinRegistry.\n\t *\n\t * @generated from protobuf enum value: METADATA_CAP_STATE_UNKNOWN = 0;\n\t */\n\tMETADATA_CAP_STATE_UNKNOWN = 0,\n\t/**\n\t * Indicates the MetadataCap has been claimed.\n\t *\n\t * @generated from protobuf enum value: CLAIMED = 1;\n\t */\n\tCLAIMED = 1,\n\t/**\n\t * Indicates the MetadataCap has not been claimed.\n\t *\n\t * @generated from protobuf enum value: UNCLAIMED = 2;\n\t */\n\tUNCLAIMED = 2,\n\t/**\n\t * Indicates the MetadataCap has been deleted.\n\t *\n\t * @generated from protobuf enum value: DELETED = 3;\n\t */\n\tDELETED = 3,\n}\n/**\n * Information about a coin type's `0x2::coin::TreasuryCap` and its total available supply\n *\n * @generated from protobuf message sui.rpc.v2.CoinTreasury\n */\nexport interface CoinTreasury {\n\t/**\n\t * ObjectId of the `0x2::coin::TreasuryCap` object.\n\t *\n\t * @generated from protobuf field: optional string id = 1;\n\t */\n\tid?: string;\n\t/**\n\t * Total available supply for this coin type.\n\t *\n\t * @generated from protobuf field: optional uint64 total_supply = 2;\n\t */\n\ttotalSupply?: bigint;\n\t/**\n\t * Supply state indicating if the supply is fixed or can still be minted\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2.CoinTreasury.SupplyState supply_state = 3;\n\t */\n\tsupplyState?: CoinTreasury_SupplyState;\n}\n/**\n * Supply state of a coin, matching the Move SupplyState enum\n *\n * @generated from protobuf enum sui.rpc.v2.CoinTreasury.SupplyState\n */\nexport enum CoinTreasury_SupplyState {\n\t/**\n\t * Supply is unknown or TreasuryCap still exists (minting still possible)\n\t *\n\t * @generated from protobuf enum value: SUPPLY_STATE_UNKNOWN = 0;\n\t */\n\tSUPPLY_STATE_UNKNOWN = 0,\n\t/**\n\t * Supply is fixed (TreasuryCap consumed, no more minting possible)\n\t *\n\t * @generated from protobuf enum value: FIXED = 1;\n\t */\n\tFIXED = 1,\n\t/**\n\t * Supply can only decrease (burning allowed, minting not allowed)\n\t *\n\t * @generated from protobuf enum value: BURN_ONLY = 2;\n\t */\n\tBURN_ONLY = 2,\n}\n/**\n * Information about a regulated coin, which indicates that it makes use of the transfer deny list.\n *\n * @generated from protobuf message sui.rpc.v2.RegulatedCoinMetadata\n */\nexport interface RegulatedCoinMetadata {\n\t/**\n\t * ObjectId of the `0x2::coin::RegulatedCoinMetadata` object.\n\t * Only present for coins that have not been migrated to CoinRegistry.\n\t *\n\t * @generated from protobuf field: optional string id = 1;\n\t */\n\tid?: string;\n\t/**\n\t * The ID of the coin's `CoinMetadata` or `CoinData` object.\n\t *\n\t * @generated from protobuf field: optional string coin_metadata_object = 2;\n\t */\n\tcoinMetadataObject?: string;\n\t/**\n\t * The ID of the coin's `DenyCap` object.\n\t *\n\t * @generated from protobuf field: optional string deny_cap_object = 3;\n\t */\n\tdenyCapObject?: string;\n\t/**\n\t * Whether the coin can be globally paused\n\t *\n\t * @generated from protobuf field: optional bool allow_global_pause = 4;\n\t */\n\tallowGlobalPause?: boolean;\n\t/**\n\t * Variant of the regulated coin metadata\n\t *\n\t * @generated from protobuf field: optional uint32 variant = 5;\n\t */\n\tvariant?: number;\n\t/**\n\t * Indicates the coin's regulated state.\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2.RegulatedCoinMetadata.CoinRegulatedState coin_regulated_state = 6;\n\t */\n\tcoinRegulatedState?: RegulatedCoinMetadata_CoinRegulatedState;\n}\n/**\n * Indicates the state of the regulation of the coin.\n *\n * @generated from protobuf enum sui.rpc.v2.RegulatedCoinMetadata.CoinRegulatedState\n */\nexport enum RegulatedCoinMetadata_CoinRegulatedState {\n\t/**\n\t * Indicates the regulation state of the coin is unknown.\n\t * This is set when a coin has not been migrated to the\n\t * coin registry and has no `0x2::coin::RegulatedCoinMetadata`\n\t * object.\n\t *\n\t * @generated from protobuf enum value: COIN_REGULATED_STATE_UNKNOWN = 0;\n\t */\n\tCOIN_REGULATED_STATE_UNKNOWN = 0,\n\t/**\n\t * Indicates a coin is regulated. RegulatedCoinMetadata will be populated.\n\t *\n\t * @generated from protobuf enum value: REGULATED = 1;\n\t */\n\tREGULATED = 1,\n\t/**\n\t * Indicates a coin is unregulated.\n\t *\n\t * @generated from protobuf enum value: UNREGULATED = 2;\n\t */\n\tUNREGULATED = 2,\n}\n/**\n * Request message for `LiveDataService.GetBalance`.\n *\n * @generated from protobuf message sui.rpc.v2.GetBalanceRequest\n */\nexport interface GetBalanceRequest {\n\t/**\n\t * Required. The owner's Sui address.\n\t *\n\t * @generated from protobuf field: optional string owner = 1;\n\t */\n\towner?: string;\n\t/**\n\t * Required. The type names for the coin (e.g., 0x2::sui::SUI).\n\t *\n\t * @generated from protobuf field: optional string coin_type = 2;\n\t */\n\tcoinType?: string;\n}\n/**\n * Response message for `LiveDataService.GetBalance`.\n * Return the total coin balance for one coin type, owned by the address owner.\n *\n * @generated from protobuf message sui.rpc.v2.GetBalanceResponse\n */\nexport interface GetBalanceResponse {\n\t/**\n\t * The balance information for the requested coin type.\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2.Balance balance = 1;\n\t */\n\tbalance?: Balance;\n}\n/**\n * Request message for `LiveDataService.ListBalances`.\n *\n * @generated from protobuf message sui.rpc.v2.ListBalancesRequest\n */\nexport interface ListBalancesRequest {\n\t/**\n\t * Required. The owner's Sui address.\n\t *\n\t * @generated from protobuf field: optional string owner = 1;\n\t */\n\towner?: string;\n\t/**\n\t * The maximum number of balance entries to return. The service may return fewer than this value.\n\t * If unspecified, at most `50` entries will be returned.\n\t * The maximum value is `1000`; values above `1000` will be coerced to `1000`.\n\t *\n\t * @generated from protobuf field: optional uint32 page_size = 2;\n\t */\n\tpageSize?: number;\n\t/**\n\t * A page token, received from a previous `ListBalances` call.\n\t * Provide this to retrieve the subsequent page.\n\t *\n\t * When paginating, all other parameters provided to `ListBalances` must\n\t * match the call that provided the page token.\n\t *\n\t * @generated from protobuf field: optional bytes page_token = 3;\n\t */\n\tpageToken?: Uint8Array;\n}\n/**\n * Response message for `LiveDataService.ListBalances`.\n * Return the total coin balance for all coin types, owned by the address owner.\n *\n * @generated from protobuf message sui.rpc.v2.ListBalancesResponse\n */\nexport interface ListBalancesResponse {\n\t/**\n\t * The list of coin types and their respective balances.\n\t *\n\t * @generated from protobuf field: repeated sui.rpc.v2.Balance balances = 1;\n\t */\n\tbalances: Balance[];\n\t/**\n\t * A token, which can be sent as `page_token` to retrieve the next page.\n\t * If this field is omitted, there are no subsequent pages.\n\t *\n\t * @generated from protobuf field: optional bytes next_page_token = 2;\n\t */\n\tnextPageToken?: Uint8Array;\n}\n/**\n * Balance information for a specific coin type.\n *\n * @generated from protobuf message sui.rpc.v2.Balance\n */\nexport interface Balance {\n\t/**\n\t * The type of the coin (e.g., 0x2::sui::SUI).\n\t *\n\t * @generated from protobuf field: optional string coin_type = 1;\n\t */\n\tcoinType?: string;\n\t/**\n\t * Shows the total balance of the coin in its smallest unit.\n\t *\n\t * @generated from protobuf field: optional uint64 balance = 3;\n\t */\n\tbalance?: bigint;\n}\n/**\n * Request message for `NodeService.ListDynamicFields`\n *\n * @generated from protobuf message sui.rpc.v2.ListDynamicFieldsRequest\n */\nexport interface ListDynamicFieldsRequest {\n\t/**\n\t * Required. The `UID` of the parent, which owns the collections of dynamic fields.\n\t *\n\t * @generated from protobuf field: optional string parent = 1;\n\t */\n\tparent?: string;\n\t/**\n\t * The maximum number of dynamic fields to return. The service may return fewer than this value.\n\t * If unspecified, at most `50` entries will be returned.\n\t * The maximum value is `1000`; values above `1000` will be coerced to `1000`.\n\t *\n\t * @generated from protobuf field: optional uint32 page_size = 2;\n\t */\n\tpageSize?: number;\n\t/**\n\t * A page token, received from a previous `ListDynamicFields` call.\n\t * Provide this to retrieve the subsequent page.\n\t *\n\t * When paginating, all other parameters provided to `ListDynamicFields` must\n\t * match the call that provided the page token.\n\t *\n\t * @generated from protobuf field: optional bytes page_token = 3;\n\t */\n\tpageToken?: Uint8Array;\n\t/**\n\t * Mask specifying which fields to read.\n\t * If no mask is specified, defaults to `parent,field_id`.\n\t *\n\t * @generated from protobuf field: optional google.protobuf.FieldMask read_mask = 4;\n\t */\n\treadMask?: FieldMask;\n}\n/**\n * Response message for `NodeService.ListDynamicFields`\n *\n * @generated from protobuf message sui.rpc.v2.ListDynamicFieldsResponse\n */\nexport interface ListDynamicFieldsResponse {\n\t/**\n\t * Page of dynamic fields owned by the specified parent.\n\t *\n\t * @generated from protobuf field: repeated sui.rpc.v2.DynamicField dynamic_fields = 1;\n\t */\n\tdynamicFields: DynamicField[];\n\t/**\n\t * A token, which can be sent as `page_token` to retrieve the next page.\n\t * If this field is omitted, there are no subsequent pages.\n\t *\n\t * @generated from protobuf field: optional bytes next_page_token = 2;\n\t */\n\tnextPageToken?: Uint8Array;\n}\n/**\n * @generated from protobuf message sui.rpc.v2.DynamicField\n */\nexport interface DynamicField {\n\t/**\n\t * @generated from protobuf field: optional sui.rpc.v2.DynamicField.DynamicFieldKind kind = 1;\n\t */\n\tkind?: DynamicField_DynamicFieldKind;\n\t/**\n\t * ObjectId of this dynamic field's parent.\n\t *\n\t * @generated from protobuf field: optional string parent = 2;\n\t */\n\tparent?: string;\n\t/**\n\t * ObjectId of this dynamic field.\n\t *\n\t * @generated from protobuf field: optional string field_id = 3;\n\t */\n\tfieldId?: string;\n\t/**\n\t * The field object itself\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2.Object field_object = 4;\n\t */\n\tfieldObject?: Object;\n\t/**\n\t * The dynamic field's \"name\"\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2.Bcs name = 5;\n\t */\n\tname?: Bcs;\n\t/**\n\t * The dynamic field's \"value\"\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2.Bcs value = 6;\n\t */\n\tvalue?: Bcs;\n\t/**\n\t * The type of the dynamic field \"value\".\n\t *\n\t * If this is a dynamic object field then this is the type of the object\n\t * itself (which is a child of this field), otherwise this is the type of the\n\t * value of this field.\n\t *\n\t * @generated from protobuf field: optional string value_type = 7;\n\t */\n\tvalueType?: string;\n\t/**\n\t * The ObjectId of the child object when a child is a dynamic\n\t * object field.\n\t *\n\t * The presence or absence of this field can be used to determine if a child\n\t * is a dynamic field or a dynamic child object\n\t *\n\t * @generated from protobuf field: optional string child_id = 8;\n\t */\n\tchildId?: string;\n\t/**\n\t * The object itself when a child is a dynamic object field.\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2.Object child_object = 9;\n\t */\n\tchildObject?: Object;\n}\n/**\n * @generated from protobuf enum sui.rpc.v2.DynamicField.DynamicFieldKind\n */\nexport enum DynamicField_DynamicFieldKind {\n\t/**\n\t * @generated from protobuf enum value: DYNAMIC_FIELD_KIND_UNKNOWN = 0;\n\t */\n\tDYNAMIC_FIELD_KIND_UNKNOWN = 0,\n\t/**\n\t * @generated from protobuf enum value: FIELD = 1;\n\t */\n\tFIELD = 1,\n\t/**\n\t * @generated from protobuf enum value: OBJECT = 2;\n\t */\n\tOBJECT = 2,\n}\n/**\n * @generated from protobuf message sui.rpc.v2.ListOwnedObjectsRequest\n */\nexport interface ListOwnedObjectsRequest {\n\t/**\n\t * Required. The address of the account that owns the objects.\n\t *\n\t * @generated from protobuf field: optional string owner = 1;\n\t */\n\towner?: string;\n\t/**\n\t * The maximum number of entries return. The service may return fewer than this value.\n\t * If unspecified, at most `50` entries will be returned.\n\t * The maximum value is `1000`; values above `1000` will be coerced to `1000`.\n\t *\n\t * @generated from protobuf field: optional uint32 page_size = 2;\n\t */\n\tpageSize?: number;\n\t/**\n\t * A page token, received from a previous `ListOwnedObjects` call.\n\t * Provide this to retrieve the subsequent page.\n\t *\n\t * When paginating, all other parameters provided to `ListOwnedObjects` must\n\t * match the call that provided the page token.\n\t *\n\t * @generated from protobuf field: optional bytes page_token = 3;\n\t */\n\tpageToken?: Uint8Array;\n\t/**\n\t * Mask specifying which fields to read.\n\t * If no mask is specified, defaults to `object_id,version,object_type`.\n\t *\n\t * @generated from protobuf field: optional google.protobuf.FieldMask read_mask = 4;\n\t */\n\treadMask?: FieldMask;\n\t/**\n\t * Optional type filter to limit the types of objects listed.\n\t *\n\t * Providing an object type with no type params will return objects of that\n\t * type with any type parameter, e.g. `0x2::coin::Coin` will return all\n\t * `Coin<T>` objects regardless of the type parameter `T`. Providing a type\n\t * with a type param will restrict the returned objects to only those objects\n\t * that match the provided type parameters, e.g.\n\t * `0x2::coin::Coin<0x2::sui::SUI>` will only return `Coin<SUI>` objects.\n\t *\n\t * @generated from protobuf field: optional string object_type = 5;\n\t */\n\tobjectType?: string;\n}\n/**\n * @generated from protobuf message sui.rpc.v2.ListOwnedObjectsResponse\n */\nexport interface ListOwnedObjectsResponse {\n\t/**\n\t * Page of dynamic fields owned by the specified parent.\n\t *\n\t * @generated from protobuf field: repeated sui.rpc.v2.Object objects = 1;\n\t */\n\tobjects: Object[];\n\t/**\n\t * A token, which can be sent as `page_token` to retrieve the next page.\n\t * If this field is omitted, there are no subsequent pages.\n\t *\n\t * @generated from protobuf field: optional bytes next_page_token = 2;\n\t */\n\tnextPageToken?: Uint8Array;\n}\n// @generated message type with reflection information, may provide speed optimized methods\nclass GetCoinInfoRequest$Type extends MessageType<GetCoinInfoRequest> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.GetCoinInfoRequest', [\n\t\t\t{ no: 1, name: 'coin_type', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.GetCoinInfoRequest\n */\nexport const GetCoinInfoRequest = new GetCoinInfoRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass GetCoinInfoResponse$Type extends MessageType<GetCoinInfoResponse> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.GetCoinInfoResponse', [\n\t\t\t{ no: 1, name: 'coin_type', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 2, name: 'metadata', kind: 'message', T: () => CoinMetadata },\n\t\t\t{ no: 3, name: 'treasury', kind: 'message', T: () => CoinTreasury },\n\t\t\t{ no: 4, name: 'regulated_metadata', kind: 'message', T: () => RegulatedCoinMetadata },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.GetCoinInfoResponse\n */\nexport const GetCoinInfoResponse = new GetCoinInfoResponse$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass CoinMetadata$Type extends MessageType<CoinMetadata> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.CoinMetadata', [\n\t\t\t{ no: 1, name: 'id', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 2, name: 'decimals', kind: 'scalar', opt: true, T: 13 /*ScalarType.UINT32*/ },\n\t\t\t{ no: 3, name: 'name', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 4, name: 'symbol', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 5, name: 'description', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 6, name: 'icon_url', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 7, name: 'metadata_cap_id', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{\n\t\t\t\tno: 8,\n\t\t\t\tname: 'metadata_cap_state',\n\t\t\t\tkind: 'enum',\n\t\t\t\topt: true,\n\t\t\t\tT: () => ['sui.rpc.v2.CoinMetadata.MetadataCapState', CoinMetadata_MetadataCapState],\n\t\t\t},\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.CoinMetadata\n */\nexport const CoinMetadata = new CoinMetadata$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass CoinTreasury$Type extends MessageType<CoinTreasury> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.CoinTreasury', [\n\t\t\t{ no: 1, name: 'id', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{\n\t\t\t\tno: 2,\n\t\t\t\tname: 'total_supply',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 3,\n\t\t\t\tname: 'supply_state',\n\t\t\t\tkind: 'enum',\n\t\t\t\topt: true,\n\t\t\t\tT: () => ['sui.rpc.v2.CoinTreasury.SupplyState', CoinTreasury_SupplyState],\n\t\t\t},\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.CoinTreasury\n */\nexport const CoinTreasury = new CoinTreasury$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass RegulatedCoinMetadata$Type extends MessageType<RegulatedCoinMetadata> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.RegulatedCoinMetadata', [\n\t\t\t{ no: 1, name: 'id', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{\n\t\t\t\tno: 2,\n\t\t\t\tname: 'coin_metadata_object',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 9 /*ScalarType.STRING*/,\n\t\t\t},\n\t\t\t{ no: 3, name: 'deny_cap_object', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 4, name: 'allow_global_pause', kind: 'scalar', opt: true, T: 8 /*ScalarType.BOOL*/ },\n\t\t\t{ no: 5, name: 'variant', kind: 'scalar', opt: true, T: 13 /*ScalarType.UINT32*/ },\n\t\t\t{\n\t\t\t\tno: 6,\n\t\t\t\tname: 'coin_regulated_state',\n\t\t\t\tkind: 'enum',\n\t\t\t\topt: true,\n\t\t\t\tT: () => [\n\t\t\t\t\t'sui.rpc.v2.RegulatedCoinMetadata.CoinRegulatedState',\n\t\t\t\t\tRegulatedCoinMetadata_CoinRegulatedState,\n\t\t\t\t],\n\t\t\t},\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.RegulatedCoinMetadata\n */\nexport const RegulatedCoinMetadata = new RegulatedCoinMetadata$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass GetBalanceRequest$Type extends MessageType<GetBalanceRequest> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.GetBalanceRequest', [\n\t\t\t{ no: 1, name: 'owner', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 2, name: 'coin_type', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.GetBalanceRequest\n */\nexport const GetBalanceRequest = new GetBalanceRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass GetBalanceResponse$Type extends MessageType<GetBalanceResponse> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.GetBalanceResponse', [\n\t\t\t{ no: 1, name: 'balance', kind: 'message', T: () => Balance },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.GetBalanceResponse\n */\nexport const GetBalanceResponse = new GetBalanceResponse$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ListBalancesRequest$Type extends MessageType<ListBalancesRequest> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.ListBalancesRequest', [\n\t\t\t{ no: 1, name: 'owner', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 2, name: 'page_size', kind: 'scalar', opt: true, T: 13 /*ScalarType.UINT32*/ },\n\t\t\t{ no: 3, name: 'page_token', kind: 'scalar', opt: true, T: 12 /*ScalarType.BYTES*/ },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.ListBalancesRequest\n */\nexport const ListBalancesRequest = new ListBalancesRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ListBalancesResponse$Type extends MessageType<ListBalancesResponse> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.ListBalancesResponse', [\n\t\t\t{\n\t\t\t\tno: 1,\n\t\t\t\tname: 'balances',\n\t\t\t\tkind: 'message',\n\t\t\t\trepeat: 1 /*RepeatType.PACKED*/,\n\t\t\t\tT: () => Balance,\n\t\t\t},\n\t\t\t{ no: 2, name: 'next_page_token', kind: 'scalar', opt: true, T: 12 /*ScalarType.BYTES*/ },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.ListBalancesResponse\n */\nexport const ListBalancesResponse = new ListBalancesResponse$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass Balance$Type extends MessageType<Balance> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.Balance', [\n\t\t\t{ no: 1, name: 'coin_type', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{\n\t\t\t\tno: 3,\n\t\t\t\tname: 'balance',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.Balance\n */\nexport const Balance = new Balance$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ListDynamicFieldsRequest$Type extends MessageType<ListDynamicFieldsRequest> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.ListDynamicFieldsRequest', [\n\t\t\t{ no: 1, name: 'parent', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 2, name: 'page_size', kind: 'scalar', opt: true, T: 13 /*ScalarType.UINT32*/ },\n\t\t\t{ no: 3, name: 'page_token', kind: 'scalar', opt: true, T: 12 /*ScalarType.BYTES*/ },\n\t\t\t{ no: 4, name: 'read_mask', kind: 'message', T: () => FieldMask },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.ListDynamicFieldsRequest\n */\nexport const ListDynamicFieldsRequest = new ListDynamicFieldsRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ListDynamicFieldsResponse$Type extends MessageType<ListDynamicFieldsResponse> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.ListDynamicFieldsResponse', [\n\t\t\t{\n\t\t\t\tno: 1,\n\t\t\t\tname: 'dynamic_fields',\n\t\t\t\tkind: 'message',\n\t\t\t\trepeat: 1 /*RepeatType.PACKED*/,\n\t\t\t\tT: () => DynamicField,\n\t\t\t},\n\t\t\t{ no: 2, name: 'next_page_token', kind: 'scalar', opt: true, T: 12 /*ScalarType.BYTES*/ },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.ListDynamicFieldsResponse\n */\nexport const ListDynamicFieldsResponse = new ListDynamicFieldsResponse$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass DynamicField$Type extends MessageType<DynamicField> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.DynamicField', [\n\t\t\t{\n\t\t\t\tno: 1,\n\t\t\t\tname: 'kind',\n\t\t\t\tkind: 'enum',\n\t\t\t\topt: true,\n\t\t\t\tT: () => ['sui.rpc.v2.DynamicField.DynamicFieldKind', DynamicField_DynamicFieldKind],\n\t\t\t},\n\t\t\t{ no: 2, name: 'parent', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 3, name: 'field_id', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 4, name: 'field_object', kind: 'message', T: () => Object },\n\t\t\t{ no: 5, name: 'name', kind: 'message', T: () => Bcs },\n\t\t\t{ no: 6, name: 'value', kind: 'message', T: () => Bcs },\n\t\t\t{ no: 7, name: 'value_type', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 8, name: 'child_id', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 9, name: 'child_object', kind: 'message', T: () => Object },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.DynamicField\n */\nexport const DynamicField = new DynamicField$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ListOwnedObjectsRequest$Type extends MessageType<ListOwnedObjectsRequest> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.ListOwnedObjectsRequest', [\n\t\t\t{ no: 1, name: 'owner', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 2, name: 'page_size', kind: 'scalar', opt: true, T: 13 /*ScalarType.UINT32*/ },\n\t\t\t{ no: 3, name: 'page_token', kind: 'scalar', opt: true, T: 12 /*ScalarType.BYTES*/ },\n\t\t\t{ no: 4, name: 'read_mask', kind: 'message', T: () => FieldMask },\n\t\t\t{ no: 5, name: 'object_type', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.ListOwnedObjectsRequest\n */\nexport const ListOwnedObjectsRequest = new ListOwnedObjectsRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ListOwnedObjectsResponse$Type extends MessageType<ListOwnedObjectsResponse> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.ListOwnedObjectsResponse', [\n\t\t\t{ no: 1, name: 'objects', kind: 'message', repeat: 1 /*RepeatType.PACKED*/, T: () => Object },\n\t\t\t{ no: 2, name: 'next_page_token', kind: 'scalar', opt: true, T: 12 /*ScalarType.BYTES*/ },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.ListOwnedObjectsResponse\n */\nexport const ListOwnedObjectsResponse = new ListOwnedObjectsResponse$Type();\n/**\n * @generated ServiceType for protobuf service sui.rpc.v2.StateService\n */\nexport const StateService = new ServiceType('sui.rpc.v2.StateService', [\n\t{\n\t\tname: 'ListDynamicFields',\n\t\toptions: {},\n\t\tI: ListDynamicFieldsRequest,\n\t\tO: ListDynamicFieldsResponse,\n\t},\n\t{\n\t\tname: 'ListOwnedObjects',\n\t\toptions: {},\n\t\tI: ListOwnedObjectsRequest,\n\t\tO: ListOwnedObjectsResponse,\n\t},\n\t{ name: 'GetCoinInfo', options: {}, I: GetCoinInfoRequest, O: GetCoinInfoResponse },\n\t{ name: 'GetBalance', options: {}, I: GetBalanceRequest, O: GetBalanceResponse },\n\t{ name: 'ListBalances', options: {}, I: ListBalancesRequest, O: ListBalancesResponse },\n]);\n"],
  "mappings": "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",
  "names": ["CoinMetadata_MetadataCapState", "CoinTreasury_SupplyState", "RegulatedCoinMetadata_CoinRegulatedState", "DynamicField_DynamicFieldKind"]
}
