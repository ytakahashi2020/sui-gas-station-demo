{
  "version": 3,
  "sources": ["../../../../../../../src/grpc/proto/sui/rpc/v2/input.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\n// @generated by protobuf-ts 2.9.6 with parameter force_server_none,optimize_code_size,ts_nocheck\n// @generated from protobuf file \"sui/rpc/v2/input.proto\" (package \"sui.rpc.v2\", syntax proto3)\n// tslint:disable\n// @ts-nocheck\n//\n// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n//\nimport { MessageType } from '@protobuf-ts/runtime';\nimport { Value } from '../../../google/protobuf/struct.js';\n/**\n * An input to a user transaction.\n *\n * @generated from protobuf message sui.rpc.v2.Input\n */\nexport interface Input {\n\t/**\n\t * @generated from protobuf field: optional sui.rpc.v2.Input.InputKind kind = 1;\n\t */\n\tkind?: Input_InputKind;\n\t/**\n\t * A move value serialized as BCS.\n\t *\n\t * For normal operations this is required to be a move primitive type and not contain structs\n\t * or objects.\n\t *\n\t * @generated from protobuf field: optional bytes pure = 2;\n\t */\n\tpure?: Uint8Array;\n\t/**\n\t * `ObjectId` of the object input.\n\t *\n\t * @generated from protobuf field: optional string object_id = 3;\n\t */\n\tobjectId?: string;\n\t/**\n\t * Requested version of the input object when `kind` is `IMMUTABLE_OR_OWNED`\n\t * or `RECEIVING` or if `kind` is `SHARED` this is the initial version of the\n\t * object when it was shared\n\t *\n\t * @generated from protobuf field: optional uint64 version = 4;\n\t */\n\tversion?: bigint;\n\t/**\n\t * The digest of this object.\n\t *\n\t * @generated from protobuf field: optional string digest = 5;\n\t */\n\tdigest?: string;\n\t/**\n\t * Controls whether the caller asks for a mutable reference to the shared\n\t * object.\n\t *\n\t * @generated from protobuf field: optional bool mutable = 6;\n\t */\n\tmutable?: boolean;\n\t/**\n\t * A literal value\n\t *\n\t * INPUT ONLY\n\t *\n\t * @generated from protobuf field: optional google.protobuf.Value literal = 1000;\n\t */\n\tliteral?: Value;\n}\n/**\n * @generated from protobuf enum sui.rpc.v2.Input.InputKind\n */\nexport enum Input_InputKind {\n\t/**\n\t * @generated from protobuf enum value: INPUT_KIND_UNKNOWN = 0;\n\t */\n\tINPUT_KIND_UNKNOWN = 0,\n\t/**\n\t * A move value serialized as BCS.\n\t *\n\t * @generated from protobuf enum value: PURE = 1;\n\t */\n\tPURE = 1,\n\t/**\n\t * A Move object that is either immutable or address owned.\n\t *\n\t * @generated from protobuf enum value: IMMUTABLE_OR_OWNED = 2;\n\t */\n\tIMMUTABLE_OR_OWNED = 2,\n\t/**\n\t * A Move object whose owner is \"Shared\".\n\t *\n\t * @generated from protobuf enum value: SHARED = 3;\n\t */\n\tSHARED = 3,\n\t/**\n\t * A Move object that is attempted to be received in this transaction.\n\t *\n\t * @generated from protobuf enum value: RECEIVING = 4;\n\t */\n\tRECEIVING = 4,\n}\n// @generated message type with reflection information, may provide speed optimized methods\nclass Input$Type extends MessageType<Input> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.Input', [\n\t\t\t{\n\t\t\t\tno: 1,\n\t\t\t\tname: 'kind',\n\t\t\t\tkind: 'enum',\n\t\t\t\topt: true,\n\t\t\t\tT: () => ['sui.rpc.v2.Input.InputKind', Input_InputKind],\n\t\t\t},\n\t\t\t{ no: 2, name: 'pure', kind: 'scalar', opt: true, T: 12 /*ScalarType.BYTES*/ },\n\t\t\t{ no: 3, name: 'object_id', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{\n\t\t\t\tno: 4,\n\t\t\t\tname: 'version',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{ no: 5, name: 'digest', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 6, name: 'mutable', kind: 'scalar', opt: true, T: 8 /*ScalarType.BOOL*/ },\n\t\t\t{ no: 1000, name: 'literal', kind: 'message', T: () => Value },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.Input\n */\nexport const Input = new Input$Type();\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA,qBAA4B;AAC5B,oBAAsB;AA2Df,IAAK,kBAAL,kBAAKA,qBAAL;AAIN,EAAAA,kCAAA,wBAAqB,KAArB;AAMA,EAAAA,kCAAA,UAAO,KAAP;AAMA,EAAAA,kCAAA,wBAAqB,KAArB;AAMA,EAAAA,kCAAA,YAAS,KAAT;AAMA,EAAAA,kCAAA,eAAY,KAAZ;AA5BW,SAAAA;AAAA,GAAA;AA+BZ,MAAM,mBAAmB,2BAAmB;AAAA,EAC3C,cAAc;AACb,UAAM,oBAAoB;AAAA,MACzB;AAAA,QACC,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA,QACN,KAAK;AAAA,QACL,GAAG,MAAM,CAAC,8BAA8B,eAAe;AAAA,MACxD;AAAA,MACA;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAQ,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,MAC7E;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAa,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,MAClF;AAAA,QACC,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA,QACN,KAAK;AAAA,QACL,GAAG;AAAA,QACH,GAAG;AAAA,MACJ;AAAA,MACA;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAU,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,MAC/E;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAW,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAsB;AAAA,MAC9E,EAAE,IAAI,KAAM,MAAM,WAAW,MAAM,WAAW,GAAG,MAAM,oBAAM;AAAA,IAC9D,CAAC;AAAA,EACF;AACD;AAIO,MAAM,QAAQ,IAAI,WAAW;",
  "names": ["Input_InputKind"]
}
