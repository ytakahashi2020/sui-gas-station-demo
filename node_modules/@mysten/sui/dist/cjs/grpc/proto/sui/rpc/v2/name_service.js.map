{
  "version": 3,
  "sources": ["../../../../../../../src/grpc/proto/sui/rpc/v2/name_service.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\n// @generated by protobuf-ts 2.9.6 with parameter force_server_none,optimize_code_size,ts_nocheck\n// @generated from protobuf file \"sui/rpc/v2/name_service.proto\" (package \"sui.rpc.v2\", syntax proto3)\n// tslint:disable\n// @ts-nocheck\n//\n// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n//\nimport { ServiceType } from '@protobuf-ts/runtime-rpc';\nimport { MessageType } from '@protobuf-ts/runtime';\nimport { Timestamp } from '../../../google/protobuf/timestamp.js';\n/**\n * @generated from protobuf message sui.rpc.v2.LookupNameRequest\n */\nexport interface LookupNameRequest {\n\t/**\n\t * Required. The SuiNS name to lookup.\n\t *\n\t * Supports both `@name` as well as `name.sui` formats.\n\t *\n\t * @generated from protobuf field: optional string name = 1;\n\t */\n\tname?: string;\n}\n/**\n * @generated from protobuf message sui.rpc.v2.LookupNameResponse\n */\nexport interface LookupNameResponse {\n\t/**\n\t * The record for the requested name\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2.NameRecord record = 1;\n\t */\n\trecord?: NameRecord;\n}\n/**\n * @generated from protobuf message sui.rpc.v2.ReverseLookupNameRequest\n */\nexport interface ReverseLookupNameRequest {\n\t/**\n\t * Required. The address to perform a reverse lookup for.\n\t *\n\t * @generated from protobuf field: optional string address = 1;\n\t */\n\taddress?: string;\n}\n/**\n * @generated from protobuf message sui.rpc.v2.ReverseLookupNameResponse\n */\nexport interface ReverseLookupNameResponse {\n\t/**\n\t * The record for the SuiNS name linked to the requested address\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2.NameRecord record = 1;\n\t */\n\trecord?: NameRecord;\n}\n/**\n * @generated from protobuf message sui.rpc.v2.NameRecord\n */\nexport interface NameRecord {\n\t/**\n\t * Id of this record.\n\t *\n\t * Note that records are stored on chain as dynamic fields of the type\n\t * `Field<Domain,NameRecord>`.\n\t *\n\t * @generated from protobuf field: optional string id = 1;\n\t */\n\tid?: string;\n\t/**\n\t * The SuiNS name of this record\n\t *\n\t * @generated from protobuf field: optional string name = 2;\n\t */\n\tname?: string;\n\t/**\n\t * The ID of the `RegistrationNFT` assigned to this record.\n\t *\n\t * The owner of the corresponding `RegistrationNFT` has the rights to\n\t * be able to change and adjust the `target_address` of this domain.\n\t *\n\t * It is possible that the ID changes if the record expires and is\n\t * purchased by someone else.\n\t *\n\t * @generated from protobuf field: optional string registration_nft_id = 3;\n\t */\n\tregistrationNftId?: string;\n\t/**\n\t * Timestamp when the record expires.\n\t *\n\t * This is either the expiration of the record itself or the expiration of\n\t * this record's parent if this is a leaf record.\n\t *\n\t * @generated from protobuf field: optional google.protobuf.Timestamp expiration_timestamp = 4;\n\t */\n\texpirationTimestamp?: Timestamp;\n\t/**\n\t * The target address that this name points to\n\t *\n\t * @generated from protobuf field: optional string target_address = 5;\n\t */\n\ttargetAddress?: string;\n\t/**\n\t * Additional data which may be stored in a record\n\t *\n\t * @generated from protobuf field: map<string, string> data = 6;\n\t */\n\tdata: {\n\t\t[key: string]: string;\n\t};\n}\n// @generated message type with reflection information, may provide speed optimized methods\nclass LookupNameRequest$Type extends MessageType<LookupNameRequest> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.LookupNameRequest', [\n\t\t\t{ no: 1, name: 'name', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.LookupNameRequest\n */\nexport const LookupNameRequest = new LookupNameRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass LookupNameResponse$Type extends MessageType<LookupNameResponse> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.LookupNameResponse', [\n\t\t\t{ no: 1, name: 'record', kind: 'message', T: () => NameRecord },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.LookupNameResponse\n */\nexport const LookupNameResponse = new LookupNameResponse$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ReverseLookupNameRequest$Type extends MessageType<ReverseLookupNameRequest> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.ReverseLookupNameRequest', [\n\t\t\t{ no: 1, name: 'address', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.ReverseLookupNameRequest\n */\nexport const ReverseLookupNameRequest = new ReverseLookupNameRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ReverseLookupNameResponse$Type extends MessageType<ReverseLookupNameResponse> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.ReverseLookupNameResponse', [\n\t\t\t{ no: 1, name: 'record', kind: 'message', T: () => NameRecord },\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.ReverseLookupNameResponse\n */\nexport const ReverseLookupNameResponse = new ReverseLookupNameResponse$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass NameRecord$Type extends MessageType<NameRecord> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2.NameRecord', [\n\t\t\t{ no: 1, name: 'id', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 2, name: 'name', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 3, name: 'registration_nft_id', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 4, name: 'expiration_timestamp', kind: 'message', T: () => Timestamp },\n\t\t\t{ no: 5, name: 'target_address', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{\n\t\t\t\tno: 6,\n\t\t\t\tname: 'data',\n\t\t\t\tkind: 'map',\n\t\t\t\tK: 9 /*ScalarType.STRING*/,\n\t\t\t\tV: { kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n\t\t\t},\n\t\t]);\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2.NameRecord\n */\nexport const NameRecord = new NameRecord$Type();\n/**\n * @generated ServiceType for protobuf service sui.rpc.v2.NameService\n */\nexport const NameService = new ServiceType('sui.rpc.v2.NameService', [\n\t{ name: 'LookupName', options: {}, I: LookupNameRequest, O: LookupNameResponse },\n\t{\n\t\tname: 'ReverseLookupName',\n\t\toptions: {},\n\t\tI: ReverseLookupNameRequest,\n\t\tO: ReverseLookupNameResponse,\n\t},\n]);\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA,yBAA4B;AAC5B,qBAA4B;AAC5B,uBAA0B;AAuG1B,MAAM,+BAA+B,2BAA+B;AAAA,EACnE,cAAc;AACb,UAAM,gCAAgC;AAAA,MACrC;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAQ,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,IAC9E,CAAC;AAAA,EACF;AACD;AAIO,MAAM,oBAAoB,IAAI,uBAAuB;AAE5D,MAAM,gCAAgC,2BAAgC;AAAA,EACrE,cAAc;AACb,UAAM,iCAAiC;AAAA,MACtC,EAAE,IAAI,GAAG,MAAM,UAAU,MAAM,WAAW,GAAG,MAAM,WAAW;AAAA,IAC/D,CAAC;AAAA,EACF;AACD;AAIO,MAAM,qBAAqB,IAAI,wBAAwB;AAE9D,MAAM,sCAAsC,2BAAsC;AAAA,EACjF,cAAc;AACb,UAAM,uCAAuC;AAAA,MAC5C;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAW,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,IACjF,CAAC;AAAA,EACF;AACD;AAIO,MAAM,2BAA2B,IAAI,8BAA8B;AAE1E,MAAM,uCAAuC,2BAAuC;AAAA,EACnF,cAAc;AACb,UAAM,wCAAwC;AAAA,MAC7C,EAAE,IAAI,GAAG,MAAM,UAAU,MAAM,WAAW,GAAG,MAAM,WAAW;AAAA,IAC/D,CAAC;AAAA,EACF;AACD;AAIO,MAAM,4BAA4B,IAAI,+BAA+B;AAE5E,MAAM,wBAAwB,2BAAwB;AAAA,EACrD,cAAc;AACb,UAAM,yBAAyB;AAAA,MAC9B;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAM,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,MAC3E;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAQ,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,MAC7E;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAuB,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,MAC5F,EAAE,IAAI,GAAG,MAAM,wBAAwB,MAAM,WAAW,GAAG,MAAM,2BAAU;AAAA,MAC3E;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAkB,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,MACvF;AAAA,QACC,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA,QACN,GAAG;AAAA,QACH,GAAG;AAAA,UAAE,MAAM;AAAA,UAAU,GAAG;AAAA;AAAA,QAAwB;AAAA,MACjD;AAAA,IACD,CAAC;AAAA,EACF;AACD;AAIO,MAAM,aAAa,IAAI,gBAAgB;AAIvC,MAAM,cAAc,IAAI,+BAAY,0BAA0B;AAAA,EACpE,EAAE,MAAM,cAAc,SAAS,CAAC,GAAG,GAAG,mBAAmB,GAAG,mBAAmB;AAAA,EAC/E;AAAA,IACC,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,IACV,GAAG;AAAA,IACH,GAAG;AAAA,EACJ;AACD,CAAC;",
  "names": []
}
